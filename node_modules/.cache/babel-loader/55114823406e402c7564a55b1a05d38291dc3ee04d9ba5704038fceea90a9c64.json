{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"internalForwardedProps\"],\n  _excluded2 = [\"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"component\"];\nimport useForkRef from '@mui/utils/useForkRef';\nimport appendOwnerState from '@mui/utils/appendOwnerState';\nimport resolveComponentProps from '@mui/utils/resolveComponentProps';\nimport mergeSlotProps from '@mui/utils/mergeSlotProps';\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nexport default function useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  var className = parameters.className,\n    initialElementType = parameters.elementType,\n    ownerState = parameters.ownerState,\n    externalForwardedProps = parameters.externalForwardedProps,\n    internalForwardedProps = parameters.internalForwardedProps,\n    useSlotPropsParams = _objectWithoutProperties(parameters, _excluded);\n  var rootComponent = externalForwardedProps.component,\n    _externalForwardedPro = externalForwardedProps.slots,\n    slots = _externalForwardedPro === void 0 ? _defineProperty({}, name, undefined) : _externalForwardedPro,\n    _externalForwardedPro2 = externalForwardedProps.slotProps,\n    slotProps = _externalForwardedPro2 === void 0 ? _defineProperty({}, name, undefined) : _externalForwardedPro2,\n    other = _objectWithoutProperties(externalForwardedProps, _excluded2);\n  var elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  var resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n  var _mergeSlotProps = mergeSlotProps(_objectSpread(_objectSpread({\n      className: className\n    }, useSlotPropsParams), {}, {\n      externalForwardedProps: name === 'root' ? other : undefined,\n      externalSlotProps: resolvedComponentsProps\n    })),\n    _mergeSlotProps$props = _mergeSlotProps.props,\n    slotComponent = _mergeSlotProps$props.component,\n    mergedProps = _objectWithoutProperties(_mergeSlotProps$props, _excluded3),\n    internalRef = _mergeSlotProps.internalRef;\n  var ref = useForkRef(internalRef, resolvedComponentsProps === null || resolvedComponentsProps === void 0 ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n  var LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  var props = appendOwnerState(elementType, _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps), name !== 'root' && !slots[name] && internalForwardedProps), mergedProps), LeafComponent && {\n    as: LeafComponent\n  }), {}, {\n    ref: ref\n  }), ownerState);\n  return [elementType, props];\n}","map":{"version":3,"names":["_objectSpread","_defineProperty","_objectWithoutProperties","_excluded","_excluded2","_excluded3","useForkRef","appendOwnerState","resolveComponentProps","mergeSlotProps","useSlot","name","parameters","className","initialElementType","elementType","ownerState","externalForwardedProps","internalForwardedProps","useSlotPropsParams","rootComponent","component","_externalForwardedPro","slots","undefined","_externalForwardedPro2","slotProps","other","resolvedComponentsProps","_mergeSlotProps","externalSlotProps","_mergeSlotProps$props","props","slotComponent","mergedProps","internalRef","ref","LeafComponent","as"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mui/material/utils/useSlot.js"],"sourcesContent":["'use client';\n\nimport useForkRef from '@mui/utils/useForkRef';\nimport appendOwnerState from '@mui/utils/appendOwnerState';\nimport resolveComponentProps from '@mui/utils/resolveComponentProps';\nimport mergeSlotProps from '@mui/utils/mergeSlotProps';\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nexport default function useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n    className,\n    elementType: initialElementType,\n    ownerState,\n    externalForwardedProps,\n    internalForwardedProps,\n    ...useSlotPropsParams\n  } = parameters;\n  const {\n    component: rootComponent,\n    slots = {\n      [name]: undefined\n    },\n    slotProps = {\n      [name]: undefined\n    },\n    ...other\n  } = externalForwardedProps;\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n  const {\n    props: {\n      component: slotComponent,\n      ...mergedProps\n    },\n    internalRef\n  } = mergeSlotProps({\n    className,\n    ...useSlotPropsParams,\n    externalForwardedProps: name === 'root' ? other : undefined,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.ref);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = appendOwnerState(elementType, {\n    ...(name === 'root' && !rootComponent && !slots[name] && internalForwardedProps),\n    ...(name !== 'root' && !slots[name] && internalForwardedProps),\n    ...mergedProps,\n    ...(LeafComponent && {\n      as: LeafComponent\n    }),\n    ref\n  }, ownerState);\n  return [elementType, props];\n}"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,aAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,wBAAA;AAAA,IAAAC,SAAA;EAAAC,UAAA;EAAAC,UAAA;AAEb,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,gBAAgB,MAAM,6BAA6B;AAC1D,OAAOC,qBAAqB,MAAM,kCAAkC;AACpE,OAAOC,cAAc,MAAM,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,OAAOA;AAC/B;AACA;AACA;AACA;AACA;AACA;AACAC,IAAI,EAAEC,UAAU,EAAE;EAChB,IACEC,SAAS,GAMPD,UAAU,CANZC,SAAS;IACIC,kBAAkB,GAK7BF,UAAU,CALZG,WAAW;IACXC,UAAU,GAIRJ,UAAU,CAJZI,UAAU;IACVC,sBAAsB,GAGpBL,UAAU,CAHZK,sBAAsB;IACtBC,sBAAsB,GAEpBN,UAAU,CAFZM,sBAAsB;IACnBC,kBAAkB,GAAAjB,wBAAA,CACnBU,UAAU,EAAAT,SAAA;EACd,IACaiB,aAAa,GAQtBH,sBAAsB,CARxBI,SAAS;IAAAC,qBAAA,GAQPL,sBAAsB,CAPxBM,KAAK;IAALA,KAAK,GAAAD,qBAAA,cAAArB,eAAA,KACFU,IAAI,EAAGa,SAAS,IAAAF,qBAAA;IAAAG,sBAAA,GAMjBR,sBAAsB,CAJxBS,SAAS;IAATA,SAAS,GAAAD,sBAAA,cAAAxB,eAAA,KACNU,IAAI,EAAGa,SAAS,IAAAC,sBAAA;IAEhBE,KAAK,GAAAzB,wBAAA,CACNe,sBAAsB,EAAAb,UAAA;EAC1B,IAAMW,WAAW,GAAGQ,KAAK,CAACZ,IAAI,CAAC,IAAIG,kBAAkB;;EAErD;EACA;EACA,IAAMc,uBAAuB,GAAGpB,qBAAqB,CAACkB,SAAS,CAACf,IAAI,CAAC,EAAEK,UAAU,CAAC;EAClF,IAAAa,eAAA,GAMIpB,cAAc,CAAAT,aAAA,CAAAA,aAAA;MAChBa,SAAS,EAATA;IAAS,GACNM,kBAAkB;MACrBF,sBAAsB,EAAEN,IAAI,KAAK,MAAM,GAAGgB,KAAK,GAAGH,SAAS;MAC3DM,iBAAiB,EAAEF;IAAuB,EAC3C,CAAC;IAAAG,qBAAA,GAAAF,eAAA,CAVAG,KAAK;IACQC,aAAa,GAAAF,qBAAA,CAAxBV,SAAS;IACNa,WAAW,GAAAhC,wBAAA,CAAA6B,qBAAA,EAAA1B,UAAA;IAEhB8B,WAAW,GAAAN,eAAA,CAAXM,WAAW;EAOb,IAAMC,GAAG,GAAG9B,UAAU,CAAC6B,WAAW,EAAEP,uBAAuB,aAAvBA,uBAAuB,uBAAvBA,uBAAuB,CAAEQ,GAAG,EAAExB,UAAU,CAACwB,GAAG,CAAC;EACjF,IAAMC,aAAa,GAAG1B,IAAI,KAAK,MAAM,GAAGsB,aAAa,IAAIb,aAAa,GAAGa,aAAa;EACtF,IAAMD,KAAK,GAAGzB,gBAAgB,CAACQ,WAAW,EAAAf,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACpCW,IAAI,KAAK,MAAM,IAAI,CAACS,aAAa,IAAI,CAACG,KAAK,CAACZ,IAAI,CAAC,IAAIO,sBAAsB,GAC3EP,IAAI,KAAK,MAAM,IAAI,CAACY,KAAK,CAACZ,IAAI,CAAC,IAAIO,sBAAsB,GAC1DgB,WAAW,GACVG,aAAa,IAAI;IACnBC,EAAE,EAAED;EACN,CAAC;IACDD,GAAG,EAAHA;EAAG,IACFpB,UAAU,CAAC;EACd,OAAO,CAACD,WAAW,EAAEiB,KAAK,CAAC;AAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}