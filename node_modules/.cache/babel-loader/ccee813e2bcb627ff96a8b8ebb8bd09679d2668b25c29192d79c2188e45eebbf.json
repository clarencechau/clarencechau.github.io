{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useId, useUncontrolled, useElementSize } from '@mantine/hooks';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Anchor } from '../Anchor/Anchor.mjs';\nimport classes from './Spoiler.module.css.mjs';\nconst defaultProps = {\n  maxHeight: 100,\n  initialState: false\n};\nconst varsResolver = createVarsResolver((_, {\n  transitionDuration\n}) => ({\n  root: {\n    \"--spoiler-transition-duration\": transitionDuration !== void 0 ? `${transitionDuration}ms` : void 0\n  }\n}));\nconst Spoiler = factory((_props, ref) => {\n  const props = useProps(\"Spoiler\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    initialState,\n    maxHeight,\n    hideLabel,\n    showLabel,\n    children,\n    controlRef,\n    transitionDuration,\n    id,\n    expanded,\n    onExpandedChange,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Spoiler\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const _id = useId(id);\n  const regionId = `${_id}-region`;\n  const [show, setShowState] = useUncontrolled({\n    value: expanded,\n    defaultValue: initialState,\n    finalValue: false,\n    onChange: onExpandedChange\n  });\n  const {\n    ref: contentRef,\n    height\n  } = useElementSize();\n  const spoilerMoreContent = show ? hideLabel : showLabel;\n  const spoiler = spoilerMoreContent !== null && maxHeight < height;\n  return /* @__PURE__ */jsxs(Box, {\n    ...getStyles(\"root\"),\n    id: _id,\n    ref,\n    \"data-has-spoiler\": spoiler || void 0,\n    ...others,\n    children: [spoiler && /* @__PURE__ */jsx(Anchor, {\n      component: \"button\",\n      type: \"button\",\n      ref: controlRef,\n      onClick: () => setShowState(!show),\n      \"aria-expanded\": show,\n      \"aria-controls\": regionId,\n      ...getStyles(\"control\"),\n      children: spoilerMoreContent\n    }), /* @__PURE__ */jsx(\"div\", {\n      ...getStyles(\"content\", {\n        style: {\n          maxHeight: !show ? rem(maxHeight) : height ? rem(height) : void 0\n        }\n      }),\n      \"data-reduce-motion\": true,\n      role: \"region\",\n      id: regionId,\n      children: /* @__PURE__ */jsx(\"div\", {\n        ref: contentRef,\n        children\n      })\n    })]\n  });\n});\nSpoiler.classes = classes;\nSpoiler.displayName = \"@mantine/core/Spoiler\";\nexport { Spoiler };","map":{"version":3,"names":["defaultProps","maxHeight","initialState","varsResolver","createVarsResolver","_","transitionDuration","root","Spoiler","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","hideLabel","showLabel","children","controlRef","id","expanded","onExpandedChange","others","getStyles","useStyles","name","classes","_id","useId","regionId","show","setShowState","useUncontrolled","value","defaultValue","finalValue","onChange","contentRef","height","useElementSize","spoilerMoreContent","spoiler","jsxs","Box","jsx","Anchor","component","type","onClick","rem","role","displayName"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/Spoiler/Spoiler.tsx"],"sourcesContent":["import { useElementSize, useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { Anchor } from '../Anchor';\nimport classes from './Spoiler.module.css';\n\nexport type SpoilerStylesNames = 'root' | 'control' | 'content';\nexport type SpoilerCssVariables = {\n  root: '--spoiler-transition-duration';\n};\n\nexport interface SpoilerProps\n  extends BoxProps,\n    StylesApiProps<SpoilerFactory>,\n    ElementProps<'div'> {\n  /** Maximum height of the visible content, when this point is reached spoiler appears, `100` by default */\n  maxHeight?: number;\n\n  /** Label for close spoiler action */\n  hideLabel: React.ReactNode;\n\n  /** Label for open spoiler action */\n  showLabel: React.ReactNode;\n\n  /** Get ref of spoiler toggle button */\n  controlRef?: React.ForwardedRef<HTMLButtonElement>;\n\n  /** Initial spoiler state, true to wrap content in spoiler, false to show content without spoiler, opened state is updated on mount */\n  initialState?: boolean;\n\n  /** Controlled expanded state value */\n  expanded?: boolean;\n\n  /** Called when expanded state changes (when spoiler visibility is toggled by the user) */\n  onExpandedChange?: (expanded: boolean) => void;\n\n  /** Spoiler reveal transition duration in ms, set 0 or null to turn off animation, `200` by default */\n  transitionDuration?: number;\n}\n\nexport type SpoilerFactory = Factory<{\n  props: SpoilerProps;\n  ref: HTMLDivElement;\n  stylesNames: SpoilerStylesNames;\n  vars: SpoilerCssVariables;\n}>;\n\nconst defaultProps: Partial<SpoilerProps> = {\n  maxHeight: 100,\n  initialState: false,\n};\n\nconst varsResolver = createVarsResolver<SpoilerFactory>((_, { transitionDuration }) => ({\n  root: {\n    '--spoiler-transition-duration':\n      transitionDuration !== undefined ? `${transitionDuration}ms` : undefined,\n  },\n}));\n\nexport const Spoiler = factory<SpoilerFactory>((_props, ref) => {\n  const props = useProps('Spoiler', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    initialState,\n    maxHeight,\n    hideLabel,\n    showLabel,\n    children,\n    controlRef,\n    transitionDuration,\n    id,\n    expanded,\n    onExpandedChange,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<SpoilerFactory>({\n    name: 'Spoiler',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const _id = useId(id);\n  const regionId = `${_id}-region`;\n  const [show, setShowState] = useUncontrolled({\n    value: expanded,\n    defaultValue: initialState,\n    finalValue: false,\n    onChange: onExpandedChange,\n  });\n  const { ref: contentRef, height } = useElementSize();\n  const spoilerMoreContent = show ? hideLabel : showLabel;\n  const spoiler = spoilerMoreContent !== null && maxHeight! < height;\n\n  return (\n    <Box\n      {...getStyles('root')}\n      id={_id}\n      ref={ref}\n      data-has-spoiler={spoiler || undefined}\n      {...others}\n    >\n      {spoiler && (\n        <Anchor\n          component=\"button\"\n          type=\"button\"\n          ref={controlRef}\n          onClick={() => setShowState(!show)}\n          aria-expanded={show}\n          aria-controls={regionId}\n          {...getStyles('control')}\n        >\n          {spoilerMoreContent}\n        </Anchor>\n      )}\n      <div\n        {...getStyles('content', {\n          style: { maxHeight: !show ? rem(maxHeight) : height ? rem(height) : undefined },\n        })}\n        data-reduce-motion\n        role=\"region\"\n        id={regionId}\n      >\n        <div ref={contentRef}>{children}</div>\n      </div>\n    </Box>\n  );\n});\n\nSpoiler.classes = classes;\nSpoiler.displayName = '@mantine/core/Spoiler';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}