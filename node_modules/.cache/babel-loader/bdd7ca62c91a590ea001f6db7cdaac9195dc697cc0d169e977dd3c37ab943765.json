{"ast":null,"code":"'use client';\n\nimport { filterProps } from '../../../../utils/filter-props/filter-props.mjs';\nimport 'react';\nimport 'react/jsx-runtime';\nimport '@mantine/hooks';\nfunction mergeVars(vars) {\n  return vars.reduce((acc, current) => {\n    if (current) {\n      Object.keys(current).forEach(key => {\n        acc[key] = {\n          ...acc[key],\n          ...filterProps(current[key])\n        };\n      });\n    }\n    return acc;\n  }, {});\n}\nexport { mergeVars };","map":{"version":3,"names":["mergeVars","vars","reduce","acc","current","Object","keys","forEach","key","filterProps"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/core/styles-api/use-styles/get-style/resolve-vars/merge-vars.ts"],"sourcesContent":["import { CssVariable } from '../../../../Box';\nimport { filterProps } from '../../../../utils';\n\nexport type ResolvedVars = Partial<Record<string, Record<CssVariable, string | undefined>>>;\n\nexport function mergeVars(vars: (ResolvedVars | undefined)[]) {\n  return vars.reduce<ResolvedVars>((acc, current) => {\n    if (current) {\n      Object.keys(current).forEach((key) => {\n        acc[key] = { ...acc[key], ...filterProps(current[key]!) };\n      });\n    }\n\n    return acc;\n  }, {});\n}\n"],"mappings":";;;;;;AAEO,SAASA,SAASA,CAACC,IAAI,EAAE;EAC9B,OAAOA,IAAI,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;IACnC,IAAIA,OAAO,EAAE;MACXC,MAAM,CAACC,IAAI,CAACF,OAAO,CAAC,CAACG,OAAO,CAAEC,GAAG,IAAK;QACpCL,GAAG,CAACK,GAAG,CAAC,GAAG;UAAE,GAAGL,GAAG,CAACK,GAAG,CAAC;UAAE,GAAGC,WAAW,CAACL,OAAO,CAACI,GAAG,CAAC;QAAG;MAChE,CAAO,CAAC;IACR;IACI,OAAOL,GAAG;EACX,GAAE,EAAE,CAAC;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}