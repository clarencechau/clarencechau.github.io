{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useEffect } from 'react';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { DrawerBody } from './DrawerBody.mjs';\nimport { DrawerCloseButton } from './DrawerCloseButton.mjs';\nimport { DrawerContent } from './DrawerContent.mjs';\nimport { DrawerHeader } from './DrawerHeader.mjs';\nimport { DrawerOverlay } from './DrawerOverlay.mjs';\nimport { DrawerRoot } from './DrawerRoot.mjs';\nimport { DrawerStack, useDrawerStackContext } from './DrawerStack.mjs';\nimport { DrawerTitle } from './DrawerTitle.mjs';\nimport classes from './Drawer.module.css.mjs';\nconst defaultProps = {\n  closeOnClickOutside: true,\n  withinPortal: true,\n  lockScroll: true,\n  trapFocus: true,\n  returnFocus: true,\n  closeOnEscape: true,\n  keepMounted: false,\n  zIndex: getDefaultZIndex(\"modal\"),\n  withOverlay: true,\n  withCloseButton: true\n};\nconst Drawer = factory((_props, ref) => {\n  const {\n    title,\n    withOverlay,\n    overlayProps,\n    withCloseButton,\n    closeButtonProps,\n    children,\n    opened,\n    stackId,\n    zIndex,\n    ...others\n  } = useProps(\"Drawer\", defaultProps, _props);\n  const ctx = useDrawerStackContext();\n  const hasHeader = !!title || withCloseButton;\n  const stackProps = ctx && stackId ? {\n    closeOnEscape: ctx.currentId === stackId,\n    trapFocus: ctx.currentId === stackId,\n    zIndex: ctx.getZIndex(stackId)\n  } : {};\n  const overlayVisible = withOverlay === false ? false : stackId && ctx ? ctx.currentId === stackId : opened;\n  useEffect(() => {\n    if (ctx && stackId) {\n      opened ? ctx.addModal(stackId, zIndex || getDefaultZIndex(\"modal\")) : ctx.removeModal(stackId);\n    }\n  }, [opened, stackId, zIndex]);\n  return /* @__PURE__ */jsxs(DrawerRoot, {\n    ref,\n    opened,\n    zIndex: ctx && stackId ? ctx.getZIndex(stackId) : zIndex,\n    ...others,\n    ...stackProps,\n    children: [withOverlay && /* @__PURE__ */jsx(DrawerOverlay, {\n      visible: overlayVisible,\n      transitionProps: ctx && stackId ? {\n        duration: 0\n      } : void 0,\n      ...overlayProps\n    }), /* @__PURE__ */jsxs(DrawerContent, {\n      __hidden: ctx && stackId && opened ? stackId !== ctx.currentId : false,\n      children: [hasHeader && /* @__PURE__ */jsxs(DrawerHeader, {\n        children: [title && /* @__PURE__ */jsx(DrawerTitle, {\n          children: title\n        }), withCloseButton && /* @__PURE__ */jsx(DrawerCloseButton, {\n          ...closeButtonProps\n        })]\n      }), /* @__PURE__ */jsx(DrawerBody, {\n        children\n      })]\n    })]\n  });\n});\nDrawer.classes = classes;\nDrawer.displayName = \"@mantine/core/Drawer\";\nDrawer.Root = DrawerRoot;\nDrawer.Overlay = DrawerOverlay;\nDrawer.Content = DrawerContent;\nDrawer.Body = DrawerBody;\nDrawer.Header = DrawerHeader;\nDrawer.Title = DrawerTitle;\nDrawer.CloseButton = DrawerCloseButton;\nDrawer.Stack = DrawerStack;\nexport { Drawer };","map":{"version":3,"names":["defaultProps","closeOnClickOutside","withinPortal","lockScroll","trapFocus","returnFocus","closeOnEscape","keepMounted","zIndex","getDefaultZIndex","withOverlay","withCloseButton","Drawer","factory","_props","ref","title","overlayProps","closeButtonProps","children","opened","stackId","others","useProps","ctx","useDrawerStackContext","hasHeader","stackProps","currentId","getZIndex","overlayVisible","useEffect","addModal","removeModal","jsxs","DrawerRoot","jsx","DrawerOverlay","visible","transitionProps","duration","DrawerContent","__hidden","DrawerHeader","DrawerTitle","DrawerCloseButton","DrawerBody","classes","displayName","Root","Overlay","Content","Body","Header","Title","CloseButton","Stack","DrawerStack"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/Drawer/Drawer.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { factory, Factory, getDefaultZIndex, useProps } from '../../core';\nimport { ModalBaseCloseButtonProps, ModalBaseOverlayProps } from '../ModalBase';\nimport { DrawerBody } from './DrawerBody';\nimport { DrawerCloseButton } from './DrawerCloseButton';\nimport { DrawerContent } from './DrawerContent';\nimport { DrawerHeader } from './DrawerHeader';\nimport { DrawerOverlay } from './DrawerOverlay';\nimport {\n  DrawerRoot,\n  DrawerRootCssVariables,\n  DrawerRootProps,\n  DrawerRootStylesNames,\n} from './DrawerRoot';\nimport { DrawerStack, useDrawerStackContext } from './DrawerStack';\nimport { DrawerTitle } from './DrawerTitle';\nimport classes from './Drawer.module.css';\n\nexport type DrawerStylesNames = DrawerRootStylesNames;\nexport type DrawerCssVariables = DrawerRootCssVariables;\n\nexport interface DrawerProps extends DrawerRootProps {\n  /** Drawer title */\n  title?: React.ReactNode;\n\n  /** Determines whether the overlay should be rendered, `true` by default */\n  withOverlay?: boolean;\n\n  /** Props passed down to the `Overlay` component, can be used to configure opacity, `background-color`, styles and other properties */\n  overlayProps?: ModalBaseOverlayProps;\n\n  /** Drawer content */\n  children?: React.ReactNode;\n\n  /** Determines whether the close button should be rendered, `true` by default */\n  withCloseButton?: boolean;\n\n  /** Props passed down to the close button */\n  closeButtonProps?: ModalBaseCloseButtonProps;\n\n  /** Id of the drawer in the `Drawer.Stack` */\n  stackId?: string;\n}\n\nexport type DrawerFactory = Factory<{\n  props: DrawerProps;\n  ref: HTMLDivElement;\n  stylesNames: DrawerStylesNames;\n  vars: DrawerCssVariables;\n  staticComponents: {\n    Root: typeof DrawerRoot;\n    Overlay: typeof DrawerOverlay;\n    Content: typeof DrawerContent;\n    Body: typeof DrawerBody;\n    Header: typeof DrawerHeader;\n    Title: typeof DrawerTitle;\n    CloseButton: typeof DrawerCloseButton;\n    Stack: typeof DrawerStack;\n  };\n}>;\n\nconst defaultProps: Partial<DrawerProps> = {\n  closeOnClickOutside: true,\n  withinPortal: true,\n  lockScroll: true,\n  trapFocus: true,\n  returnFocus: true,\n  closeOnEscape: true,\n  keepMounted: false,\n  zIndex: getDefaultZIndex('modal'),\n  withOverlay: true,\n  withCloseButton: true,\n};\n\nexport const Drawer = factory<DrawerFactory>((_props, ref) => {\n  const {\n    title,\n    withOverlay,\n    overlayProps,\n    withCloseButton,\n    closeButtonProps,\n    children,\n    opened,\n    stackId,\n    zIndex,\n    ...others\n  } = useProps('Drawer', defaultProps, _props);\n\n  const ctx = useDrawerStackContext();\n  const hasHeader = !!title || withCloseButton;\n  const stackProps =\n    ctx && stackId\n      ? {\n          closeOnEscape: ctx.currentId === stackId,\n          trapFocus: ctx.currentId === stackId,\n          zIndex: ctx.getZIndex(stackId),\n        }\n      : {};\n\n  const overlayVisible =\n    withOverlay === false ? false : stackId && ctx ? ctx.currentId === stackId : opened;\n\n  useEffect(() => {\n    if (ctx && stackId) {\n      opened\n        ? ctx.addModal(stackId, zIndex || getDefaultZIndex('modal'))\n        : ctx.removeModal(stackId);\n    }\n  }, [opened, stackId, zIndex]);\n\n  return (\n    <DrawerRoot\n      ref={ref}\n      opened={opened}\n      zIndex={ctx && stackId ? ctx.getZIndex(stackId) : zIndex}\n      {...others}\n      {...stackProps}\n    >\n      {withOverlay && (\n        <DrawerOverlay\n          visible={overlayVisible}\n          transitionProps={ctx && stackId ? { duration: 0 } : undefined}\n          {...overlayProps}\n        />\n      )}\n      <DrawerContent __hidden={ctx && stackId && opened ? stackId !== ctx.currentId : false}>\n        {hasHeader && (\n          <DrawerHeader>\n            {title && <DrawerTitle>{title}</DrawerTitle>}\n            {withCloseButton && <DrawerCloseButton {...closeButtonProps} />}\n          </DrawerHeader>\n        )}\n\n        <DrawerBody>{children}</DrawerBody>\n      </DrawerContent>\n    </DrawerRoot>\n  );\n});\n\nDrawer.classes = classes;\nDrawer.displayName = '@mantine/core/Drawer';\nDrawer.Root = DrawerRoot;\nDrawer.Overlay = DrawerOverlay;\nDrawer.Content = DrawerContent;\nDrawer.Body = DrawerBody;\nDrawer.Header = DrawerHeader;\nDrawer.Title = DrawerTitle;\nDrawer.CloseButton = DrawerCloseButton;\nDrawer.Stack = DrawerStack;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}