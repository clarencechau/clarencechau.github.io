{"ast":null,"code":"'use client';\n\nimport PropTypes from 'prop-types';\nimport exactProp from '@mui/utils/exactProp';\nimport withWidth, { isWidthDown, isWidthUp } from \"./withWidth.js\";\nimport useTheme from \"../styles/useTheme.js\";\n\n/**\n * @ignore - internal component.\n */\nfunction HiddenJs(props) {\n  var children = props.children,\n    only = props.only,\n    width = props.width;\n  var theme = useTheme();\n  var visible = true;\n\n  // `only` check is faster to get out sooner if used.\n  if (only) {\n    if (Array.isArray(only)) {\n      for (var i = 0; i < only.length; i += 1) {\n        var breakpoint = only[i];\n        if (width === breakpoint) {\n          visible = false;\n          break;\n        }\n      }\n    } else if (only && width === only) {\n      visible = false;\n    }\n  }\n\n  // Allow `only` to be combined with other props. If already hidden, no need to check others.\n  if (visible) {\n    // determine visibility based on the smallest size up\n    for (var _i = 0; _i < theme.breakpoints.keys.length; _i += 1) {\n      var _breakpoint = theme.breakpoints.keys[_i];\n      var breakpointUp = props[\"\".concat(_breakpoint, \"Up\")];\n      var breakpointDown = props[\"\".concat(_breakpoint, \"Down\")];\n      if (breakpointUp && isWidthUp(_breakpoint, width) || breakpointDown && isWidthDown(_breakpoint, width)) {\n        visible = false;\n        break;\n      }\n    }\n  }\n  if (!visible) {\n    return null;\n  }\n  return children;\n}\nHiddenJs.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  lgDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  lgUp: PropTypes.bool,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  mdDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  mdUp: PropTypes.bool,\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: PropTypes.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  smDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  smUp: PropTypes.bool,\n  /**\n   * @ignore\n   * width prop provided by withWidth decorator.\n   */\n  width: PropTypes.string.isRequired,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xlDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xlUp: PropTypes.bool,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xsDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xsUp: PropTypes.bool\n};\nif (process.env.NODE_ENV !== 'production') {\n  HiddenJs.propTypes = exactProp(HiddenJs.propTypes);\n}\nexport default withWidth()(HiddenJs);","map":{"version":3,"names":["PropTypes","exactProp","withWidth","isWidthDown","isWidthUp","useTheme","HiddenJs","props","children","only","width","theme","visible","Array","isArray","i","length","breakpoint","breakpoints","keys","breakpointUp","concat","breakpointDown","propTypes","node","lgDown","bool","lgUp","mdDown","mdUp","oneOfType","oneOf","arrayOf","smDown","smUp","string","isRequired","xlDown","xlUp","xsDown","xsUp","process","env","NODE_ENV"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mui/material/Hidden/HiddenJs.js"],"sourcesContent":["'use client';\n\nimport PropTypes from 'prop-types';\nimport exactProp from '@mui/utils/exactProp';\nimport withWidth, { isWidthDown, isWidthUp } from \"./withWidth.js\";\nimport useTheme from \"../styles/useTheme.js\";\n\n/**\n * @ignore - internal component.\n */\nfunction HiddenJs(props) {\n  const {\n    children,\n    only,\n    width\n  } = props;\n  const theme = useTheme();\n  let visible = true;\n\n  // `only` check is faster to get out sooner if used.\n  if (only) {\n    if (Array.isArray(only)) {\n      for (let i = 0; i < only.length; i += 1) {\n        const breakpoint = only[i];\n        if (width === breakpoint) {\n          visible = false;\n          break;\n        }\n      }\n    } else if (only && width === only) {\n      visible = false;\n    }\n  }\n\n  // Allow `only` to be combined with other props. If already hidden, no need to check others.\n  if (visible) {\n    // determine visibility based on the smallest size up\n    for (let i = 0; i < theme.breakpoints.keys.length; i += 1) {\n      const breakpoint = theme.breakpoints.keys[i];\n      const breakpointUp = props[`${breakpoint}Up`];\n      const breakpointDown = props[`${breakpoint}Down`];\n      if (breakpointUp && isWidthUp(breakpoint, width) || breakpointDown && isWidthDown(breakpoint, width)) {\n        visible = false;\n        break;\n      }\n    }\n  }\n  if (!visible) {\n    return null;\n  }\n  return children;\n}\nHiddenJs.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  lgDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  lgUp: PropTypes.bool,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  mdDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  mdUp: PropTypes.bool,\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: PropTypes.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  smDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  smUp: PropTypes.bool,\n  /**\n   * @ignore\n   * width prop provided by withWidth decorator.\n   */\n  width: PropTypes.string.isRequired,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xlDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xlUp: PropTypes.bool,\n  /**\n   * If `true`, screens this size and down are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xsDown: PropTypes.bool,\n  /**\n   * If `true`, screens this size and up are hidden.\n   */\n  // eslint-disable-next-line react/no-unused-prop-types\n  xsUp: PropTypes.bool\n};\nif (process.env.NODE_ENV !== 'production') {\n  HiddenJs.propTypes = exactProp(HiddenJs.propTypes);\n}\nexport default withWidth()(HiddenJs);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}