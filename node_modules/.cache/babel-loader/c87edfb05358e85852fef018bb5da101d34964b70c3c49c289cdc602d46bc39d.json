{"ast":null,"code":"'use client';\n\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport { useUncontrolled } from '@mantine/hooks';\nimport 'react';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../Accordion/Accordion.mjs';\nimport { AccordionChevron } from '../Accordion/AccordionChevron.mjs';\nimport '../Accordion/AccordionItem/AccordionItem.mjs';\nimport '../Accordion/AccordionPanel/AccordionPanel.mjs';\nimport '../Accordion/AccordionControl/AccordionControl.mjs';\nimport { Collapse } from '../Collapse/Collapse.mjs';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.mjs';\nimport classes from './NavLink.module.css.mjs';\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((theme, {\n  variant,\n  color,\n  childrenOffset,\n  autoContrast\n}) => {\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    variant: variant || \"light\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--nl-bg\": color || variant ? colors.background : void 0,\n      \"--nl-hover\": color || variant ? colors.hover : void 0,\n      \"--nl-color\": color || variant ? colors.color : void 0\n    },\n    children: {\n      \"--nl-offset\": getSpacing(childrenOffset)\n    }\n  };\n});\nconst NavLink = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"NavLink\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    opened,\n    defaultOpened,\n    onChange,\n    children,\n    onClick,\n    active,\n    disabled,\n    leftSection,\n    rightSection,\n    label,\n    description,\n    disableRightSectionRotation,\n    noWrap,\n    childrenOffset,\n    onKeyDown,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"NavLink\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const [_opened, setOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange\n  });\n  const withChildren = !!children;\n  const handleClick = event => {\n    onClick?.(event);\n    if (withChildren) {\n      event.preventDefault();\n      setOpened(!_opened);\n    }\n  };\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsxs(UnstyledButton, {\n      ...getStyles(\"root\"),\n      component: \"a\",\n      ref,\n      onClick: handleClick,\n      onKeyDown: event => {\n        onKeyDown?.(event);\n        if (event.nativeEvent.code === \"Space\" && withChildren) {\n          event.preventDefault();\n          setOpened(!_opened);\n        }\n      },\n      unstyled,\n      mod: [{\n        disabled,\n        active,\n        expanded: _opened\n      }, mod],\n      ...others,\n      children: [leftSection && /* @__PURE__ */jsx(Box, {\n        component: \"span\",\n        ...getStyles(\"section\"),\n        mod: {\n          position: \"left\"\n        },\n        children: leftSection\n      }), /* @__PURE__ */jsxs(Box, {\n        ...getStyles(\"body\"),\n        mod: {\n          \"no-wrap\": noWrap\n        },\n        children: [/* @__PURE__ */jsx(Box, {\n          component: \"span\",\n          ...getStyles(\"label\"),\n          children: label\n        }), /* @__PURE__ */jsx(Box, {\n          component: \"span\",\n          mod: {\n            active\n          },\n          ...getStyles(\"description\"),\n          children: description\n        })]\n      }), (withChildren || rightSection) && /* @__PURE__ */jsx(Box, {\n        ...getStyles(\"section\"),\n        component: \"span\",\n        mod: {\n          rotate: _opened && !disableRightSectionRotation,\n          position: \"right\"\n        },\n        children: withChildren ? rightSection || /* @__PURE__ */jsx(AccordionChevron, {\n          ...getStyles(\"chevron\")\n        }) : rightSection\n      })]\n    }), /* @__PURE__ */jsx(Collapse, {\n      in: _opened,\n      ...getStyles(\"collapse\"),\n      children: /* @__PURE__ */jsx(\"div\", {\n        ...getStyles(\"children\"),\n        children\n      })\n    })]\n  });\n});\nNavLink.classes = classes;\nNavLink.displayName = \"@mantine/core/NavLink\";\nexport { NavLink };","map":{"version":3,"names":["defaultProps","varsResolver","createVarsResolver","theme","variant","color","childrenOffset","autoContrast","colors","variantColorResolver","primaryColor","root","background","hover","children","getSpacing","NavLink","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","opened","defaultOpened","onChange","onClick","active","disabled","leftSection","rightSection","label","description","disableRightSectionRotation","noWrap","onKeyDown","mod","others","getStyles","useStyles","name","classes","_opened","setOpened","useUncontrolled","value","defaultValue","finalValue","withChildren","handleClick","event","preventDefault","jsxs","Fragment","UnstyledButton","component","nativeEvent","code","expanded","jsx","Box","position","rotate","AccordionChevron","Collapse","in","displayName"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/NavLink/NavLink.tsx"],"sourcesContent":["import { useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getSpacing,\n  MantineColor,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { AccordionChevron } from '../Accordion';\nimport { Collapse } from '../Collapse';\nimport { UnstyledButton } from '../UnstyledButton';\nimport classes from './NavLink.module.css';\n\nexport type NavLinkStylesNames =\n  | 'root'\n  | 'section'\n  | 'body'\n  | 'label'\n  | 'description'\n  | 'chevron'\n  | 'collapse'\n  | 'children';\nexport type NavLinkVariant = 'filled' | 'light' | 'subtle';\nexport type NavLinkCssVariables = {\n  root: '--nl-color' | '--nl-bg' | '--nl-hover';\n  children: '--nl-offset';\n};\n\nexport interface NavLinkProps extends BoxProps, StylesApiProps<NavLinkFactory> {\n  /** Main link label */\n  label?: React.ReactNode;\n\n  /** Link description, displayed below the label */\n  description?: React.ReactNode;\n\n  /** Section displayed on the left side of the label */\n  leftSection?: React.ReactNode;\n\n  /** Section displayed on the right side of the label */\n  rightSection?: React.ReactNode;\n\n  /** Determines whether the link should have active styles, `false` by default */\n  active?: boolean;\n\n  /** Key of `theme.colors` of any valid CSS color to control active styles, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** If set, label and description will not wrap to the next line, `false` by default */\n  noWrap?: boolean;\n\n  /** Child `NavLink` components */\n  children?: React.ReactNode;\n\n  /** Controlled nested items collapse state */\n  opened?: boolean;\n\n  /** Uncontrolled nested items collapse initial state */\n  defaultOpened?: boolean;\n\n  /** Called when open state changes */\n  onChange?: (opened: boolean) => void;\n\n  /** If set, right section will not be rotated when collapse is opened, `false` by default */\n  disableRightSectionRotation?: boolean;\n\n  /** Key of `theme.spacing` or any valid CSS value to set collapsed links `padding-left`, `'lg'` by default */\n  childrenOffset?: MantineSize | (string & {}) | number;\n\n  /** If set, disabled styles will be added to the root element, `false` by default */\n  disabled?: boolean;\n\n  /** Called when the link is clicked */\n  onClick?: (event: React.MouseEvent<HTMLAnchorElement>) => void;\n\n  /** Link `onkeydown` event */\n  onKeyDown?: (event: React.KeyboardEvent<HTMLAnchorElement>) => void;\n\n  /** Determines whether button text color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type NavLinkFactory = PolymorphicFactory<{\n  props: NavLinkProps;\n  defaultRef: HTMLAnchorElement;\n  defaultComponent: 'a';\n  stylesNames: NavLinkStylesNames;\n  vars: NavLinkCssVariables;\n  variant: NavLinkVariant;\n}>;\n\nconst defaultProps: Partial<NavLinkProps> = {};\n\nconst varsResolver = createVarsResolver<NavLinkFactory>(\n  (theme, { variant, color, childrenOffset, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      variant: variant || 'light',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--nl-bg': color || variant ? colors.background : undefined,\n        '--nl-hover': color || variant ? colors.hover : undefined,\n        '--nl-color': color || variant ? colors.color : undefined,\n      },\n\n      children: {\n        '--nl-offset': getSpacing(childrenOffset),\n      },\n    };\n  }\n);\n\nexport const NavLink = polymorphicFactory<NavLinkFactory>((_props, ref) => {\n  const props = useProps('NavLink', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    opened,\n    defaultOpened,\n    onChange,\n    children,\n    onClick,\n    active,\n    disabled,\n    leftSection,\n    rightSection,\n    label,\n    description,\n    disableRightSectionRotation,\n    noWrap,\n    childrenOffset,\n    onKeyDown,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<NavLinkFactory>({\n    name: 'NavLink',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const [_opened, setOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange,\n  });\n\n  const withChildren = !!children;\n\n  const handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    onClick?.(event);\n\n    if (withChildren) {\n      event.preventDefault();\n      setOpened(!_opened);\n    }\n  };\n\n  return (\n    <>\n      <UnstyledButton\n        {...getStyles('root')}\n        component=\"a\"\n        ref={ref}\n        onClick={handleClick}\n        onKeyDown={(event) => {\n          onKeyDown?.(event);\n\n          if (event.nativeEvent.code === 'Space' && withChildren) {\n            event.preventDefault();\n            setOpened(!_opened);\n          }\n        }}\n        unstyled={unstyled}\n        mod={[{ disabled, active, expanded: _opened }, mod]}\n        {...others}\n      >\n        {leftSection && (\n          <Box component=\"span\" {...getStyles('section')} mod={{ position: 'left' }}>\n            {leftSection}\n          </Box>\n        )}\n        <Box {...getStyles('body')} mod={{ 'no-wrap': noWrap }}>\n          <Box component=\"span\" {...getStyles('label')}>\n            {label}\n          </Box>\n          <Box component=\"span\" mod={{ active }} {...getStyles('description')}>\n            {description}\n          </Box>\n        </Box>\n        {(withChildren || rightSection) && (\n          <Box\n            {...getStyles('section')}\n            component=\"span\"\n            mod={{ rotate: _opened && !disableRightSectionRotation, position: 'right' }}\n          >\n            {withChildren\n              ? rightSection || <AccordionChevron {...getStyles('chevron')} />\n              : rightSection}\n          </Box>\n        )}\n      </UnstyledButton>\n      <Collapse in={_opened} {...getStyles('collapse')}>\n        <div {...getStyles('children')}>{children}</div>\n      </Collapse>\n    </>\n  );\n});\n\nNavLink.classes = classes;\nNavLink.displayName = '@mantine/core/NavLink';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}