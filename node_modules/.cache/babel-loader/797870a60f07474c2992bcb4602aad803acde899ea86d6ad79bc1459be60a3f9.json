{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.mjs';\nfunction isMacOS(userAgent) {\n  const macosPattern = /(Macintosh)|(MacIntel)|(MacPPC)|(Mac68K)/i;\n  return macosPattern.test(userAgent);\n}\nfunction isIOS(userAgent) {\n  const iosPattern = /(iPhone)|(iPad)|(iPod)/i;\n  return iosPattern.test(userAgent);\n}\nfunction isWindows(userAgent) {\n  const windowsPattern = /(Win32)|(Win64)|(Windows)|(WinCE)/i;\n  return windowsPattern.test(userAgent);\n}\nfunction isAndroid(userAgent) {\n  const androidPattern = /Android/i;\n  return androidPattern.test(userAgent);\n}\nfunction isLinux(userAgent) {\n  const linuxPattern = /Linux/i;\n  return linuxPattern.test(userAgent);\n}\nfunction getOS() {\n  if (typeof window === \"undefined\") {\n    return \"undetermined\";\n  }\n  const {\n    userAgent\n  } = window.navigator;\n  if (isIOS(userAgent) || isMacOS(userAgent) && \"ontouchend\" in document) {\n    return \"ios\";\n  }\n  if (isMacOS(userAgent)) {\n    return \"macos\";\n  }\n  if (isWindows(userAgent)) {\n    return \"windows\";\n  }\n  if (isAndroid(userAgent)) {\n    return \"android\";\n  }\n  if (isLinux(userAgent)) {\n    return \"linux\";\n  }\n  return \"undetermined\";\n}\nfunction useOs(options = {\n  getValueInEffect: true\n}) {\n  const [value, setValue] = useState(options.getValueInEffect ? \"undetermined\" : getOS());\n  useIsomorphicEffect(() => {\n    if (options.getValueInEffect) {\n      setValue(getOS);\n    }\n  }, []);\n  return value;\n}\nexport { useOs };","map":{"version":3,"names":["isMacOS","userAgent","macosPattern","test","isIOS","iosPattern","isWindows","windowsPattern","isAndroid","androidPattern","isLinux","linuxPattern","getOS","window","navigator","document","useOs","options","getValueInEffect","value","setValue","useState","useIsomorphicEffect"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/hooks/src/use-os/use-os.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\n\nexport type OS = 'undetermined' | 'macos' | 'ios' | 'windows' | 'android' | 'linux';\n\nfunction isMacOS(userAgent: string): boolean {\n  const macosPattern = /(Macintosh)|(MacIntel)|(MacPPC)|(Mac68K)/i;\n\n  return macosPattern.test(userAgent);\n}\n\nfunction isIOS(userAgent: string): boolean {\n  const iosPattern = /(iPhone)|(iPad)|(iPod)/i;\n\n  return iosPattern.test(userAgent);\n}\n\nfunction isWindows(userAgent: string): boolean {\n  const windowsPattern = /(Win32)|(Win64)|(Windows)|(WinCE)/i;\n\n  return windowsPattern.test(userAgent);\n}\n\nfunction isAndroid(userAgent: string): boolean {\n  const androidPattern = /Android/i;\n\n  return androidPattern.test(userAgent);\n}\n\nfunction isLinux(userAgent: string): boolean {\n  const linuxPattern = /Linux/i;\n\n  return linuxPattern.test(userAgent);\n}\n\nfunction getOS(): OS {\n  if (typeof window === 'undefined') {\n    return 'undetermined';\n  }\n\n  const { userAgent } = window.navigator;\n\n  if (isIOS(userAgent) || (isMacOS(userAgent) && 'ontouchend' in document)) {\n    return 'ios';\n  }\n  if (isMacOS(userAgent)) {\n    return 'macos';\n  }\n  if (isWindows(userAgent)) {\n    return 'windows';\n  }\n  if (isAndroid(userAgent)) {\n    return 'android';\n  }\n  if (isLinux(userAgent)) {\n    return 'linux';\n  }\n\n  return 'undetermined';\n}\n\ninterface UseOsOptions {\n  getValueInEffect: boolean;\n}\n\nexport function useOs(options: UseOsOptions = { getValueInEffect: true }): OS {\n  const [value, setValue] = useState<OS>(options.getValueInEffect ? 'undetermined' : getOS());\n\n  useIsomorphicEffect(() => {\n    if (options.getValueInEffect) {\n      setValue(getOS);\n    }\n  }, []);\n\n  return value;\n}\n"],"mappings":";;;;AAGA,SAASA,OAAOA,CAACC,SAAS,EAAE;EAC1B,MAAMC,YAAY,GAAG,2CAA2C;EAChE,OAAOA,YAAY,CAACC,IAAI,CAACF,SAAS,CAAC;AACrC;AACA,SAASG,KAAKA,CAACH,SAAS,EAAE;EACxB,MAAMI,UAAU,GAAG,yBAAyB;EAC5C,OAAOA,UAAU,CAACF,IAAI,CAACF,SAAS,CAAC;AACnC;AACA,SAASK,SAASA,CAACL,SAAS,EAAE;EAC5B,MAAMM,cAAc,GAAG,oCAAoC;EAC3D,OAAOA,cAAc,CAACJ,IAAI,CAACF,SAAS,CAAC;AACvC;AACA,SAASO,SAASA,CAACP,SAAS,EAAE;EAC5B,MAAMQ,cAAc,GAAG,UAAU;EACjC,OAAOA,cAAc,CAACN,IAAI,CAACF,SAAS,CAAC;AACvC;AACA,SAASS,OAAOA,CAACT,SAAS,EAAE;EAC1B,MAAMU,YAAY,GAAG,QAAQ;EAC7B,OAAOA,YAAY,CAACR,IAAI,CAACF,SAAS,CAAC;AACrC;AACA,SAASW,KAAKA,CAAA,EAAG;EACf,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACjC,OAAO,cAAc;EACzB;EACE,MAAM;IAAEZ;EAAS,CAAE,GAAGY,MAAM,CAACC,SAAS;EACtC,IAAIV,KAAK,CAACH,SAAS,CAAC,IAAID,OAAO,CAACC,SAAS,CAAC,IAAI,YAAY,IAAIc,QAAQ,EAAE;IACtE,OAAO,KAAK;EAChB;EACE,IAAIf,OAAO,CAACC,SAAS,CAAC,EAAE;IACtB,OAAO,OAAO;EAClB;EACE,IAAIK,SAAS,CAACL,SAAS,CAAC,EAAE;IACxB,OAAO,SAAS;EACpB;EACE,IAAIO,SAAS,CAACP,SAAS,CAAC,EAAE;IACxB,OAAO,SAAS;EACpB;EACE,IAAIS,OAAO,CAACT,SAAS,CAAC,EAAE;IACtB,OAAO,OAAO;EAClB;EACE,OAAO,cAAc;AACvB;AACO,SAASe,KAAKA,CAACC,OAAO,GAAG;EAAEC,gBAAgB,EAAE;AAAI,CAAE,EAAE;EAC1D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAACJ,OAAO,CAACC,gBAAgB,GAAG,cAAc,GAAGN,KAAK,EAAE,CAAC;EACvFU,mBAAmB,CAAC,MAAM;IACxB,IAAIL,OAAO,CAACC,gBAAgB,EAAE;MAC5BE,QAAQ,CAACR,KAAK,CAAC;IACrB;EACG,GAAE,EAAE,CAAC;EACN,OAAOO,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}