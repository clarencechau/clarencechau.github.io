{"ast":null,"code":"'use client';\n\nimport { cloneElement } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { isElement } from '../../../core/utils/is-element/is-element.mjs';\nimport 'react/jsx-runtime';\nimport { getRefProp } from '../../../core/utils/get-ref-prop/get-ref-prop.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useComboboxContext } from '../Combobox.context.mjs';\nimport { useComboboxTargetProps } from '../use-combobox-target-props/use-combobox-target-props.mjs';\nconst defaultProps = {\n  refProp: \"ref\",\n  targetType: \"input\",\n  withKeyboardNavigation: true,\n  withAriaAttributes: true,\n  withExpandedAttribute: false,\n  autoComplete: \"off\"\n};\nconst ComboboxEventsTarget = factory((props, ref) => {\n  const {\n    children,\n    refProp,\n    withKeyboardNavigation,\n    withAriaAttributes,\n    withExpandedAttribute,\n    targetType,\n    autoComplete,\n    ...others\n  } = useProps(\"ComboboxEventsTarget\", defaultProps, props);\n  if (!isElement(children)) {\n    throw new Error(\"Combobox.EventsTarget component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported\");\n  }\n  const ctx = useComboboxContext();\n  const targetProps = useComboboxTargetProps({\n    targetType,\n    withAriaAttributes,\n    withKeyboardNavigation,\n    withExpandedAttribute,\n    onKeyDown: children.props.onKeyDown,\n    autoComplete\n  });\n  return cloneElement(children, {\n    ...targetProps,\n    ...others,\n    [refProp]: useMergedRef(ref, ctx.store.targetRef, getRefProp(children))\n  });\n});\nComboboxEventsTarget.displayName = \"@mantine/core/ComboboxEventsTarget\";\nexport { ComboboxEventsTarget };","map":{"version":3,"names":["defaultProps","refProp","targetType","withKeyboardNavigation","withAriaAttributes","withExpandedAttribute","autoComplete","ComboboxEventsTarget","factory","props","ref","children","others","useProps","isElement","Error","ctx","useComboboxContext","targetProps","useComboboxTargetProps","onKeyDown","cloneElement","useMergedRef","store","targetRef","getRefProp","displayName"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/Combobox/ComboboxEventsTarget/ComboboxEventsTarget.tsx"],"sourcesContent":["import { cloneElement } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { factory, Factory, getRefProp, isElement, useProps } from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport { useComboboxTargetProps } from '../use-combobox-target-props/use-combobox-target-props';\n\nexport interface ComboboxEventsTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that should be used to access element ref */\n  refProp?: string;\n\n  /** Determines whether component should respond to keyboard events, `true` by default */\n  withKeyboardNavigation?: boolean;\n\n  /** Determines whether the target should have `aria-` attributes, `true` by default */\n  withAriaAttributes?: boolean;\n\n  /** Determines whether the target should have `aria-expanded` attribute, `false` by default */\n  withExpandedAttribute?: boolean;\n\n  /** Determines which events should be handled by the target element.\n   * `button` target type handles `Space` and `Enter` keys to toggle dropdown opened state.\n   * `input` by default.\n   * */\n  targetType?: 'button' | 'input';\n\n  /** Input autocomplete attribute */\n  autoComplete?: string;\n}\n\nconst defaultProps: Partial<ComboboxEventsTargetProps> = {\n  refProp: 'ref',\n  targetType: 'input',\n  withKeyboardNavigation: true,\n  withAriaAttributes: true,\n  withExpandedAttribute: false,\n  autoComplete: 'off',\n};\n\nexport type ComboboxEventsTargetFactory = Factory<{\n  props: ComboboxEventsTargetProps;\n  ref: HTMLElement;\n  compound: true;\n}>;\n\nexport const ComboboxEventsTarget = factory<ComboboxEventsTargetFactory>((props, ref) => {\n  const {\n    children,\n    refProp,\n    withKeyboardNavigation,\n    withAriaAttributes,\n    withExpandedAttribute,\n    targetType,\n    autoComplete,\n    ...others\n  } = useProps('ComboboxEventsTarget', defaultProps, props);\n\n  if (!isElement(children)) {\n    throw new Error(\n      'Combobox.EventsTarget component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const ctx = useComboboxContext();\n  const targetProps = useComboboxTargetProps({\n    targetType,\n    withAriaAttributes,\n    withKeyboardNavigation,\n    withExpandedAttribute,\n    onKeyDown: children.props.onKeyDown,\n    autoComplete,\n  });\n\n  return cloneElement(children, {\n    ...targetProps,\n    ...others,\n    [refProp!]: useMergedRef(ref, ctx.store.targetRef, getRefProp(children)),\n  });\n});\n\nComboboxEventsTarget.displayName = '@mantine/core/ComboboxEventsTarget';\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAMA,MAAMA,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EACdC,UAAU,EAAE,OAAO;EACnBC,sBAAsB,EAAE,IAAI;EAC5BC,kBAAkB,EAAE,IAAI;EACxBC,qBAAqB,EAAE,KAAK;EAC5BC,YAAY,EAAE;AAChB,CAAC;AACW,MAACC,oBAAoB,GAAGC,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EAC1D,MAAM;IACJC,QAAQ;IACRV,OAAO;IACPE,sBAAsB;IACtBC,kBAAkB;IAClBC,qBAAqB;IACrBH,UAAU;IACVI,YAAY;IACZ,GAAGM;EACJ,IAAGC,QAAQ,CAAC,sBAAsB,EAAEb,YAAY,EAAES,KAAK,CAAC;EACzD,IAAI,CAACK,SAAS,CAACH,QAAQ,CAAC,EAAE;IACxB,MAAM,IAAII,KAAK,CACb,yKACD;EACL;EACE,MAAMC,GAAG,GAAGC,kBAAkB,CAAE;EAChC,MAAMC,WAAW,GAAGC,sBAAsB,CAAC;IACzCjB,UAAU;IACVE,kBAAkB;IAClBD,sBAAsB;IACtBE,qBAAqB;IACrBe,SAAS,EAAET,QAAQ,CAACF,KAAK,CAACW,SAAS;IACnCd;EACJ,CAAG,CAAC;EACF,OAAOe,YAAY,CAACV,QAAQ,EAAE;IAC5B,GAAGO,WAAW;IACd,GAAGN,MAAM;IACT,CAACX,OAAO,GAAGqB,YAAY,CAACZ,GAAG,EAAEM,GAAG,CAACO,KAAK,CAACC,SAAS,EAAEC,UAAU,CAACd,QAAQ,CAAC;EAC1E,CAAG,CAAC;AACJ,CAAC;AACDJ,oBAAoB,CAACmB,WAAW,GAAG,oCAAoC"},"metadata":{},"sourceType":"module","externalDependencies":[]}