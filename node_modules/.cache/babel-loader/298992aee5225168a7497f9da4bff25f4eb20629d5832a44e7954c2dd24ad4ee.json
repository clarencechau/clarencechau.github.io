{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n *\n * * Escape hatch for broken dependencies not supporting SSR.\n * * Improve the time-to-first paint on the client by only rendering above the fold.\n * * Reduce the rendering time on the server.\n * * Under too heavy server load, you can turn on service degradation.\n *\n * Demos:\n *\n * - [No SSR](https://mui.com/material-ui/react-no-ssr/)\n *\n * API:\n *\n * - [NoSsr API](https://mui.com/material-ui/api/no-ssr/)\n */\nfunction NoSsr(props) {\n  var children = props.children,\n    _props$defer = props.defer,\n    defer = _props$defer === void 0 ? false : _props$defer,\n    _props$fallback = props.fallback,\n    fallback = _props$fallback === void 0 ? null : _props$fallback;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mountedState = _React$useState2[0],\n    setMountedState = _React$useState2[1];\n  useEnhancedEffect(function () {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(function () {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n\n  // TODO casting won't be needed at one point https://github.com/DefinitelyTyped/DefinitelyTyped/pull/65135\n  return mountedState ? children : fallback;\n}\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   * @default false\n   */\n  defer: PropTypes.bool,\n  /**\n   * The fallback content to display.\n   * @default null\n   */\n  fallback: PropTypes.node\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\nexport default NoSsr;","map":{"version":3,"names":["_slicedToArray","React","PropTypes","exactProp","unstable_useEnhancedEffect","useEnhancedEffect","NoSsr","props","children","_props$defer","defer","_props$fallback","fallback","_React$useState","useState","_React$useState2","mountedState","setMountedState","useEffect","process","env","NODE_ENV","propTypes","node","bool"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mui/material/NoSsr/NoSsr.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n *\n * * Escape hatch for broken dependencies not supporting SSR.\n * * Improve the time-to-first paint on the client by only rendering above the fold.\n * * Reduce the rendering time on the server.\n * * Under too heavy server load, you can turn on service degradation.\n *\n * Demos:\n *\n * - [No SSR](https://mui.com/material-ui/react-no-ssr/)\n *\n * API:\n *\n * - [NoSsr API](https://mui.com/material-ui/api/no-ssr/)\n */\nfunction NoSsr(props) {\n  const {\n    children,\n    defer = false,\n    fallback = null\n  } = props;\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(() => {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n\n  // TODO casting won't be needed at one point https://github.com/DefinitelyTyped/DefinitelyTyped/pull/65135\n  return mountedState ? children : fallback;\n}\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   * @default false\n   */\n  defer: PropTypes.bool,\n  /**\n   * The fallback content to display.\n   * @default null\n   */\n  fallback: PropTypes.node\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\nexport default NoSsr;"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,cAAA;AAEb,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,EAAEC,0BAA0B,IAAIC,iBAAiB,QAAQ,YAAY;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACC,KAAK,EAAE;EACpB,IACEC,QAAQ,GAGND,KAAK,CAHPC,QAAQ;IAAAC,YAAA,GAGNF,KAAK,CAFPG,KAAK;IAALA,KAAK,GAAAD,YAAA,cAAG,KAAK,GAAAA,YAAA;IAAAE,eAAA,GAEXJ,KAAK,CADPK,QAAQ;IAARA,QAAQ,GAAAD,eAAA,cAAG,IAAI,GAAAA,eAAA;EAEjB,IAAAE,eAAA,GAAwCZ,KAAK,CAACa,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAf,cAAA,CAAAa,eAAA;IAAtDG,YAAY,GAAAD,gBAAA;IAAEE,eAAe,GAAAF,gBAAA;EACpCV,iBAAiB,CAAC,YAAM;IACtB,IAAI,CAACK,KAAK,EAAE;MACVO,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EACXT,KAAK,CAACiB,SAAS,CAAC,YAAM;IACpB,IAAIR,KAAK,EAAE;MACTO,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;;EAEX;EACA,OAAOM,YAAY,GAAGR,QAAQ,GAAGI,QAAQ;AAC3C;AACAO,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGf,KAAK,CAACgB,SAAS,CAAC,yBAAyB;EAC/E;EACA;EACA;EACA;EACA;AACF;AACA;EACEd,QAAQ,EAAEN,SAAS,CAACqB,IAAI;EACxB;AACF;AACA;AACA;AACA;EACEb,KAAK,EAAER,SAAS,CAACsB,IAAI;EACrB;AACF;AACA;AACA;EACEZ,QAAQ,EAAEV,SAAS,CAACqB;AACtB,CAAC,GAAG,KAAK,CAAC;AACV,IAAIJ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzC;EACAf,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC,GAAGH,SAAS,CAACG,KAAK,CAACgB,SAAS,CAAC;AACtD;AACA,eAAehB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}