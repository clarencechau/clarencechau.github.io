{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { useState, createElement } from 'react';\nimport { useMounted, useUncontrolled, useId, useMergedRef } from '@mantine/hooks';\nimport { getRadius, getSize, getFontSize } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport { getContrastColor } from '../../core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { FloatingIndicator } from '../FloatingIndicator/FloatingIndicator.mjs';\nimport classes from './SegmentedControl.module.css.mjs';\nconst defaultProps = {\n  withItemsBorders: true\n};\nconst varsResolver = createVarsResolver((theme, {\n  radius,\n  color,\n  transitionDuration,\n  size,\n  transitionTimingFunction\n}) => ({\n  root: {\n    \"--sc-radius\": radius === void 0 ? void 0 : getRadius(radius),\n    \"--sc-color\": color ? getThemeColor(color, theme) : void 0,\n    \"--sc-shadow\": color ? void 0 : \"var(--mantine-shadow-xs)\",\n    \"--sc-transition-duration\": transitionDuration === void 0 ? void 0 : `${transitionDuration}ms`,\n    \"--sc-transition-timing-function\": transitionTimingFunction,\n    \"--sc-padding\": getSize(size, \"sc-padding\"),\n    \"--sc-font-size\": getFontSize(size)\n  }\n}));\nconst SegmentedControl = factory((_props, ref) => {\n  const props = useProps(\"SegmentedControl\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    data,\n    value,\n    defaultValue,\n    onChange,\n    size,\n    name,\n    disabled,\n    readOnly,\n    fullWidth,\n    orientation,\n    radius,\n    color,\n    transitionDuration,\n    transitionTimingFunction,\n    variant,\n    autoContrast,\n    withItemsBorders,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"SegmentedControl\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const theme = useMantineTheme();\n  const _data = data.map(item => typeof item === \"string\" ? {\n    label: item,\n    value: item\n  } : item);\n  const initialized = useMounted();\n  const [parent, setParent] = useState(null);\n  const [refs, setRefs] = useState({});\n  const setElementRef = (element, val) => {\n    refs[val] = element;\n    setRefs(refs);\n  };\n  const [_value, handleValueChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: Array.isArray(data) ? _data.find(item => !item.disabled)?.value ?? data[0]?.value ?? null : null,\n    onChange\n  });\n  const uuid = useId(name);\n  const controls = _data.map(item => /* @__PURE__ */createElement(Box, {\n    ...getStyles(\"control\"),\n    mod: {\n      active: _value === item.value,\n      orientation\n    },\n    key: item.value\n  }, /* @__PURE__ */createElement(\"input\", {\n    ...getStyles(\"input\"),\n    disabled: disabled || item.disabled,\n    type: \"radio\",\n    name: uuid,\n    value: item.value,\n    id: `${uuid}-${item.value}`,\n    checked: _value === item.value,\n    onChange: () => !readOnly && handleValueChange(item.value),\n    \"data-focus-ring\": theme.focusRing,\n    key: `${item.value}-input`\n  }), /* @__PURE__ */createElement(Box, {\n    component: \"label\",\n    ...getStyles(\"label\"),\n    mod: {\n      active: _value === item.value && !(disabled || item.disabled),\n      disabled: disabled || item.disabled,\n      \"read-only\": readOnly\n    },\n    htmlFor: `${uuid}-${item.value}`,\n    ref: node => setElementRef(node, item.value),\n    __vars: {\n      \"--sc-label-color\": color !== void 0 ? getContrastColor({\n        color,\n        theme,\n        autoContrast\n      }) : void 0\n    },\n    key: `${item.value}-label`\n  }, /* @__PURE__ */jsx(\"span\", {\n    ...getStyles(\"innerLabel\"),\n    children: item.label\n  }))));\n  const mergedRef = useMergedRef(ref, node => setParent(node));\n  if (data.length === 0) {\n    return null;\n  }\n  return /* @__PURE__ */jsxs(Box, {\n    ...getStyles(\"root\"),\n    variant,\n    size,\n    ref: mergedRef,\n    mod: [{\n      \"full-width\": fullWidth,\n      orientation,\n      initialized,\n      \"with-items-borders\": withItemsBorders\n    }, mod],\n    ...others,\n    role: \"radiogroup\",\n    \"data-disabled\": disabled,\n    children: [typeof _value === \"string\" && /* @__PURE__ */jsx(FloatingIndicator, {\n      target: refs[_value],\n      parent,\n      component: \"span\",\n      transitionDuration: \"var(--sc-transition-duration)\",\n      ...getStyles(\"indicator\")\n    }), controls]\n  });\n});\nSegmentedControl.classes = classes;\nSegmentedControl.displayName = \"@mantine/core/SegmentedControl\";\nexport { SegmentedControl };","map":{"version":3,"names":["defaultProps","withItemsBorders","varsResolver","createVarsResolver","theme","radius","color","transitionDuration","size","transitionTimingFunction","root","getRadius","getThemeColor","getSize","getFontSize","SegmentedControl","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","data","value","defaultValue","onChange","name","disabled","readOnly","fullWidth","orientation","variant","autoContrast","mod","others","getStyles","useStyles","classes","useMantineTheme","_data","map","item","label","initialized","useMounted","parent","setParent","useState","refs","setRefs","setElementRef","element","val","_value","handleValueChange","useUncontrolled","finalValue","Array","isArray","find","uuid","useId","controls","createElement","Box","active","key","type","id","checked","focusRing","component","htmlFor","node","__vars","getContrastColor","jsx","children","mergedRef","useMergedRef","length","jsxs","role","FloatingIndicator","target","displayName"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/SegmentedControl/SegmentedControl.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useId, useMergedRef, useMounted, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  Factory,\n  factory,\n  getContrastColor,\n  getFontSize,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  StylesApiProps,\n  useMantineTheme,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { FloatingIndicator } from '../FloatingIndicator';\nimport classes from './SegmentedControl.module.css';\n\nexport type SegmentedControlStylesNames =\n  | 'root'\n  | 'input'\n  | 'label'\n  | 'control'\n  | 'indicator'\n  | 'innerLabel';\nexport type SegmentedControlCssVariables = {\n  root:\n    | '--sc-radius'\n    | '--sc-color'\n    | '--sc-font-size'\n    | '--sc-padding'\n    | '--sc-shadow'\n    | '--sc-transition-duration'\n    | '--sc-transition-timing-function';\n};\n\nexport interface SegmentedControlItem {\n  value: string;\n  label: React.ReactNode;\n  disabled?: boolean;\n}\n\nexport interface SegmentedControlProps\n  extends BoxProps,\n    StylesApiProps<SegmentedControlFactory>,\n    ElementProps<'div', 'onChange'> {\n  /** Data based on which controls are rendered */\n  data: (string | SegmentedControlItem)[];\n\n  /** Controlled component value */\n  value?: string;\n\n  /** Uncontrolled component default value */\n  defaultValue?: string;\n\n  /** Called when value changes */\n  onChange?: (value: string) => void;\n\n  /** Determines whether the component is disabled */\n  disabled?: boolean;\n\n  /** Name of the radio group, by default random name is generated */\n  name?: string;\n\n  /** Determines whether the component should take 100% width of its parent, `false` by default */\n  fullWidth?: boolean;\n\n  /** Key of `theme.colors` or any valid CSS color, changes color of indicator, by default color is based on current color scheme */\n  color?: MantineColor;\n\n  /** Controls `font-size`, `padding` and `height` properties, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Indicator `transition-duration` in ms, set `0` to turn off transitions, `200` by default */\n  transitionDuration?: number;\n\n  /** Indicator `transition-timing-function` property, `ease` by default */\n  transitionTimingFunction?: string;\n\n  /** Determines in which orientation component id displayed, `'horizontal'` by default */\n  orientation?: 'vertical' | 'horizontal';\n\n  /** Determines whether the value can be changed */\n  readOnly?: boolean;\n\n  /** Determines whether text color should depend on `background-color` of the indicator. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n\n  /** Determines whether there should be borders between items, `true` by default */\n  withItemsBorders?: boolean;\n}\n\nexport type SegmentedControlFactory = Factory<{\n  props: SegmentedControlProps;\n  ref: HTMLDivElement;\n  stylesNames: SegmentedControlStylesNames;\n  vars: SegmentedControlCssVariables;\n}>;\n\nconst defaultProps: Partial<SegmentedControlProps> = {\n  withItemsBorders: true,\n};\n\nconst varsResolver = createVarsResolver<SegmentedControlFactory>(\n  (theme, { radius, color, transitionDuration, size, transitionTimingFunction }) => ({\n    root: {\n      '--sc-radius': radius === undefined ? undefined : getRadius(radius),\n      '--sc-color': color ? getThemeColor(color, theme) : undefined,\n      '--sc-shadow': color ? undefined : 'var(--mantine-shadow-xs)',\n      '--sc-transition-duration':\n        transitionDuration === undefined ? undefined : `${transitionDuration}ms`,\n      '--sc-transition-timing-function': transitionTimingFunction,\n      '--sc-padding': getSize(size, 'sc-padding'),\n      '--sc-font-size': getFontSize(size),\n    },\n  })\n);\n\nexport const SegmentedControl = factory<SegmentedControlFactory>((_props, ref) => {\n  const props = useProps('SegmentedControl', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    data,\n    value,\n    defaultValue,\n    onChange,\n    size,\n    name,\n    disabled,\n    readOnly,\n    fullWidth,\n    orientation,\n    radius,\n    color,\n    transitionDuration,\n    transitionTimingFunction,\n    variant,\n    autoContrast,\n    withItemsBorders,\n    mod,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<SegmentedControlFactory>({\n    name: 'SegmentedControl',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const theme = useMantineTheme();\n\n  const _data = data.map((item) =>\n    typeof item === 'string' ? { label: item, value: item } : item\n  );\n\n  const initialized = useMounted();\n  const [parent, setParent] = useState<HTMLElement | null>(null);\n  const [refs, setRefs] = useState<Record<string, HTMLElement | null>>({});\n  const setElementRef = (element: HTMLElement | null, val: string) => {\n    refs[val] = element;\n    setRefs(refs);\n  };\n\n  const [_value, handleValueChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: Array.isArray(data)\n      ? (_data.find((item) => !item.disabled)?.value ?? (data[0] as any)?.value ?? null)\n      : null,\n    onChange,\n  });\n\n  const uuid = useId(name);\n\n  const controls = _data.map((item) => (\n    <Box\n      {...getStyles('control')}\n      mod={{ active: _value === item.value, orientation }}\n      key={item.value}\n    >\n      <input\n        {...getStyles('input')}\n        disabled={disabled || item.disabled}\n        type=\"radio\"\n        name={uuid}\n        value={item.value}\n        id={`${uuid}-${item.value}`}\n        checked={_value === item.value}\n        onChange={() => !readOnly && handleValueChange(item.value)}\n        data-focus-ring={theme.focusRing}\n        key={`${item.value}-input`}\n      />\n\n      <Box\n        component=\"label\"\n        {...getStyles('label')}\n        mod={{\n          active: _value === item.value && !(disabled || item.disabled),\n          disabled: disabled || item.disabled,\n          'read-only': readOnly,\n        }}\n        htmlFor={`${uuid}-${item.value}`}\n        ref={(node) => setElementRef(node, item.value)}\n        __vars={{\n          '--sc-label-color':\n            color !== undefined ? getContrastColor({ color, theme, autoContrast }) : undefined,\n        }}\n        key={`${item.value}-label`}\n      >\n        <span {...getStyles('innerLabel')}>{item.label}</span>\n      </Box>\n    </Box>\n  ));\n\n  const mergedRef = useMergedRef(ref, (node) => setParent(node));\n\n  if (data.length === 0) {\n    return null;\n  }\n\n  return (\n    <Box\n      {...getStyles('root')}\n      variant={variant}\n      size={size}\n      ref={mergedRef}\n      mod={[\n        {\n          'full-width': fullWidth,\n          orientation,\n          initialized,\n          'with-items-borders': withItemsBorders,\n        },\n        mod,\n      ]}\n      {...others}\n      role=\"radiogroup\"\n      data-disabled={disabled}\n    >\n      {typeof _value === 'string' && (\n        <FloatingIndicator\n          target={refs[_value]}\n          parent={parent}\n          component=\"span\"\n          transitionDuration=\"var(--sc-transition-duration)\"\n          {...getStyles('indicator')}\n        />\n      )}\n\n      {controls}\n    </Box>\n  );\n});\n\nSegmentedControl.classes = classes;\nSegmentedControl.displayName = '@mantine/core/SegmentedControl';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}