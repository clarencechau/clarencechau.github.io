{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useState } from 'react';\nimport { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nimport { getContextItemIndex } from '../../core/utils/get-context-item-index/get-context-item-index.mjs';\nimport { useHovered } from '../../core/utils/use-hovered/use-hovered.mjs';\nimport 'clsx';\nimport { useResolvedStylesApi } from '../../core/styles-api/use-resolved-styles-api/use-resolved-styles-api.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useDelayedHover } from '../Floating/use-delayed-hover.mjs';\nimport '@floating-ui/react';\nimport '../Floating/FloatingArrow/FloatingArrow.mjs';\nimport { Popover } from '../Popover/Popover.mjs';\nimport '../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { MenuContextProvider } from './Menu.context.mjs';\nimport { MenuDivider } from './MenuDivider/MenuDivider.mjs';\nimport { MenuDropdown } from './MenuDropdown/MenuDropdown.mjs';\nimport { MenuItem } from './MenuItem/MenuItem.mjs';\nimport { MenuLabel } from './MenuLabel/MenuLabel.mjs';\nimport { MenuTarget } from './MenuTarget/MenuTarget.mjs';\nimport classes from './Menu.module.css.mjs';\nconst defaultProps = {\n  trapFocus: true,\n  closeOnItemClick: true,\n  clickOutsideEvents: [\"mousedown\", \"touchstart\", \"keydown\"],\n  loop: true,\n  trigger: \"click\",\n  openDelay: 0,\n  closeDelay: 100,\n  menuItemTabIndex: -1\n};\nfunction Menu(_props) {\n  const props = useProps(\"Menu\", defaultProps, _props);\n  const {\n    children,\n    onOpen,\n    onClose,\n    opened,\n    defaultOpened,\n    trapFocus,\n    onChange,\n    closeOnItemClick,\n    loop,\n    closeOnEscape,\n    trigger,\n    openDelay,\n    closeDelay,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    vars,\n    menuItemTabIndex,\n    keepMounted,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Menu\",\n    classes,\n    props,\n    classNames,\n    styles,\n    unstyled\n  });\n  const [hovered, {\n    setHovered,\n    resetHovered\n  }] = useHovered();\n  const [_opened, setOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange\n  });\n  const [openedViaClick, setOpenedViaClick] = useState(false);\n  const close = () => {\n    setOpened(false);\n    setOpenedViaClick(false);\n    _opened && onClose?.();\n  };\n  const open = () => {\n    setOpened(true);\n    !_opened && onOpen?.();\n  };\n  const toggleDropdown = () => {\n    _opened ? close() : open();\n  };\n  const {\n    openDropdown,\n    closeDropdown\n  } = useDelayedHover({\n    open,\n    close,\n    closeDelay,\n    openDelay\n  });\n  const getItemIndex = node => getContextItemIndex(\"[data-menu-item]\", \"[data-menu-dropdown]\", node);\n  const {\n    resolvedClassNames,\n    resolvedStyles\n  } = useResolvedStylesApi({\n    classNames,\n    styles,\n    props\n  });\n  useDidUpdate(() => {\n    resetHovered();\n  }, [_opened]);\n  return /* @__PURE__ */jsx(MenuContextProvider, {\n    value: {\n      getStyles,\n      opened: _opened,\n      toggleDropdown,\n      getItemIndex,\n      hovered,\n      setHovered,\n      openedViaClick,\n      setOpenedViaClick,\n      closeOnItemClick,\n      closeDropdown: trigger === \"click\" ? close : closeDropdown,\n      openDropdown: trigger === \"click\" ? open : openDropdown,\n      closeDropdownImmediately: close,\n      loop,\n      trigger,\n      unstyled,\n      menuItemTabIndex\n    },\n    children: /* @__PURE__ */jsx(Popover, {\n      ...others,\n      opened: _opened,\n      onChange: toggleDropdown,\n      defaultOpened,\n      trapFocus: keepMounted ? false : trapFocus,\n      closeOnEscape,\n      __staticSelector: \"Menu\",\n      classNames: resolvedClassNames,\n      styles: resolvedStyles,\n      unstyled,\n      variant,\n      keepMounted,\n      children\n    })\n  });\n}\nMenu.extend = input => input;\nMenu.classes = classes;\nMenu.displayName = \"@mantine/core/Menu\";\nMenu.Item = MenuItem;\nMenu.Label = MenuLabel;\nMenu.Dropdown = MenuDropdown;\nMenu.Target = MenuTarget;\nMenu.Divider = MenuDivider;\nexport { Menu };","map":{"version":3,"names":["defaultProps","trapFocus","closeOnItemClick","clickOutsideEvents","loop","trigger","openDelay","closeDelay","menuItemTabIndex","Menu","_props","props","useProps","children","onOpen","onClose","opened","defaultOpened","onChange","closeOnEscape","classNames","styles","unstyled","variant","vars","keepMounted","others","getStyles","useStyles","name","classes","hovered","setHovered","resetHovered","useHovered","_opened","setOpened","useUncontrolled","value","defaultValue","finalValue","openedViaClick","setOpenedViaClick","useState","close","open","toggleDropdown","openDropdown","closeDropdown","useDelayedHover","getItemIndex","node","getContextItemIndex","resolvedClassNames","resolvedStyles","useResolvedStylesApi","useDidUpdate","jsx","MenuContextProvider","closeDropdownImmediately","Popover","__staticSelector","extend","input","displayName","Item","MenuItem","Label","MenuLabel","Dropdown","MenuDropdown","Target","MenuTarget","Divider","MenuDivider"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/Menu/Menu.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDidUpdate, useUncontrolled } from '@mantine/hooks';\nimport {\n  ExtendComponent,\n  Factory,\n  getContextItemIndex,\n  StylesApiProps,\n  useHovered,\n  useProps,\n  useResolvedStylesApi,\n  useStyles,\n} from '../../core';\nimport { useDelayedHover } from '../Floating';\nimport { __PopoverProps, Popover, PopoverStylesNames } from '../Popover';\nimport { MenuContextProvider } from './Menu.context';\nimport { MenuDivider } from './MenuDivider/MenuDivider';\nimport { MenuDropdown } from './MenuDropdown/MenuDropdown';\nimport { MenuItem } from './MenuItem/MenuItem';\nimport { MenuLabel } from './MenuLabel/MenuLabel';\nimport { MenuTarget } from './MenuTarget/MenuTarget';\nimport classes from './Menu.module.css';\n\nexport type MenuStylesNames =\n  | 'item'\n  | 'itemLabel'\n  | 'itemSection'\n  | 'label'\n  | 'divider'\n  | PopoverStylesNames;\n\nexport type MenuFactory = Factory<{\n  props: MenuProps;\n  ref: HTMLDivElement;\n  stylesNames: MenuStylesNames;\n}>;\n\nexport interface MenuProps extends __PopoverProps, StylesApiProps<MenuFactory> {\n  variant?: string;\n\n  /** Menu content */\n  children?: React.ReactNode;\n\n  /** Controlled menu opened state */\n  opened?: boolean;\n\n  /** Uncontrolled menu initial opened state */\n  defaultOpened?: boolean;\n\n  /** Determines whether dropdown should trap focus of keyboard events */\n  trapFocus?: boolean;\n\n  /** Called when menu opened state changes */\n  onChange?: (opened: boolean) => void;\n\n  /** Called when Menu is opened */\n  onOpen?: () => void;\n\n  /** Called when Menu is closed */\n  onClose?: () => void;\n\n  /** Determines whether Menu should be closed when item is clicked */\n  closeOnItemClick?: boolean;\n\n  /** Determines whether arrow key presses should loop though items (first to last and last to first) */\n  loop?: boolean;\n\n  /** Determines whether dropdown should be closed when Escape key is pressed */\n  closeOnEscape?: boolean;\n\n  /** Event which should open menu */\n  trigger?: 'click' | 'hover' | 'click-hover';\n\n  /** Open delay in ms, applicable only to trigger=\"hover\" variant */\n  openDelay?: number;\n\n  /** Close delay in ms, applicable only to trigger=\"hover\" variant */\n  closeDelay?: number;\n\n  /** Determines whether dropdown should be closed on outside clicks */\n  closeOnClickOutside?: boolean;\n\n  /** Events that trigger outside clicks */\n  clickOutsideEvents?: string[];\n\n  /** Id base to create accessibility connections */\n  id?: string;\n\n  /** Set the `tabindex` on all menu items. Defaults to -1 */\n  menuItemTabIndex?: -1 | 0;\n}\n\nconst defaultProps: Partial<MenuProps> = {\n  trapFocus: true,\n  closeOnItemClick: true,\n  clickOutsideEvents: ['mousedown', 'touchstart', 'keydown'],\n  loop: true,\n  trigger: 'click',\n  openDelay: 0,\n  closeDelay: 100,\n  menuItemTabIndex: -1,\n};\n\nexport function Menu(_props: MenuProps) {\n  const props = useProps('Menu', defaultProps, _props);\n  const {\n    children,\n    onOpen,\n    onClose,\n    opened,\n    defaultOpened,\n    trapFocus,\n    onChange,\n    closeOnItemClick,\n    loop,\n    closeOnEscape,\n    trigger,\n    openDelay,\n    closeDelay,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    vars,\n    menuItemTabIndex,\n    keepMounted,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<MenuFactory>({\n    name: 'Menu',\n    classes,\n    props,\n    classNames,\n    styles,\n    unstyled,\n  });\n\n  const [hovered, { setHovered, resetHovered }] = useHovered();\n  const [_opened, setOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange,\n  });\n  const [openedViaClick, setOpenedViaClick] = useState(false);\n\n  const close = () => {\n    setOpened(false);\n    setOpenedViaClick(false);\n    _opened && onClose?.();\n  };\n\n  const open = () => {\n    setOpened(true);\n    !_opened && onOpen?.();\n  };\n\n  const toggleDropdown = () => {\n    _opened ? close() : open();\n  };\n\n  const { openDropdown, closeDropdown } = useDelayedHover({ open, close, closeDelay, openDelay });\n\n  const getItemIndex = (node: HTMLButtonElement) =>\n    getContextItemIndex('[data-menu-item]', '[data-menu-dropdown]', node);\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<MenuFactory>({\n    classNames,\n    styles,\n    props,\n  });\n\n  useDidUpdate(() => {\n    resetHovered();\n  }, [_opened]);\n\n  return (\n    <MenuContextProvider\n      value={{\n        getStyles,\n        opened: _opened,\n        toggleDropdown,\n        getItemIndex,\n        hovered,\n        setHovered,\n        openedViaClick,\n        setOpenedViaClick,\n        closeOnItemClick,\n        closeDropdown: trigger === 'click' ? close : closeDropdown,\n        openDropdown: trigger === 'click' ? open : openDropdown,\n        closeDropdownImmediately: close,\n        loop,\n        trigger,\n        unstyled,\n        menuItemTabIndex,\n      }}\n    >\n      <Popover\n        {...others}\n        opened={_opened}\n        onChange={toggleDropdown}\n        defaultOpened={defaultOpened}\n        trapFocus={keepMounted ? false : trapFocus}\n        closeOnEscape={closeOnEscape}\n        __staticSelector=\"Menu\"\n        classNames={resolvedClassNames}\n        styles={resolvedStyles}\n        unstyled={unstyled}\n        variant={variant}\n        keepMounted={keepMounted}\n      >\n        {children}\n      </Popover>\n    </MenuContextProvider>\n  );\n}\n\nMenu.extend = (input: ExtendComponent<MenuFactory>) => input;\nMenu.classes = classes as Record<string, string>;\nMenu.displayName = '@mantine/core/Menu';\nMenu.Item = MenuItem;\nMenu.Label = MenuLabel;\nMenu.Dropdown = MenuDropdown;\nMenu.Target = MenuTarget;\nMenu.Divider = MenuDivider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}