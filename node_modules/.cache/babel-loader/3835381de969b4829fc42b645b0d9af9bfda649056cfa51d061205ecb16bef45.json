{"ast":null,"code":"'use client';\n\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { useDirection } from '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useRatingContext } from '../Rating.context.mjs';\nimport { StarSymbol } from '../StarSymbol/StarSymbol.mjs';\nfunction RatingItem({\n  getSymbolLabel,\n  emptyIcon,\n  fullIcon,\n  full,\n  active,\n  value,\n  readOnly,\n  fractionValue,\n  color,\n  id,\n  onBlur,\n  onChange,\n  onInputChange,\n  style,\n  ...others\n}) {\n  const ctx = useRatingContext();\n  const _fullIcon = typeof fullIcon === \"function\" ? fullIcon(value) : fullIcon;\n  const _emptyIcon = typeof emptyIcon === \"function\" ? emptyIcon(value) : emptyIcon;\n  const {\n    dir\n  } = useDirection();\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [!readOnly && /* @__PURE__ */jsx(\"input\", {\n      ...ctx.getStyles(\"input\"),\n      onKeyDown: event => event.key === \" \" && onChange(value),\n      id,\n      type: \"radio\",\n      \"data-active\": active || void 0,\n      \"aria-label\": getSymbolLabel?.(value),\n      value,\n      onBlur,\n      onChange: onInputChange,\n      ...others\n    }), /* @__PURE__ */jsx(Box, {\n      component: readOnly ? \"div\" : \"label\",\n      ...ctx.getStyles(\"label\"),\n      \"data-read-only\": readOnly || void 0,\n      htmlFor: id,\n      onClick: () => onChange(value),\n      __vars: {\n        \"--rating-item-z-index\": (fractionValue === 1 ? void 0 : active ? 2 : 0)?.toString()\n      },\n      children: /* @__PURE__ */jsx(Box, {\n        ...ctx.getStyles(\"symbolBody\"),\n        __vars: {\n          \"--rating-symbol-clip-path\": fractionValue === 1 ? void 0 : dir === \"ltr\" ? `inset(0 ${active ? 100 - fractionValue * 100 : 100}% 0 0)` : `inset(0 0 0 ${active ? 100 - fractionValue * 100 : 100}% )`\n        },\n        children: full ? _fullIcon || /* @__PURE__ */jsx(StarSymbol, {\n          type: \"full\"\n        }) : _emptyIcon || /* @__PURE__ */jsx(StarSymbol, {\n          type: \"empty\"\n        })\n      })\n    })]\n  });\n}\nRatingItem.displayName = \"@mantine/core/RatingItem\";\nexport { RatingItem };","map":{"version":3,"names":["RatingItem","getSymbolLabel","emptyIcon","fullIcon","full","active","value","readOnly","fractionValue","color","id","onBlur","onChange","onInputChange","style","others","ctx","useRatingContext","_fullIcon","_emptyIcon","dir","useDirection","jsxs","Fragment","children","jsx","getStyles","onKeyDown","event","key","type","Box","component","htmlFor","onClick","__vars","toString","StarSymbol","displayName"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/Rating/RatingItem/RatingItem.tsx"],"sourcesContent":["import { Box, BoxProps, ElementProps, useDirection } from '../../../core';\nimport { useRatingContext } from '../Rating.context';\nimport { StarSymbol } from '../StarSymbol/StarSymbol';\n\nexport interface RatingItemProps extends BoxProps, ElementProps<'input', 'value' | 'size'> {\n  getSymbolLabel: ((value: number) => string) | undefined;\n  emptyIcon?: React.ReactNode | ((value: number) => React.ReactNode);\n  fullIcon?: React.ReactNode | ((value: number) => React.ReactNode);\n  full: boolean;\n  active: boolean;\n  fractionValue: number;\n  value: number;\n  id: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement> | number) => void;\n  onInputChange: (event: React.ChangeEvent<HTMLInputElement> | number) => void;\n}\n\nexport function RatingItem({\n  getSymbolLabel,\n  emptyIcon,\n  fullIcon,\n  full,\n  active,\n  value,\n  readOnly,\n  fractionValue,\n  color,\n  id,\n  onBlur,\n  onChange,\n  onInputChange,\n  style,\n  ...others\n}: RatingItemProps) {\n  const ctx = useRatingContext();\n  const _fullIcon = typeof fullIcon === 'function' ? fullIcon(value) : fullIcon;\n  const _emptyIcon = typeof emptyIcon === 'function' ? emptyIcon(value) : emptyIcon;\n  const { dir } = useDirection();\n\n  return (\n    <>\n      {!readOnly && (\n        <input\n          {...ctx.getStyles('input')}\n          onKeyDown={(event) => event.key === ' ' && onChange(value)}\n          id={id}\n          type=\"radio\"\n          data-active={active || undefined}\n          aria-label={getSymbolLabel?.(value)}\n          value={value}\n          onBlur={onBlur}\n          onChange={onInputChange}\n          {...others}\n        />\n      )}\n\n      <Box\n        component={readOnly ? 'div' : 'label'}\n        {...ctx.getStyles('label')}\n        data-read-only={readOnly || undefined}\n        htmlFor={id}\n        onClick={() => onChange(value)}\n        __vars={{\n          '--rating-item-z-index': (fractionValue === 1 ? undefined : active ? 2 : 0)?.toString(),\n        }}\n      >\n        <Box\n          {...ctx.getStyles('symbolBody')}\n          __vars={{\n            '--rating-symbol-clip-path':\n              fractionValue === 1\n                ? undefined\n                : dir === 'ltr'\n                  ? `inset(0 ${active ? 100 - fractionValue * 100 : 100}% 0 0)`\n                  : `inset(0 0 0 ${active ? 100 - fractionValue * 100 : 100}% )`,\n          }}\n        >\n          {full\n            ? _fullIcon || <StarSymbol type=\"full\" />\n            : _emptyIcon || <StarSymbol type=\"empty\" />}\n        </Box>\n      </Box>\n    </>\n  );\n}\n\nRatingItem.displayName = '@mantine/core/RatingItem';\n"],"mappings":";;;;;;;;;;;;;;;AAKO,SAASA,UAAUA,CAAC;EACzBC,cAAc;EACdC,SAAS;EACTC,QAAQ;EACRC,IAAI;EACJC,MAAM;EACNC,KAAK;EACLC,QAAQ;EACRC,aAAa;EACbC,KAAK;EACLC,EAAE;EACFC,MAAM;EACNC,QAAQ;EACRC,aAAa;EACbC,KAAK;EACL,GAAGC;AACL,CAAC,EAAE;EACD,MAAMC,GAAG,GAAGC,gBAAgB,CAAE;EAC9B,MAAMC,SAAS,GAAG,OAAOf,QAAQ,KAAK,UAAU,GAAGA,QAAQ,CAACG,KAAK,CAAC,GAAGH,QAAQ;EAC7E,MAAMgB,UAAU,GAAG,OAAOjB,SAAS,KAAK,UAAU,GAAGA,SAAS,CAACI,KAAK,CAAC,GAAGJ,SAAS;EACjF,MAAM;IAAEkB;EAAK,IAAGC,YAAY,CAAE;EAC9B,sBAAuBC,IAAI,CAACC,QAAQ,EAAE;IAAEC,QAAQ,EAAE,CAChD,CAACjB,QAAQ,mBAAoBkB,GAAG,CAC9B,OAAO,EACP;MACE,GAAGT,GAAG,CAACU,SAAS,CAAC,OAAO,CAAC;MACzBC,SAAS,EAAGC,KAAK,IAAKA,KAAK,CAACC,GAAG,KAAK,GAAG,IAAIjB,QAAQ,CAACN,KAAK,CAAC;MAC1DI,EAAE;MACFoB,IAAI,EAAE,OAAO;MACb,aAAa,EAAEzB,MAAM,IAAI,KAAK,CAAC;MAC/B,YAAY,EAAEJ,cAAc,GAAGK,KAAK,CAAC;MACrCA,KAAK;MACLK,MAAM;MACNC,QAAQ,EAAEC,aAAa;MACvB,GAAGE;IACX,CACK,GACL,eAAoBU,GAAG,CACjBM,GAAG,EACH;MACEC,SAAS,EAAEzB,QAAQ,GAAG,KAAK,GAAG,OAAO;MACrC,GAAGS,GAAG,CAACU,SAAS,CAAC,OAAO,CAAC;MACzB,gBAAgB,EAAEnB,QAAQ,IAAI,KAAK,CAAC;MACpC0B,OAAO,EAAEvB,EAAE;MACXwB,OAAO,EAAEA,CAAA,KAAMtB,QAAQ,CAACN,KAAK,CAAC;MAC9B6B,MAAM,EAAE;QACN,uBAAuB,EAAE,CAAC3B,aAAa,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGH,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG+B,QAAQ;MACnF;MACDZ,QAAQ,iBAAkBC,GAAG,CAC3BM,GAAG,EACH;QACE,GAAGf,GAAG,CAACU,SAAS,CAAC,YAAY,CAAC;QAC9BS,MAAM,EAAE;UACN,2BAA2B,EAAE3B,aAAa,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGY,GAAG,KAAK,KAAK,GAAI,WAAUf,MAAM,GAAG,GAAG,GAAGG,aAAa,GAAG,GAAG,GAAG,GAAI,QAAO,GAAI,eAAcH,MAAM,GAAG,GAAG,GAAGG,aAAa,GAAG,GAAG,GAAG,GAAI;QACnM;QACDgB,QAAQ,EAAEpB,IAAI,GAAGc,SAAS,IAAoB,eAAAO,GAAG,CAACY,UAAU,EAAE;UAAEP,IAAI,EAAE;QAAM,CAAE,CAAC,GAAGX,UAAU,mBAAoBM,GAAG,CAACY,UAAU,EAAE;UAAEP,IAAI,EAAE;QAAS;MAC7J,CACA;IACA,CACA;EACG,CAAE,CAAC;AACN;AACA9B,UAAU,CAACsC,WAAW,GAAG,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}