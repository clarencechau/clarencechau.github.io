{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { rem } from '../../../core/utils/units-converters/rem.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { ColorSlider } from '../ColorSlider/ColorSlider.mjs';\nconst HueSlider = forwardRef((props, ref) => {\n  const {\n    value,\n    onChange,\n    onChangeEnd,\n    color,\n    ...others\n  } = useProps(\"HueSlider\", {}, props);\n  return /* @__PURE__ */jsx(ColorSlider, {\n    ...others,\n    ref,\n    value,\n    onChange,\n    onChangeEnd,\n    maxValue: 360,\n    thumbColor: `hsl(${value}, 100%, 50%)`,\n    round: true,\n    \"data-hue\": true,\n    overlays: [{\n      backgroundImage: \"linear-gradient(to right,hsl(0,100%,50%),hsl(60,100%,50%),hsl(120,100%,50%),hsl(170,100%,50%),hsl(240,100%,50%),hsl(300,100%,50%),hsl(360,100%,50%))\"\n    }, {\n      boxShadow: `rgba(0, 0, 0, .1) 0 0 0 ${rem(1)} inset, rgb(0, 0, 0, .15) 0 0 ${rem(4)} inset`\n    }]\n  });\n});\nHueSlider.displayName = \"@mantine/core/HueSlider\";\nexport { HueSlider };","map":{"version":3,"names":["HueSlider","forwardRef","props","ref","value","onChange","onChangeEnd","color","others","useProps","jsx","ColorSlider","maxValue","thumbColor","round","overlays","backgroundImage","boxShadow","rem","displayName"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/ColorPicker/HueSlider/HueSlider.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport { rem, useProps } from '../../../core';\nimport { ColorSlider, ColorSliderProps } from '../ColorSlider/ColorSlider';\n\nexport interface HueSliderProps extends Omit<ColorSliderProps, 'maxValue' | 'overlays' | 'round'> {}\n\nexport const HueSlider = forwardRef<HTMLDivElement, HueSliderProps>((props, ref) => {\n  const { value, onChange, onChangeEnd, color, ...others } = useProps('HueSlider', {}, props);\n\n  return (\n    <ColorSlider\n      {...others}\n      ref={ref}\n      value={value}\n      onChange={onChange}\n      onChangeEnd={onChangeEnd}\n      maxValue={360}\n      thumbColor={`hsl(${value}, 100%, 50%)`}\n      round\n      data-hue\n      overlays={[\n        {\n          backgroundImage:\n            'linear-gradient(to right,hsl(0,100%,50%),hsl(60,100%,50%),hsl(120,100%,50%),hsl(170,100%,50%),hsl(240,100%,50%),hsl(300,100%,50%),hsl(360,100%,50%))',\n        },\n        {\n          boxShadow: `rgba(0, 0, 0, .1) 0 0 0 ${rem(1)} inset, rgb(0, 0, 0, .15) 0 0 ${rem(\n            4\n          )} inset`,\n        },\n      ]}\n    />\n  );\n});\n\nHueSlider.displayName = '@mantine/core/HueSlider';\n"],"mappings":";;;;;;;;;;;;;;;;AAKY,MAACA,SAAS,GAAGC,UAAU,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EAClD,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,KAAK;IAAE,GAAGC;EAAM,CAAE,GAAGC,QAAQ,CAAC,WAAW,EAAE,EAAE,EAAEP,KAAK,CAAC;EAC3F,sBAAuBQ,GAAG,CACxBC,WAAW,EACX;IACE,GAAGH,MAAM;IACTL,GAAG;IACHC,KAAK;IACLC,QAAQ;IACRC,WAAW;IACXM,QAAQ,EAAE,GAAG;IACbC,UAAU,EAAG,OAAMT,KAAM,cAAa;IACtCU,KAAK,EAAE,IAAI;IACX,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE,CACR;MACEC,eAAe,EAAE;IAClB,GACD;MACEC,SAAS,EAAG,2BAA0BC,GAAG,CAAC,CAAC,CAAE,iCAAgCA,GAAG,CAC9E,CACZ,CAAY;IACZ;EAEA,CACG;AACH,CAAC;AACDlB,SAAS,CAACmB,WAAW,GAAG,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}