{"ast":null,"code":"'use client';\n\nimport 'react';\nimport 'react/jsx-runtime';\nimport '@mantine/hooks';\nimport { useMantineStylesTransform } from '../../MantineProvider/Mantine.context.mjs';\nimport '../../MantineProvider/default-theme.mjs';\nimport '../../MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nfunction useStylesTransform({\n  props,\n  stylesCtx,\n  themeName\n}) {\n  const theme = useMantineTheme();\n  const stylesTransform = useMantineStylesTransform()?.();\n  const getTransformedStyles = styles => {\n    if (!stylesTransform) {\n      return [];\n    }\n    const transformedStyles = styles.map(style => stylesTransform(style, {\n      props,\n      theme,\n      ctx: stylesCtx\n    }));\n    return [...transformedStyles, ...themeName.map(n => stylesTransform(theme.components[n]?.styles, {\n      props,\n      theme,\n      ctx: stylesCtx\n    }))].filter(Boolean);\n  };\n  return {\n    getTransformedStyles,\n    withStylesTransform: !!stylesTransform\n  };\n}\nexport { useStylesTransform };","map":{"version":3,"names":["useStylesTransform","props","stylesCtx","themeName","theme","useMantineTheme","stylesTransform","useMantineStylesTransform","getTransformedStyles","styles","transformedStyles","map","style","ctx","n","components","filter","Boolean","withStylesTransform"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/core/styles-api/use-styles/use-transformed-styles.ts"],"sourcesContent":["import { useMantineStylesTransform, useMantineTheme } from '../../MantineProvider';\n\ninterface UseTransformedStylesInput {\n  props: Record<string, any>;\n  stylesCtx: Record<string, any> | undefined;\n  themeName: string[];\n}\n\nexport function useStylesTransform({ props, stylesCtx, themeName }: UseTransformedStylesInput) {\n  const theme = useMantineTheme();\n  const stylesTransform = useMantineStylesTransform()?.();\n\n  const getTransformedStyles = (styles: any[]) => {\n    if (!stylesTransform) {\n      return [];\n    }\n\n    const transformedStyles = styles.map((style) =>\n      stylesTransform(style, { props, theme, ctx: stylesCtx })\n    );\n\n    return [\n      ...transformedStyles,\n      ...themeName.map((n) =>\n        stylesTransform(theme.components[n]?.styles, { props, theme, ctx: stylesCtx })\n      ),\n    ].filter(Boolean) as Record<string, string>[];\n  };\n\n  return {\n    getTransformedStyles,\n    withStylesTransform: !!stylesTransform,\n  };\n}\n"],"mappings":";;;;;;;;;;AAEO,SAASA,kBAAkBA,CAAC;EAAEC,KAAK;EAAEC,SAAS;EAAEC;AAAS,CAAE,EAAE;EAClE,MAAMC,KAAK,GAAGC,eAAe,CAAE;EAC/B,MAAMC,eAAe,GAAGC,yBAAyB,EAAE,GAAI;EACvD,MAAMC,oBAAoB,GAAIC,MAAM,IAAK;IACvC,IAAI,CAACH,eAAe,EAAE;MACpB,OAAO,EAAE;IACf;IACI,MAAMI,iBAAiB,GAAGD,MAAM,CAACE,GAAG,CACjCC,KAAK,IAAKN,eAAe,CAACM,KAAK,EAAE;MAAEX,KAAK;MAAEG,KAAK;MAAES,GAAG,EAAEX;IAAW,EACnE;IACD,OAAO,CACL,GAAGQ,iBAAiB,EACpB,GAAGP,SAAS,CAACQ,GAAG,CACbG,CAAC,IAAKR,eAAe,CAACF,KAAK,CAACW,UAAU,CAACD,CAAC,CAAC,EAAEL,MAAM,EAAE;MAAER,KAAK;MAAEG,KAAK;MAAES,GAAG,EAAEX;IAAW,EAC5F,EACK,CAACc,MAAM,CAACC,OAAO,CAAC;EAClB;EACD,OAAO;IACLT,oBAAoB;IACpBU,mBAAmB,EAAE,CAAC,CAACZ;EACxB;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}