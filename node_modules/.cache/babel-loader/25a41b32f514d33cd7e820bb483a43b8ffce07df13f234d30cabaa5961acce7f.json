{"ast":null,"code":"'use client';\n\nimport { cssVariablesObjectToString } from './css-variables-object-to-string.mjs';\nimport { wrapWithSelector } from './wrap-with-selector.mjs';\nfunction convertCssVariables(input, selector) {\n  const sharedVariables = cssVariablesObjectToString(input.variables);\n  const shared = sharedVariables ? wrapWithSelector(selector, sharedVariables) : \"\";\n  const dark = cssVariablesObjectToString(input.dark);\n  const light = cssVariablesObjectToString(input.light);\n  const darkForced = dark ? selector === \":host\" ? wrapWithSelector(`${selector}([data-mantine-color-scheme=\"dark\"])`, dark) : wrapWithSelector(`${selector}[data-mantine-color-scheme=\"dark\"]`, dark) : \"\";\n  const lightForced = light ? selector === \":host\" ? wrapWithSelector(`${selector}([data-mantine-color-scheme=\"light\"])`, light) : wrapWithSelector(`${selector}[data-mantine-color-scheme=\"light\"]`, light) : \"\";\n  return `${shared}${darkForced}${lightForced}`;\n}\nexport { convertCssVariables };","map":{"version":3,"names":["convertCssVariables","input","selector","sharedVariables","cssVariablesObjectToString","variables","shared","wrapWithSelector","dark","light","darkForced","lightForced"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/core/MantineProvider/convert-css-variables/convert-css-variables.ts"],"sourcesContent":["import { CSSVariables, cssVariablesObjectToString } from './css-variables-object-to-string';\nimport { wrapWithSelector } from './wrap-with-selector';\n\nexport interface ConvertCSSVariablesInput {\n  /** Shared CSS variables that should be accessible independent from color scheme */\n  variables: CSSVariables;\n\n  /** CSS variables available only in dark color scheme */\n  dark: CSSVariables;\n\n  /** CSS variables available only in light color scheme */\n  light: CSSVariables;\n}\n\nexport function convertCssVariables(input: ConvertCSSVariablesInput, selector: string) {\n  const sharedVariables = cssVariablesObjectToString(input.variables);\n  const shared = sharedVariables ? wrapWithSelector(selector, sharedVariables) : '';\n  const dark = cssVariablesObjectToString(input.dark);\n  const light = cssVariablesObjectToString(input.light);\n\n  const darkForced = dark\n    ? selector === ':host'\n      ? wrapWithSelector(`${selector}([data-mantine-color-scheme=\"dark\"])`, dark)\n      : wrapWithSelector(`${selector}[data-mantine-color-scheme=\"dark\"]`, dark)\n    : '';\n\n  const lightForced = light\n    ? selector === ':host'\n      ? wrapWithSelector(`${selector}([data-mantine-color-scheme=\"light\"])`, light)\n      : wrapWithSelector(`${selector}[data-mantine-color-scheme=\"light\"]`, light)\n    : '';\n\n  return `${shared}${darkForced}${lightForced}`;\n}\n"],"mappings":";;;;AAGO,SAASA,mBAAmBA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACnD,MAAMC,eAAe,GAAGC,0BAA0B,CAACH,KAAK,CAACI,SAAS,CAAC;EACnE,MAAMC,MAAM,GAAGH,eAAe,GAAGI,gBAAgB,CAACL,QAAQ,EAAEC,eAAe,CAAC,GAAG,EAAE;EACjF,MAAMK,IAAI,GAAGJ,0BAA0B,CAACH,KAAK,CAACO,IAAI,CAAC;EACnD,MAAMC,KAAK,GAAGL,0BAA0B,CAACH,KAAK,CAACQ,KAAK,CAAC;EACrD,MAAMC,UAAU,GAAGF,IAAI,GAAGN,QAAQ,KAAK,OAAO,GAAGK,gBAAgB,CAAE,GAAEL,QAAS,sCAAqC,EAAEM,IAAI,CAAC,GAAGD,gBAAgB,CAAE,GAAEL,QAAS,oCAAmC,EAAEM,IAAI,CAAC,GAAG,EAAE;EACzM,MAAMG,WAAW,GAAGF,KAAK,GAAGP,QAAQ,KAAK,OAAO,GAAGK,gBAAgB,CAAE,GAAEL,QAAS,uCAAsC,EAAEO,KAAK,CAAC,GAAGF,gBAAgB,CAAE,GAAEL,QAAS,qCAAoC,EAAEO,KAAK,CAAC,GAAG,EAAE;EAC/M,OAAQ,GAAEH,MAAO,GAAEI,UAAW,GAAEC,WAAY,EAAC;AAC/C"},"metadata":{},"sourceType":"module","externalDependencies":[]}