{"ast":null,"code":"'use client';\n\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport cx from 'clsx';\nimport 'react';\nimport '@mantine/hooks';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useRandomClassName } from '../../../core/Box/use-random-classname/use-random-classname.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useGridContext } from '../Grid.context.mjs';\nimport { GridColVariables } from './GridColVariables.mjs';\nimport classes from '../Grid.module.css.mjs';\nconst defaultProps = {\n  span: 12\n};\nconst GridCol = factory((_props, ref) => {\n  const props = useProps(\"GridCol\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    span,\n    order,\n    offset,\n    ...others\n  } = props;\n  const ctx = useGridContext();\n  const responsiveClassName = useRandomClassName();\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(GridColVariables, {\n      selector: `.${responsiveClassName}`,\n      span,\n      order,\n      offset\n    }), /* @__PURE__ */jsx(Box, {\n      ref,\n      ...ctx.getStyles(\"col\", {\n        className: cx(className, responsiveClassName),\n        style,\n        classNames,\n        styles\n      }),\n      ...others\n    })]\n  });\n});\nGridCol.classes = classes;\nGridCol.displayName = \"@mantine/core/GridCol\";\nexport { GridCol };","map":{"version":3,"names":["defaultProps","span","GridCol","factory","_props","ref","props","useProps","classNames","className","style","styles","vars","order","offset","others","ctx","useGridContext","responsiveClassName","useRandomClassName","jsxs","Fragment","children","jsx","GridColVariables","selector","Box","getStyles","cx","classes","displayName"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/Grid/GridCol/GridCol.tsx"],"sourcesContent":["import cx from 'clsx';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  StyleProp,\n  useProps,\n  useRandomClassName,\n} from '../../../core';\nimport { useGridContext } from '../Grid.context';\nimport { GridColVariables } from './GridColVariables';\nimport classes from '../Grid.module.css';\n\nexport type GridColStylesNames = 'col';\nexport type ColSpan = number | 'auto' | 'content';\n\nexport interface GridColProps\n  extends BoxProps,\n    CompoundStylesApiProps<GridColFactory>,\n    ElementProps<'div'> {\n  /** Column span, `12` by default */\n  span?: StyleProp<ColSpan>;\n\n  /** Column order, can be used to reorder columns at different viewport sizes */\n  order?: StyleProp<number>;\n\n  /** Column offset on the left side â€“ number of columns that should be left empty before this column */\n  offset?: StyleProp<number>;\n}\n\nexport type GridColFactory = Factory<{\n  props: GridColProps;\n  ref: HTMLDivElement;\n  stylesNames: GridColStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<GridColProps> = {\n  span: 12,\n};\n\nexport const GridCol = factory<GridColFactory>((_props, ref) => {\n  const props = useProps('GridCol', defaultProps, _props);\n  const { classNames, className, style, styles, vars, span, order, offset, ...others } = props;\n  const ctx = useGridContext();\n  const responsiveClassName = useRandomClassName();\n  return (\n    <>\n      <GridColVariables\n        selector={`.${responsiveClassName}`}\n        span={span}\n        order={order}\n        offset={offset}\n      />\n\n      <Box\n        ref={ref}\n        {...ctx.getStyles('col', {\n          className: cx(className, responsiveClassName),\n          style,\n          classNames,\n          styles,\n        })}\n        {...others}\n      />\n    </>\n  );\n});\n\nGridCol.classes = classes;\nGridCol.displayName = '@mantine/core/GridCol';\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAYA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE;AACR,CAAC;AACW,MAACC,OAAO,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EAC9C,MAAMC,KAAK,GAAGC,QAAQ,CAAC,SAAS,EAAEP,YAAY,EAAEI,MAAM,CAAC;EACvD,MAAM;IAAEI,UAAU;IAAEC,SAAS;IAAEC,KAAK;IAAEC,MAAM;IAAEC,IAAI;IAAEX,IAAI;IAAEY,KAAK;IAAEC,MAAM;IAAE,GAAGC;EAAQ,IAAGT,KAAK;EAC5F,MAAMU,GAAG,GAAGC,cAAc,CAAE;EAC5B,MAAMC,mBAAmB,GAAGC,kBAAkB,CAAE;EAChD,sBAAuBC,IAAI,CAACC,QAAQ,EAAE;IAAEC,QAAQ,EAAE,CACpD,eAAoBC,GAAG,CACjBC,gBAAgB,EAChB;MACEC,QAAQ,EAAG,IAAGP,mBAAoB,EAAC;MACnCjB,IAAI;MACJY,KAAK;MACLC;IACR,CACK,GACL,eAAoBS,GAAG,CACjBG,GAAG,EACH;MACErB,GAAG;MACH,GAAGW,GAAG,CAACW,SAAS,CAAC,KAAK,EAAE;QACtBlB,SAAS,EAAEmB,EAAE,CAACnB,SAAS,EAAES,mBAAmB,CAAC;QAC7CR,KAAK;QACLF,UAAU;QACVG;MACV,CAAS,CAAC;MACF,GAAGI;IACX,CACA;EACG,CAAE,CAAC;AACN,CAAC;AACDb,OAAO,CAAC2B,OAAO,GAAGA,OAAO;AACzB3B,OAAO,CAAC4B,WAAW,GAAG,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}