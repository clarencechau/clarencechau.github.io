{"ast":null,"code":"function map(value, iStart, iStop, oStart, oStop) {\n  return oStart + (oStop - oStart) * ((value - iStart) / (iStop - iStart));\n}\nfunction isNumber(subject) {\n  return typeof subject === 'number';\n}\nfunction isString(subject) {\n  return typeof subject === 'string';\n}\nfunction isObject(subject) {\n  return Object.prototype.toString.call(subject) === '[object Object]';\n}\nfunction isArray(subject) {\n  return Array.isArray(subject);\n}\nfunction isRecord(subject) {\n  return isObject(subject) || isArray(subject);\n}\nfunction mathAbs(n) {\n  return Math.abs(n);\n}\nfunction mathSign(n) {\n  return !n ? 0 : n / mathAbs(n);\n}\nfunction deltaAbs(valueB, valueA) {\n  return mathAbs(valueB - valueA);\n}\nfunction factorAbs(valueB, valueA) {\n  if (valueB === 0 || valueA === 0) return 0;\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0;\n  var diff = deltaAbs(mathAbs(valueB), mathAbs(valueA));\n  return mathAbs(diff / valueB);\n}\nfunction roundToDecimals(decimalPoints) {\n  var pow = Math.pow(10, decimalPoints);\n  return function (n) {\n    return Math.round(n * pow) / pow;\n  };\n}\nfunction arrayKeys(array) {\n  return objectKeys(array).map(Number);\n}\nfunction arrayLast(array) {\n  return array[arrayLastIndex(array)];\n}\nfunction arrayLastIndex(array) {\n  return Math.max(0, array.length - 1);\n}\nfunction objectKeys(object) {\n  return Object.keys(object);\n}\nfunction objectsMergeDeep(objectA, objectB) {\n  return [objectA, objectB].reduce(function (mergedObjects, currentObject) {\n    objectKeys(currentObject).forEach(function (key) {\n      var valueA = mergedObjects[key];\n      var valueB = currentObject[key];\n      var areObjects = isObject(valueA) && isObject(valueB);\n      mergedObjects[key] = areObjects ? objectsMergeDeep(valueA, valueB) : valueB;\n    });\n    return mergedObjects;\n  }, {});\n}\nfunction objectsAreEqual(objectA, objectB) {\n  var objectAKeys = objectKeys(objectA);\n  var objectBKeys = objectKeys(objectB);\n  if (objectAKeys.length !== objectBKeys.length) return false;\n  return objectAKeys.every(function (key) {\n    var valueA = objectA[key];\n    var valueB = objectB[key];\n    if (typeof valueA === 'function') return \"\".concat(valueA) === \"\".concat(valueB);\n    if (!isRecord(valueA) || !isRecord(valueB)) return valueA === valueB;\n    return objectsAreEqual(valueA, valueB);\n  });\n}\nfunction Alignment(align, viewSize) {\n  var predefined = {\n    start: start,\n    center: center,\n    end: end\n  };\n  function start() {\n    return 0;\n  }\n  function center(n) {\n    return end(n) / 2;\n  }\n  function end(n) {\n    return viewSize - n;\n  }\n  function percent() {\n    return viewSize * Number(align);\n  }\n  function measure(n) {\n    if (isNumber(align)) return percent();\n    return predefined[align](n);\n  }\n  var self = {\n    measure: measure\n  };\n  return self;\n}\nfunction Animation(callback) {\n  var animationFrame = 0;\n  function ifAnimating(active, cb) {\n    return function () {\n      if (active === !!animationFrame) cb();\n    };\n  }\n  function start() {\n    animationFrame = window.requestAnimationFrame(callback);\n  }\n  function stop() {\n    window.cancelAnimationFrame(animationFrame);\n    animationFrame = 0;\n  }\n  var self = {\n    proceed: ifAnimating(true, start),\n    start: ifAnimating(false, start),\n    stop: ifAnimating(true, stop)\n  };\n  return self;\n}\nfunction Axis(axis, direction) {\n  var scroll = axis === 'y' ? 'y' : 'x';\n  var cross = axis === 'y' ? 'x' : 'y';\n  var startEdge = getStartEdge();\n  var endEdge = getEndEdge();\n  function measureSize(rect) {\n    var width = rect.width,\n      height = rect.height;\n    return scroll === 'x' ? width : height;\n  }\n  function getStartEdge() {\n    if (scroll === 'y') return 'top';\n    return direction === 'rtl' ? 'right' : 'left';\n  }\n  function getEndEdge() {\n    if (scroll === 'y') return 'bottom';\n    return direction === 'rtl' ? 'left' : 'right';\n  }\n  var self = {\n    scroll: scroll,\n    cross: cross,\n    startEdge: startEdge,\n    endEdge: endEdge,\n    measureSize: measureSize\n  };\n  return self;\n}\nfunction Limit(min, max) {\n  var length = mathAbs(min - max);\n  function reachedMin(n) {\n    return n < min;\n  }\n  function reachedMax(n) {\n    return n > max;\n  }\n  function reachedAny(n) {\n    return reachedMin(n) || reachedMax(n);\n  }\n  function constrain(n) {\n    if (!reachedAny(n)) return n;\n    return reachedMin(n) ? min : max;\n  }\n  function removeOffset(n) {\n    if (!length) return n;\n    return n - length * Math.ceil((n - max) / length);\n  }\n  var self = {\n    length: length,\n    max: max,\n    min: min,\n    constrain: constrain,\n    reachedAny: reachedAny,\n    reachedMax: reachedMax,\n    reachedMin: reachedMin,\n    removeOffset: removeOffset\n  };\n  return self;\n}\nfunction Counter(max, start, loop) {\n  var _a = Limit(0, max),\n    min = _a.min,\n    constrain = _a.constrain;\n  var loopEnd = max + 1;\n  var counter = withinLimit(start);\n  function withinLimit(n) {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd);\n  }\n  function get() {\n    return counter;\n  }\n  function set(n) {\n    counter = withinLimit(n);\n    return self;\n  }\n  function add(n) {\n    return set(get() + n);\n  }\n  function clone() {\n    return Counter(max, get(), loop);\n  }\n  var self = {\n    add: add,\n    clone: clone,\n    get: get,\n    set: set,\n    min: min,\n    max: max\n  };\n  return self;\n}\nfunction Direction(direction) {\n  var sign = direction === 'rtl' ? -1 : 1;\n  function apply(n) {\n    return n * sign;\n  }\n  var self = {\n    apply: apply\n  };\n  return self;\n}\nfunction EventStore() {\n  var listeners = [];\n  function add(node, type, handler, options) {\n    if (options === void 0) {\n      options = {\n        passive: true\n      };\n    }\n    node.addEventListener(type, handler, options);\n    listeners.push(function () {\n      return node.removeEventListener(type, handler, options);\n    });\n    return self;\n  }\n  function removeAll() {\n    listeners = listeners.filter(function (remove) {\n      return remove();\n    });\n    return self;\n  }\n  var self = {\n    add: add,\n    removeAll: removeAll\n  };\n  return self;\n}\nfunction Vector1D(value) {\n  var vector = value;\n  function get() {\n    return vector;\n  }\n  function set(n) {\n    vector = readNumber(n);\n    return self;\n  }\n  function add(n) {\n    vector += readNumber(n);\n    return self;\n  }\n  function subtract(n) {\n    vector -= readNumber(n);\n    return self;\n  }\n  function multiply(n) {\n    vector *= n;\n    return self;\n  }\n  function divide(n) {\n    vector /= n;\n    return self;\n  }\n  function normalize() {\n    if (vector !== 0) divide(vector);\n    return self;\n  }\n  function readNumber(n) {\n    return isNumber(n) ? n : n.get();\n  }\n  var self = {\n    add: add,\n    divide: divide,\n    get: get,\n    multiply: multiply,\n    normalize: normalize,\n    set: set,\n    subtract: subtract\n  };\n  return self;\n}\nfunction DragHandler(axis, direction, rootNode, target, dragTracker, location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, loop, dragFree, skipSnaps) {\n  var crossAxis = axis.cross;\n  var focusNodes = ['INPUT', 'SELECT', 'TEXTAREA'];\n  var nonPassiveEvent = {\n    passive: false\n  };\n  var dragStartPoint = Vector1D(0);\n  var activationEvents = EventStore();\n  var interactionEvents = EventStore();\n  var dragThreshold = percentOfView.measure(20);\n  var snapForceBoost = {\n    mouse: 300,\n    touch: 400\n  };\n  var freeForceBoost = {\n    mouse: 500,\n    touch: 600\n  };\n  var baseSpeed = dragFree ? 5 : 16;\n  var baseMass = 1;\n  var startScroll = 0;\n  var startCross = 0;\n  var pointerIsDown = false;\n  var preventScroll = false;\n  var preventClick = false;\n  var isMouse = false;\n  function addActivationEvents() {\n    var node = rootNode;\n    activationEvents.add(node, 'dragstart', function (evt) {\n      return evt.preventDefault();\n    }, nonPassiveEvent).add(node, 'touchmove', function () {\n      return undefined;\n    }, nonPassiveEvent).add(node, 'touchend', function () {\n      return undefined;\n    }).add(node, 'touchstart', down).add(node, 'mousedown', down).add(node, 'touchcancel', up).add(node, 'contextmenu', up).add(node, 'click', click, true);\n  }\n  function addInteractionEvents() {\n    var node = isMouse ? document : rootNode;\n    interactionEvents.add(node, 'touchmove', move, nonPassiveEvent).add(node, 'touchend', up).add(node, 'mousemove', move, nonPassiveEvent).add(node, 'mouseup', up);\n  }\n  function removeAllEvents() {\n    activationEvents.removeAll();\n    interactionEvents.removeAll();\n  }\n  function isFocusNode(node) {\n    var name = node.nodeName || '';\n    return focusNodes.indexOf(name) > -1;\n  }\n  function forceBoost() {\n    var boost = dragFree ? freeForceBoost : snapForceBoost;\n    var type = isMouse ? 'mouse' : 'touch';\n    return boost[type];\n  }\n  function allowedForce(force, targetChanged) {\n    var next = index.clone().add(mathSign(force) * -1);\n    var isEdge = next.get() === index.min || next.get() === index.max;\n    var baseForce = scrollTarget.byDistance(force, !dragFree).distance;\n    if (dragFree || mathAbs(force) < dragThreshold) return baseForce;\n    if (!loop && isEdge) return baseForce * 0.4;\n    if (skipSnaps && targetChanged) return baseForce * 0.5;\n    return scrollTarget.byIndex(next.get(), 0).distance;\n  }\n  function down(evt) {\n    isMouse = !dragTracker.isTouchEvent(evt);\n    if (isMouse && evt.button !== 0) return;\n    if (isFocusNode(evt.target)) return;\n    var isMoving = deltaAbs(target.get(), location.get()) >= 2;\n    var clearPreventClick = isMouse || !isMoving;\n    pointerIsDown = true;\n    dragTracker.pointerDown(evt);\n    dragStartPoint.set(target);\n    target.set(location);\n    scrollBody.useBaseMass().useSpeed(80);\n    addInteractionEvents();\n    startScroll = dragTracker.readPoint(evt);\n    startCross = dragTracker.readPoint(evt, crossAxis);\n    eventHandler.emit('pointerDown');\n    if (clearPreventClick) preventClick = false;\n  }\n  function move(evt) {\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt);\n      var lastScroll = dragTracker.readPoint(evt);\n      var lastCross = dragTracker.readPoint(evt, crossAxis);\n      var diffScroll = deltaAbs(lastScroll, startScroll);\n      var diffCross = deltaAbs(lastCross, startCross);\n      preventScroll = diffScroll > diffCross;\n      if (!preventScroll && !preventClick) return up(evt);\n    }\n    var diff = dragTracker.pointerMove(evt);\n    if (!preventClick && diff) preventClick = true;\n    animation.start();\n    target.add(direction.apply(diff));\n    evt.preventDefault();\n  }\n  function up(evt) {\n    var currentLocation = scrollTarget.byDistance(0, false);\n    var targetChanged = currentLocation.index !== index.get();\n    var rawForce = dragTracker.pointerUp(evt) * forceBoost();\n    var force = allowedForce(direction.apply(rawForce), targetChanged);\n    var forceFactor = factorAbs(rawForce, force);\n    var isMoving = deltaAbs(target.get(), dragStartPoint.get()) >= 0.5;\n    var isVigorous = targetChanged && forceFactor > 0.75;\n    var isBelowThreshold = mathAbs(rawForce) < dragThreshold;\n    var speed = isVigorous ? 10 : baseSpeed;\n    var mass = isVigorous ? baseMass + 2.5 * forceFactor : baseMass;\n    if (isMoving && !isMouse) preventClick = true;\n    preventScroll = false;\n    pointerIsDown = false;\n    interactionEvents.removeAll();\n    scrollBody.useSpeed(isBelowThreshold ? 9 : speed).useMass(mass);\n    scrollTo.distance(force, !dragFree);\n    isMouse = false;\n    eventHandler.emit('pointerUp');\n  }\n  function click(evt) {\n    if (preventClick) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n  }\n  // DEPRECATED - Remove in v8 because handled automatically\n  function clickAllowed() {\n    return !preventClick;\n  }\n  function pointerDown() {\n    return pointerIsDown;\n  }\n  var self = {\n    addActivationEvents: addActivationEvents,\n    clickAllowed: clickAllowed,\n    pointerDown: pointerDown,\n    removeAllEvents: removeAllEvents\n  };\n  return self;\n}\nfunction DragTracker(axis) {\n  var logInterval = 170;\n  var startEvent;\n  var lastEvent;\n  function isTouchEvent(evt) {\n    return typeof TouchEvent !== 'undefined' && evt instanceof TouchEvent;\n  }\n  function readTime(evt) {\n    return evt.timeStamp;\n  }\n  function readPoint(evt, evtAxis) {\n    var property = evtAxis || axis.scroll;\n    var coord = \"client\".concat(property === 'x' ? 'X' : 'Y');\n    return (isTouchEvent(evt) ? evt.touches[0] : evt)[coord];\n  }\n  function pointerDown(evt) {\n    startEvent = evt;\n    lastEvent = evt;\n    return readPoint(evt);\n  }\n  function pointerMove(evt) {\n    var diff = readPoint(evt) - readPoint(lastEvent);\n    var expired = readTime(evt) - readTime(startEvent) > logInterval;\n    lastEvent = evt;\n    if (expired) startEvent = evt;\n    return diff;\n  }\n  function pointerUp(evt) {\n    if (!startEvent || !lastEvent) return 0;\n    var diffDrag = readPoint(lastEvent) - readPoint(startEvent);\n    var diffTime = readTime(evt) - readTime(startEvent);\n    var expired = readTime(evt) - readTime(lastEvent) > logInterval;\n    var force = diffDrag / diffTime;\n    var isFlick = diffTime && !expired && mathAbs(force) > 0.1;\n    return isFlick ? force : 0;\n  }\n  var self = {\n    isTouchEvent: isTouchEvent,\n    pointerDown: pointerDown,\n    pointerMove: pointerMove,\n    pointerUp: pointerUp,\n    readPoint: readPoint\n  };\n  return self;\n}\nfunction PercentOfView(viewSize) {\n  function measure(n) {\n    return viewSize * (n / 100);\n  }\n  var self = {\n    measure: measure\n  };\n  return self;\n}\nfunction ScrollBody(location, baseSpeed, baseMass) {\n  var roundToTwoDecimals = roundToDecimals(2);\n  var velocity = Vector1D(0);\n  var acceleration = Vector1D(0);\n  var attraction = Vector1D(0);\n  var attractionDirection = 0;\n  var speed = baseSpeed;\n  var mass = baseMass;\n  function update() {\n    velocity.add(acceleration);\n    location.add(velocity);\n    acceleration.multiply(0);\n  }\n  function applyForce(force) {\n    force.divide(mass);\n    acceleration.add(force);\n  }\n  function seek(target) {\n    attraction.set(target).subtract(location);\n    var magnitude = map(attraction.get(), 0, 100, 0, speed);\n    attractionDirection = mathSign(attraction.get());\n    attraction.normalize().multiply(magnitude).subtract(velocity);\n    applyForce(attraction);\n    return self;\n  }\n  function settle(target) {\n    var diff = target.get() - location.get();\n    var hasSettled = !roundToTwoDecimals(diff);\n    if (hasSettled) location.set(target);\n    return hasSettled;\n  }\n  function direction() {\n    return attractionDirection;\n  }\n  function useBaseSpeed() {\n    return useSpeed(baseSpeed);\n  }\n  function useBaseMass() {\n    return useMass(baseMass);\n  }\n  function useSpeed(n) {\n    speed = n;\n    return self;\n  }\n  function useMass(n) {\n    mass = n;\n    return self;\n  }\n  var self = {\n    direction: direction,\n    seek: seek,\n    settle: settle,\n    update: update,\n    useBaseMass: useBaseMass,\n    useBaseSpeed: useBaseSpeed,\n    useMass: useMass,\n    useSpeed: useSpeed\n  };\n  return self;\n}\nfunction ScrollBounds(limit, location, target, scrollBody, percentOfView) {\n  var pullBackThreshold = percentOfView.measure(10);\n  var edgeOffsetTolerance = percentOfView.measure(50);\n  var maxFriction = 0.85;\n  var disabled = false;\n  function shouldConstrain() {\n    if (disabled) return false;\n    if (!limit.reachedAny(target.get())) return false;\n    if (!limit.reachedAny(location.get())) return false;\n    return true;\n  }\n  function constrain(pointerDown) {\n    if (!shouldConstrain()) return;\n    var edge = limit.reachedMin(location.get()) ? 'min' : 'max';\n    var diffToEdge = mathAbs(limit[edge] - location.get());\n    var diffToTarget = target.get() - location.get();\n    var friction = Math.min(diffToEdge / edgeOffsetTolerance, maxFriction);\n    target.subtract(diffToTarget * friction);\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()));\n      scrollBody.useSpeed(10).useMass(3);\n    }\n  }\n  function toggleActive(active) {\n    disabled = !active;\n  }\n  var self = {\n    constrain: constrain,\n    toggleActive: toggleActive\n  };\n  return self;\n}\nfunction ScrollContain(viewSize, contentSize, snapsAligned, containScroll) {\n  var scrollBounds = Limit(-contentSize + viewSize, snapsAligned[0]);\n  var snapsBounded = snapsAligned.map(scrollBounds.constrain);\n  var snapsContained = measureContained();\n  function findDuplicates() {\n    var startSnap = snapsBounded[0];\n    var endSnap = arrayLast(snapsBounded);\n    var min = snapsBounded.lastIndexOf(startSnap);\n    var max = snapsBounded.indexOf(endSnap) + 1;\n    return Limit(min, max);\n  }\n  function measureContained() {\n    if (contentSize <= viewSize) return [scrollBounds.max];\n    if (containScroll === 'keepSnaps') return snapsBounded;\n    var _a = findDuplicates(),\n      min = _a.min,\n      max = _a.max;\n    return snapsBounded.slice(min, max);\n  }\n  var self = {\n    snapsContained: snapsContained\n  };\n  return self;\n}\nfunction ScrollLimit(contentSize, scrollSnaps, loop) {\n  var limit = measureLimit();\n  function measureLimit() {\n    var startSnap = scrollSnaps[0];\n    var endSnap = arrayLast(scrollSnaps);\n    var min = loop ? startSnap - contentSize : endSnap;\n    var max = startSnap;\n    return Limit(min, max);\n  }\n  var self = {\n    limit: limit\n  };\n  return self;\n}\nfunction ScrollLooper(contentSize, limit, location, vectors) {\n  var jointSafety = 0.1;\n  var min = limit.min + jointSafety;\n  var max = limit.max + jointSafety;\n  var _a = Limit(min, max),\n    reachedMin = _a.reachedMin,\n    reachedMax = _a.reachedMax;\n  function shouldLoop(direction) {\n    if (direction === 1) return reachedMax(location.get());\n    if (direction === -1) return reachedMin(location.get());\n    return false;\n  }\n  function loop(direction) {\n    if (!shouldLoop(direction)) return;\n    var loopDistance = contentSize * (direction * -1);\n    vectors.forEach(function (v) {\n      return v.add(loopDistance);\n    });\n  }\n  var self = {\n    loop: loop\n  };\n  return self;\n}\nfunction ScrollProgress(limit) {\n  var max = limit.max,\n    scrollLength = limit.length;\n  function get(n) {\n    var currentLocation = n - max;\n    return currentLocation / -scrollLength;\n  }\n  var self = {\n    get: get\n  };\n  return self;\n}\nfunction ScrollSnaps(axis, alignment, containerRect, slideRects, slideSizesWithGaps, slidesToScroll, containScroll) {\n  var startEdge = axis.startEdge,\n    endEdge = axis.endEdge;\n  var groupSlides = slidesToScroll.groupSlides;\n  var alignments = measureSizes().map(alignment.measure);\n  var snaps = measureUnaligned();\n  var snapsAligned = measureAligned();\n  function measureSizes() {\n    return groupSlides(slideRects).map(function (rects) {\n      return arrayLast(rects)[endEdge] - rects[0][startEdge];\n    }).map(mathAbs);\n  }\n  function measureUnaligned() {\n    return slideRects.map(function (rect) {\n      return containerRect[startEdge] - rect[startEdge];\n    }).map(function (snap) {\n      return -mathAbs(snap);\n    });\n  }\n  function measureAligned() {\n    var containedStartSnap = 0;\n    var containedEndSnap = arrayLast(snaps) - arrayLast(slideSizesWithGaps);\n    return groupSlides(snaps).map(function (g) {\n      return g[0];\n    }).map(function (snap, index, groupedSnaps) {\n      var isFirst = !index;\n      var isLast = index === arrayLastIndex(groupedSnaps);\n      if (containScroll && isFirst) return containedStartSnap;\n      if (containScroll && isLast) return containedEndSnap;\n      return snap + alignments[index];\n    });\n  }\n  var self = {\n    snaps: snaps,\n    snapsAligned: snapsAligned\n  };\n  return self;\n}\nfunction ScrollTarget(loop, scrollSnaps, contentSize, limit, targetVector) {\n  var reachedAny = limit.reachedAny,\n    removeOffset = limit.removeOffset,\n    constrain = limit.constrain;\n  function minDistance(distances) {\n    return distances.concat().sort(function (a, b) {\n      return mathAbs(a) - mathAbs(b);\n    })[0];\n  }\n  function findTargetSnap(target) {\n    var distance = loop ? removeOffset(target) : constrain(target);\n    var ascDiffsToSnaps = scrollSnaps.map(function (scrollSnap) {\n      return scrollSnap - distance;\n    }).map(function (diffToSnap) {\n      return shortcut(diffToSnap, 0);\n    }).map(function (diff, i) {\n      return {\n        diff: diff,\n        index: i\n      };\n    }).sort(function (d1, d2) {\n      return mathAbs(d1.diff) - mathAbs(d2.diff);\n    });\n    var index = ascDiffsToSnaps[0].index;\n    return {\n      index: index,\n      distance: distance\n    };\n  }\n  function shortcut(target, direction) {\n    var targets = [target, target + contentSize, target - contentSize];\n    if (!loop) return targets[0];\n    if (!direction) return minDistance(targets);\n    var matchingTargets = targets.filter(function (t) {\n      return mathSign(t) === direction;\n    });\n    return minDistance(matchingTargets);\n  }\n  function byIndex(index, direction) {\n    var diffToSnap = scrollSnaps[index] - targetVector.get();\n    var distance = shortcut(diffToSnap, direction);\n    return {\n      index: index,\n      distance: distance\n    };\n  }\n  function byDistance(distance, snap) {\n    var target = targetVector.get() + distance;\n    var _a = findTargetSnap(target),\n      index = _a.index,\n      targetSnapDistance = _a.distance;\n    var reachedBound = !loop && reachedAny(target);\n    if (!snap || reachedBound) return {\n      index: index,\n      distance: distance\n    };\n    var diffToSnap = scrollSnaps[index] - targetSnapDistance;\n    var snapDistance = distance + shortcut(diffToSnap, 0);\n    return {\n      index: index,\n      distance: snapDistance\n    };\n  }\n  var self = {\n    byDistance: byDistance,\n    byIndex: byIndex,\n    shortcut: shortcut\n  };\n  return self;\n}\nfunction ScrollTo(animation, indexCurrent, indexPrevious, scrollTarget, targetVector, eventHandler) {\n  function scrollTo(target) {\n    var distanceDiff = target.distance;\n    var indexDiff = target.index !== indexCurrent.get();\n    if (distanceDiff) {\n      animation.start();\n      targetVector.add(distanceDiff);\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get());\n      indexCurrent.set(target.index);\n      eventHandler.emit('select');\n    }\n  }\n  function distance(n, snap) {\n    var target = scrollTarget.byDistance(n, snap);\n    scrollTo(target);\n  }\n  function index(n, direction) {\n    var targetIndex = indexCurrent.clone().set(n);\n    var target = scrollTarget.byIndex(targetIndex.get(), direction);\n    scrollTo(target);\n  }\n  var self = {\n    distance: distance,\n    index: index\n  };\n  return self;\n}\nfunction Translate(axis, direction, container) {\n  var translate = axis.scroll === 'x' ? x : y;\n  var containerStyle = container.style;\n  var disabled = false;\n  function x(n) {\n    return \"translate3d(\".concat(n, \"px,0px,0px)\");\n  }\n  function y(n) {\n    return \"translate3d(0px,\".concat(n, \"px,0px)\");\n  }\n  function to(target) {\n    if (disabled) return;\n    containerStyle.transform = translate(direction.apply(target.get()));\n  }\n  function toggleActive(active) {\n    disabled = !active;\n  }\n  function clear() {\n    if (disabled) return;\n    containerStyle.transform = '';\n    if (!container.getAttribute('style')) container.removeAttribute('style');\n  }\n  var self = {\n    clear: clear,\n    to: to,\n    toggleActive: toggleActive\n  };\n  return self;\n}\nfunction SlideLooper(axis, direction, viewSize, contentSize, slideSizesWithGaps, scrollSnaps, slidesInView, scroll, slides) {\n  var ascItems = arrayKeys(slideSizesWithGaps);\n  var descItems = arrayKeys(slideSizesWithGaps).reverse();\n  var loopPoints = startPoints().concat(endPoints());\n  function removeSlideSizes(indexes, from) {\n    return indexes.reduce(function (a, i) {\n      return a - slideSizesWithGaps[i];\n    }, from);\n  }\n  function slidesInGap(indexes, gap) {\n    return indexes.reduce(function (a, i) {\n      var remainingGap = removeSlideSizes(a, gap);\n      return remainingGap > 0 ? a.concat([i]) : a;\n    }, []);\n  }\n  function findLoopPoints(indexes, edge) {\n    var isStartEdge = edge === 'start';\n    var offset = isStartEdge ? -contentSize : contentSize;\n    var slideBounds = slidesInView.findSlideBounds([offset]);\n    return indexes.map(function (index) {\n      var initial = isStartEdge ? 0 : -contentSize;\n      var altered = isStartEdge ? contentSize : 0;\n      var bounds = slideBounds.filter(function (b) {\n        return b.index === index;\n      })[0];\n      var point = bounds[isStartEdge ? 'end' : 'start'];\n      var shift = Vector1D(-1);\n      var location = Vector1D(-1);\n      var translate = Translate(axis, direction, slides[index]);\n      var target = function () {\n        return shift.set(scroll.get() > point ? initial : altered);\n      };\n      return {\n        index: index,\n        location: location,\n        translate: translate,\n        target: target\n      };\n    });\n  }\n  function startPoints() {\n    var gap = scrollSnaps[0] - 1;\n    var indexes = slidesInGap(descItems, gap);\n    return findLoopPoints(indexes, 'end');\n  }\n  function endPoints() {\n    var gap = viewSize - scrollSnaps[0] - 1;\n    var indexes = slidesInGap(ascItems, gap);\n    return findLoopPoints(indexes, 'start');\n  }\n  function canLoop() {\n    return loopPoints.every(function (_a) {\n      var index = _a.index;\n      var otherIndexes = ascItems.filter(function (i) {\n        return i !== index;\n      });\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1;\n    });\n  }\n  function loop() {\n    loopPoints.forEach(function (loopPoint) {\n      var target = loopPoint.target,\n        translate = loopPoint.translate,\n        location = loopPoint.location;\n      var shift = target();\n      if (shift.get() === location.get()) return;\n      if (shift.get() === 0) translate.clear();else translate.to(shift);\n      location.set(shift);\n    });\n  }\n  function clear() {\n    loopPoints.forEach(function (loopPoint) {\n      return loopPoint.translate.clear();\n    });\n  }\n  var self = {\n    canLoop: canLoop,\n    clear: clear,\n    loop: loop,\n    loopPoints: loopPoints\n  };\n  return self;\n}\nfunction SlidesInView(viewSize, contentSize, slideSizes, snaps, limit, loop, inViewThreshold) {\n  var removeOffset = limit.removeOffset,\n    constrain = limit.constrain;\n  var roundingSafety = 0.5;\n  var cachedOffsets = loop ? [0, contentSize, -contentSize] : [0];\n  var cachedBounds = findSlideBounds(cachedOffsets, inViewThreshold);\n  function findSlideThresholds(threshold) {\n    var slideThreshold = threshold || 0;\n    return slideSizes.map(function (slideSize) {\n      var thresholdLimit = Limit(roundingSafety, slideSize - roundingSafety);\n      return thresholdLimit.constrain(slideSize * slideThreshold);\n    });\n  }\n  function findSlideBounds(offsets, threshold) {\n    var slideOffsets = offsets || cachedOffsets;\n    var slideThresholds = findSlideThresholds(threshold);\n    return slideOffsets.reduce(function (list, offset) {\n      var bounds = snaps.map(function (snap, index) {\n        return {\n          start: snap - slideSizes[index] + slideThresholds[index] + offset,\n          end: snap + viewSize - slideThresholds[index] + offset,\n          index: index\n        };\n      });\n      return list.concat(bounds);\n    }, []);\n  }\n  function check(location, bounds) {\n    var limitedLocation = loop ? removeOffset(location) : constrain(location);\n    var slideBounds = bounds || cachedBounds;\n    return slideBounds.reduce(function (list, slideBound) {\n      var index = slideBound.index,\n        start = slideBound.start,\n        end = slideBound.end;\n      var inList = list.indexOf(index) !== -1;\n      var inView = start < limitedLocation && end > limitedLocation;\n      return !inList && inView ? list.concat([index]) : list;\n    }, []);\n  }\n  var self = {\n    check: check,\n    findSlideBounds: findSlideBounds\n  };\n  return self;\n}\nfunction SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap) {\n  var measureSize = axis.measureSize,\n    startEdge = axis.startEdge,\n    endEdge = axis.endEdge;\n  var withEdgeGap = slideRects[0] && readEdgeGap;\n  var startGap = measureStartGap();\n  var endGap = measureEndGap();\n  var slideSizes = slideRects.map(measureSize);\n  var slideSizesWithGaps = measureWithGaps();\n  function measureStartGap() {\n    if (!withEdgeGap) return 0;\n    var slideRect = slideRects[0];\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge]);\n  }\n  function measureEndGap() {\n    if (!withEdgeGap) return 0;\n    var style = window.getComputedStyle(arrayLast(slides));\n    return parseFloat(style.getPropertyValue(\"margin-\".concat(endEdge)));\n  }\n  function measureWithGaps() {\n    return slideRects.map(function (rect, index, rects) {\n      var isFirst = !index;\n      var isLast = index === arrayLastIndex(rects);\n      if (isFirst) return slideSizes[index] + startGap;\n      if (isLast) return slideSizes[index] + endGap;\n      return rects[index + 1][startEdge] - rect[startEdge];\n    }).map(mathAbs);\n  }\n  var self = {\n    slideSizes: slideSizes,\n    slideSizesWithGaps: slideSizesWithGaps\n  };\n  return self;\n}\nfunction SlidesToScroll(viewSize, slideSizesWithGaps, slidesToScroll) {\n  var groupByNumber = isNumber(slidesToScroll);\n  function byNumber(array, groupSize) {\n    return arrayKeys(array).filter(function (i) {\n      return i % groupSize === 0;\n    }).map(function (i) {\n      return array.slice(i, i + groupSize);\n    });\n  }\n  function bySize(array) {\n    return arrayKeys(array).reduce(function (groupSizes, i) {\n      var chunk = slideSizesWithGaps.slice(arrayLast(groupSizes), i + 1);\n      var chunkSize = chunk.reduce(function (a, s) {\n        return a + s;\n      }, 0);\n      return !i || chunkSize > viewSize ? groupSizes.concat(i) : groupSizes;\n    }, []).map(function (start, i, groupSizes) {\n      return array.slice(start, groupSizes[i + 1]);\n    });\n  }\n  function groupSlides(array) {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array);\n  }\n  var self = {\n    groupSlides: groupSlides\n  };\n  return self;\n}\nfunction Engine(root, container, slides, options, eventHandler) {\n  // Options\n  var align = options.align,\n    scrollAxis = options.axis,\n    contentDirection = options.direction,\n    startIndex = options.startIndex,\n    inViewThreshold = options.inViewThreshold,\n    loop = options.loop,\n    speed = options.speed,\n    dragFree = options.dragFree,\n    groupSlides = options.slidesToScroll,\n    skipSnaps = options.skipSnaps,\n    containScroll = options.containScroll;\n  // Measurements\n  var containerRect = container.getBoundingClientRect();\n  var slideRects = slides.map(function (slide) {\n    return slide.getBoundingClientRect();\n  });\n  var direction = Direction(contentDirection);\n  var axis = Axis(scrollAxis, contentDirection);\n  var viewSize = axis.measureSize(containerRect);\n  var percentOfView = PercentOfView(viewSize);\n  var alignment = Alignment(align, viewSize);\n  var containSnaps = !loop && containScroll !== '';\n  var readEdgeGap = loop || containScroll !== '';\n  var _a = SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap),\n    slideSizes = _a.slideSizes,\n    slideSizesWithGaps = _a.slideSizesWithGaps;\n  var slidesToScroll = SlidesToScroll(viewSize, slideSizesWithGaps, groupSlides);\n  var _b = ScrollSnaps(axis, alignment, containerRect, slideRects, slideSizesWithGaps, slidesToScroll, containSnaps),\n    snaps = _b.snaps,\n    snapsAligned = _b.snapsAligned;\n  var contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps);\n  var snapsContained = ScrollContain(viewSize, contentSize, snapsAligned, containScroll).snapsContained;\n  var scrollSnaps = containSnaps ? snapsContained : snapsAligned;\n  var limit = ScrollLimit(contentSize, scrollSnaps, loop).limit;\n  // Indexes\n  var index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop);\n  var indexPrevious = index.clone();\n  var slideIndexes = arrayKeys(slides);\n  // Draw\n  var update = function () {\n    if (!loop) engine.scrollBounds.constrain(engine.dragHandler.pointerDown());\n    engine.scrollBody.seek(target).update();\n    var settled = engine.scrollBody.settle(target);\n    if (settled && !engine.dragHandler.pointerDown()) {\n      engine.animation.stop();\n      eventHandler.emit('settle');\n    }\n    if (!settled) {\n      eventHandler.emit('scroll');\n    }\n    if (loop) {\n      engine.scrollLooper.loop(engine.scrollBody.direction());\n      engine.slideLooper.loop();\n    }\n    engine.translate.to(location);\n    engine.animation.proceed();\n  };\n  // Shared\n  var animation = Animation(update);\n  var startLocation = scrollSnaps[index.get()];\n  var location = Vector1D(startLocation);\n  var target = Vector1D(startLocation);\n  var scrollBody = ScrollBody(location, speed, 1);\n  var scrollTarget = ScrollTarget(loop, scrollSnaps, contentSize, limit, target);\n  var scrollTo = ScrollTo(animation, index, indexPrevious, scrollTarget, target, eventHandler);\n  var slidesInView = SlidesInView(viewSize, contentSize, slideSizes, snaps, limit, loop, inViewThreshold);\n  // DragHandler\n  var dragHandler = DragHandler(axis, direction, root, target, DragTracker(axis), location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, loop, dragFree, skipSnaps);\n  // Engine\n  var engine = {\n    containerRect: containerRect,\n    slideRects: slideRects,\n    animation: animation,\n    axis: axis,\n    direction: direction,\n    dragHandler: dragHandler,\n    eventStore: EventStore(),\n    percentOfView: percentOfView,\n    index: index,\n    indexPrevious: indexPrevious,\n    limit: limit,\n    location: location,\n    options: options,\n    scrollBody: scrollBody,\n    scrollBounds: ScrollBounds(limit, location, target, scrollBody, percentOfView),\n    scrollLooper: ScrollLooper(contentSize, limit, location, [location, target]),\n    scrollProgress: ScrollProgress(limit),\n    scrollSnaps: scrollSnaps,\n    scrollTarget: scrollTarget,\n    scrollTo: scrollTo,\n    slideLooper: SlideLooper(axis, direction, viewSize, contentSize, slideSizesWithGaps, scrollSnaps, slidesInView, location, slides),\n    slidesToScroll: slidesToScroll,\n    slidesInView: slidesInView,\n    slideIndexes: slideIndexes,\n    target: target,\n    translate: Translate(axis, direction, container)\n  };\n  return engine;\n}\nfunction EventHandler() {\n  var listeners = {};\n  function getListeners(evt) {\n    return listeners[evt] || [];\n  }\n  function emit(evt) {\n    getListeners(evt).forEach(function (e) {\n      return e(evt);\n    });\n    return self;\n  }\n  function on(evt, cb) {\n    listeners[evt] = getListeners(evt).concat([cb]);\n    return self;\n  }\n  function off(evt, cb) {\n    listeners[evt] = getListeners(evt).filter(function (e) {\n      return e !== cb;\n    });\n    return self;\n  }\n  var self = {\n    emit: emit,\n    off: off,\n    on: on\n  };\n  return self;\n}\nvar defaultOptions = {\n  align: 'center',\n  axis: 'x',\n  container: null,\n  slides: null,\n  containScroll: '',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  breakpoints: {},\n  dragFree: false,\n  draggable: true,\n  inViewThreshold: 0,\n  loop: false,\n  skipSnaps: false,\n  speed: 10,\n  startIndex: 0,\n  active: true\n};\nfunction OptionsHandler() {\n  function merge(optionsA, optionsB) {\n    return objectsMergeDeep(optionsA, optionsB || {});\n  }\n  function areEqual(optionsA, optionsB) {\n    var breakpointsA = JSON.stringify(objectKeys(optionsA.breakpoints || {}));\n    var breakpointsB = JSON.stringify(objectKeys(optionsB.breakpoints || {}));\n    if (breakpointsA !== breakpointsB) return false;\n    return objectsAreEqual(optionsA, optionsB);\n  }\n  function atMedia(options) {\n    var optionsAtMedia = options.breakpoints || {};\n    var matchedMediaOptions = objectKeys(optionsAtMedia).filter(function (media) {\n      return window.matchMedia(media).matches;\n    }).map(function (media) {\n      return optionsAtMedia[media];\n    }).reduce(function (a, mediaOption) {\n      return merge(a, mediaOption);\n    }, {});\n    return merge(options, matchedMediaOptions);\n  }\n  var self = {\n    merge: merge,\n    areEqual: areEqual,\n    atMedia: atMedia\n  };\n  return self;\n}\nfunction PluginsHandler() {\n  var _a = OptionsHandler(),\n    atMedia = _a.atMedia,\n    areEqual = _a.areEqual;\n  var activePlugins = [];\n  var pluginsChanged = [];\n  function haveChanged() {\n    return pluginsChanged.some(function (hasChanged) {\n      return hasChanged();\n    });\n  }\n  function hasChanged(plugin) {\n    var options = atMedia(plugin.options);\n    return function () {\n      return !areEqual(options, atMedia(plugin.options));\n    };\n  }\n  function init(plugins, embla) {\n    pluginsChanged = plugins.map(hasChanged);\n    activePlugins = plugins.filter(function (plugin) {\n      return atMedia(plugin.options).active;\n    });\n    activePlugins.forEach(function (plugin) {\n      return plugin.init(embla);\n    });\n    return plugins.reduce(function (map, plugin) {\n      var _a;\n      return Object.assign(map, (_a = {}, _a[plugin.name] = plugin, _a));\n    }, {});\n  }\n  function destroy() {\n    activePlugins = activePlugins.filter(function (plugin) {\n      return plugin.destroy();\n    });\n  }\n  var self = {\n    init: init,\n    destroy: destroy,\n    haveChanged: haveChanged\n  };\n  return self;\n}\nfunction EmblaCarousel(root, userOptions, userPlugins) {\n  var resizeHandlers = EventStore();\n  var optionsHandler = OptionsHandler();\n  var pluginsHandler = PluginsHandler();\n  var eventHandler = EventHandler();\n  var on = eventHandler.on,\n    off = eventHandler.off;\n  var reInit = reActivate;\n  var destroyed = false;\n  var engine;\n  var optionsBase = optionsHandler.merge(defaultOptions, EmblaCarousel.globalOptions);\n  var options = optionsHandler.merge(optionsBase);\n  var pluginList = [];\n  var pluginApis;\n  var rootSize = 0;\n  var container;\n  var slides;\n  function storeElements() {\n    var userContainer = options.container,\n      userSlides = options.slides;\n    var customContainer = isString(userContainer) ? root.querySelector(userContainer) : userContainer;\n    container = customContainer || root.children[0];\n    var customSlides = isString(userSlides) ? container.querySelectorAll(userSlides) : userSlides;\n    slides = [].slice.call(customSlides || container.children);\n  }\n  function activate(withOptions, withPlugins) {\n    if (destroyed) return;\n    optionsBase = optionsHandler.merge(optionsBase, withOptions);\n    options = optionsHandler.atMedia(optionsBase);\n    storeElements();\n    engine = Engine(root, container, slides, options, eventHandler);\n    rootSize = engine.axis.measureSize(root.getBoundingClientRect());\n    if (!options.active) return deActivate();\n    engine.translate.to(engine.location);\n    pluginList = withPlugins || pluginList;\n    pluginApis = pluginsHandler.init(pluginList, self);\n    if (options.loop) {\n      if (!engine.slideLooper.canLoop()) {\n        deActivate();\n        activate({\n          loop: false\n        }, withPlugins);\n        optionsBase = optionsHandler.merge(optionsBase, {\n          loop: true\n        });\n        return;\n      }\n      engine.slideLooper.loop();\n    }\n    if (options.draggable && container.offsetParent && slides.length) {\n      engine.dragHandler.addActivationEvents();\n    }\n  }\n  function reActivate(withOptions, withPlugins) {\n    var startIndex = selectedScrollSnap();\n    deActivate();\n    activate(optionsHandler.merge({\n      startIndex: startIndex\n    }, withOptions), withPlugins);\n    eventHandler.emit('reInit');\n  }\n  function deActivate() {\n    engine.dragHandler.removeAllEvents();\n    engine.animation.stop();\n    engine.eventStore.removeAll();\n    engine.translate.clear();\n    engine.slideLooper.clear();\n    pluginsHandler.destroy();\n  }\n  function destroy() {\n    if (destroyed) return;\n    destroyed = true;\n    resizeHandlers.removeAll();\n    deActivate();\n    eventHandler.emit('destroy');\n  }\n  function resize() {\n    var newOptions = optionsHandler.atMedia(optionsBase);\n    var optionsChanged = !optionsHandler.areEqual(newOptions, options);\n    var newRootSize = engine.axis.measureSize(root.getBoundingClientRect());\n    var rootSizeChanged = rootSize !== newRootSize;\n    var pluginsChanged = pluginsHandler.haveChanged();\n    if (rootSizeChanged || optionsChanged || pluginsChanged) reActivate();\n    eventHandler.emit('resize');\n  }\n  function slidesInView(target) {\n    var location = engine[target ? 'target' : 'location'].get();\n    var type = options.loop ? 'removeOffset' : 'constrain';\n    return engine.slidesInView.check(engine.limit[type](location));\n  }\n  function slidesNotInView(target) {\n    var inView = slidesInView(target);\n    return engine.slideIndexes.filter(function (index) {\n      return inView.indexOf(index) === -1;\n    });\n  }\n  function scrollTo(index, jump, direction) {\n    if (!options.active || destroyed) return;\n    engine.scrollBody.useBaseMass().useSpeed(jump ? 100 : options.speed);\n    engine.scrollTo.index(index, direction || 0);\n  }\n  function scrollNext(jump) {\n    var next = engine.index.clone().add(1);\n    scrollTo(next.get(), jump === true, -1);\n  }\n  function scrollPrev(jump) {\n    var prev = engine.index.clone().add(-1);\n    scrollTo(prev.get(), jump === true, 1);\n  }\n  function canScrollNext() {\n    var next = engine.index.clone().add(1);\n    return next.get() !== selectedScrollSnap();\n  }\n  function canScrollPrev() {\n    var prev = engine.index.clone().add(-1);\n    return prev.get() !== selectedScrollSnap();\n  }\n  function scrollSnapList() {\n    return engine.scrollSnaps.map(engine.scrollProgress.get);\n  }\n  function scrollProgress() {\n    return engine.scrollProgress.get(engine.location.get());\n  }\n  function selectedScrollSnap() {\n    return engine.index.get();\n  }\n  function previousScrollSnap() {\n    return engine.indexPrevious.get();\n  }\n  function clickAllowed() {\n    return engine.dragHandler.clickAllowed();\n  }\n  function plugins() {\n    return pluginApis;\n  }\n  function internalEngine() {\n    return engine;\n  }\n  function rootNode() {\n    return root;\n  }\n  function containerNode() {\n    return container;\n  }\n  function slideNodes() {\n    return slides;\n  }\n  var self = {\n    canScrollNext: canScrollNext,\n    canScrollPrev: canScrollPrev,\n    clickAllowed: clickAllowed,\n    containerNode: containerNode,\n    internalEngine: internalEngine,\n    destroy: destroy,\n    off: off,\n    on: on,\n    plugins: plugins,\n    previousScrollSnap: previousScrollSnap,\n    reInit: reInit,\n    rootNode: rootNode,\n    scrollNext: scrollNext,\n    scrollPrev: scrollPrev,\n    scrollProgress: scrollProgress,\n    scrollSnapList: scrollSnapList,\n    scrollTo: scrollTo,\n    selectedScrollSnap: selectedScrollSnap,\n    slideNodes: slideNodes,\n    slidesInView: slidesInView,\n    slidesNotInView: slidesNotInView\n  };\n  activate(userOptions, userPlugins);\n  resizeHandlers.add(window, 'resize', resize);\n  setTimeout(function () {\n    return eventHandler.emit('init');\n  }, 0);\n  return self;\n}\nEmblaCarousel.globalOptions = undefined;\nEmblaCarousel.optionsHandler = OptionsHandler;\nexport { EmblaCarousel as default };","map":{"version":3,"names":["map","value","iStart","iStop","oStart","oStop","isNumber","subject","isString","isObject","Object","prototype","toString","call","isArray","Array","isRecord","mathAbs","n","Math","abs","mathSign","deltaAbs","valueB","valueA","factorAbs","diff","roundToDecimals","decimalPoints","pow","round","arrayKeys","array","objectKeys","Number","arrayLast","arrayLastIndex","max","length","object","keys","objectsMergeDeep","objectA","objectB","reduce","mergedObjects","currentObject","forEach","key","areObjects","objectsAreEqual","objectAKeys","objectBKeys","every","concat","Alignment","align","viewSize","predefined","start","center","end","percent","measure","self","Animation","callback","animationFrame","ifAnimating","active","cb","window","requestAnimationFrame","stop","cancelAnimationFrame","proceed","Axis","axis","direction","scroll","cross","startEdge","getStartEdge","endEdge","getEndEdge","measureSize","rect","width","height","Limit","min","reachedMin","reachedMax","reachedAny","constrain","removeOffset","ceil","Counter","loop","_a","loopEnd","counter","withinLimit","get","set","add","clone","Direction","sign","apply","EventStore","listeners","node","type","handler","options","passive","addEventListener","push","removeEventListener","removeAll","filter","remove","Vector1D","vector","readNumber","subtract","multiply","divide","normalize","DragHandler","rootNode","target","dragTracker","location","animation","scrollTo","scrollBody","scrollTarget","index","eventHandler","percentOfView","dragFree","skipSnaps","crossAxis","focusNodes","nonPassiveEvent","dragStartPoint","activationEvents","interactionEvents","dragThreshold","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","baseMass","startScroll","startCross","pointerIsDown","preventScroll","preventClick","isMouse","addActivationEvents","evt","preventDefault","undefined","down","up","click","addInteractionEvents","document","move","removeAllEvents","isFocusNode","name","nodeName","indexOf","forceBoost","boost","allowedForce","force","targetChanged","next","isEdge","baseForce","byDistance","distance","byIndex","isTouchEvent","button","isMoving","clearPreventClick","pointerDown","useBaseMass","useSpeed","readPoint","emit","cancelable","lastScroll","lastCross","diffScroll","diffCross","pointerMove","currentLocation","rawForce","pointerUp","forceFactor","isVigorous","isBelowThreshold","speed","mass","useMass","stopPropagation","clickAllowed","DragTracker","logInterval","startEvent","lastEvent","TouchEvent","readTime","timeStamp","evtAxis","property","coord","touches","expired","diffDrag","diffTime","isFlick","PercentOfView","ScrollBody","roundToTwoDecimals","velocity","acceleration","attraction","attractionDirection","update","applyForce","seek","magnitude","settle","hasSettled","useBaseSpeed","ScrollBounds","limit","pullBackThreshold","edgeOffsetTolerance","maxFriction","disabled","shouldConstrain","edge","diffToEdge","diffToTarget","friction","toggleActive","ScrollContain","contentSize","snapsAligned","containScroll","scrollBounds","snapsBounded","snapsContained","measureContained","findDuplicates","startSnap","endSnap","lastIndexOf","slice","ScrollLimit","scrollSnaps","measureLimit","ScrollLooper","vectors","jointSafety","shouldLoop","loopDistance","v","ScrollProgress","scrollLength","ScrollSnaps","alignment","containerRect","slideRects","slideSizesWithGaps","slidesToScroll","groupSlides","alignments","measureSizes","snaps","measureUnaligned","measureAligned","rects","snap","containedStartSnap","containedEndSnap","g","groupedSnaps","isFirst","isLast","ScrollTarget","targetVector","minDistance","distances","sort","a","b","findTargetSnap","ascDiffsToSnaps","scrollSnap","diffToSnap","shortcut","i","d1","d2","targets","matchingTargets","t","targetSnapDistance","reachedBound","snapDistance","ScrollTo","indexCurrent","indexPrevious","distanceDiff","indexDiff","targetIndex","Translate","container","translate","x","y","containerStyle","style","to","transform","clear","getAttribute","removeAttribute","SlideLooper","slidesInView","slides","ascItems","descItems","reverse","loopPoints","startPoints","endPoints","removeSlideSizes","indexes","from","slidesInGap","gap","remainingGap","findLoopPoints","isStartEdge","offset","slideBounds","findSlideBounds","initial","altered","bounds","point","shift","canLoop","otherIndexes","loopPoint","SlidesInView","slideSizes","inViewThreshold","roundingSafety","cachedOffsets","cachedBounds","findSlideThresholds","threshold","slideThreshold","slideSize","thresholdLimit","offsets","slideOffsets","slideThresholds","list","check","limitedLocation","slideBound","inList","inView","SlideSizes","readEdgeGap","withEdgeGap","startGap","measureStartGap","endGap","measureEndGap","measureWithGaps","slideRect","getComputedStyle","parseFloat","getPropertyValue","SlidesToScroll","groupByNumber","byNumber","groupSize","bySize","groupSizes","chunk","chunkSize","s","Engine","root","scrollAxis","contentDirection","startIndex","getBoundingClientRect","slide","containSnaps","_b","slideIndexes","engine","dragHandler","settled","scrollLooper","slideLooper","startLocation","eventStore","scrollProgress","EventHandler","getListeners","e","on","off","defaultOptions","breakpoints","draggable","OptionsHandler","merge","optionsA","optionsB","areEqual","breakpointsA","JSON","stringify","breakpointsB","atMedia","optionsAtMedia","matchedMediaOptions","media","matchMedia","matches","mediaOption","PluginsHandler","activePlugins","pluginsChanged","haveChanged","some","hasChanged","plugin","init","plugins","embla","assign","destroy","EmblaCarousel","userOptions","userPlugins","resizeHandlers","optionsHandler","pluginsHandler","reInit","reActivate","destroyed","optionsBase","globalOptions","pluginList","pluginApis","rootSize","storeElements","userContainer","userSlides","customContainer","querySelector","children","customSlides","querySelectorAll","activate","withOptions","withPlugins","deActivate","offsetParent","selectedScrollSnap","resize","newOptions","optionsChanged","newRootSize","rootSizeChanged","slidesNotInView","jump","scrollNext","scrollPrev","prev","canScrollNext","canScrollPrev","scrollSnapList","previousScrollSnap","internalEngine","containerNode","slideNodes","setTimeout"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/utils.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/Alignment.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/Animation.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/Axis.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/Limit.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/Counter.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/Direction.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/EventStore.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/Vector1d.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/DragHandler.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/DragTracker.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/PercentOfView.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/ScrollBody.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/ScrollBounds.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/ScrollContain.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/ScrollLimit.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/ScrollLooper.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/ScrollProgress.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/ScrollSnaps.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/ScrollTarget.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/ScrollTo.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/Translate.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/SlideLooper.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/SlidesInView.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/SlideSizes.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/SlidesToScroll.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/Engine.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/EventHandler.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/Options.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/OptionsHandler.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/PluginsHandler.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel/src/components/index.ts"],"sourcesContent":["export function map(\n  value: number,\n  iStart: number,\n  iStop: number,\n  oStart: number,\n  oStop: number,\n): number {\n  return oStart + (oStop - oStart) * ((value - iStart) / (iStop - iStart))\n}\n\nexport function isNumber(subject: unknown): subject is number {\n  return typeof subject === 'number'\n}\n\nexport function isString(subject: unknown): subject is string {\n  return typeof subject === 'string'\n}\n\nexport function isObject(subject: unknown): subject is Record<string, unknown> {\n  return Object.prototype.toString.call(subject) === '[object Object]'\n}\n\nexport function isArray(subject: unknown): subject is Record<number, unknown> {\n  return Array.isArray(subject)\n}\n\nexport function isRecord(\n  subject: unknown,\n): subject is Record<string | number, unknown> {\n  return isObject(subject) || isArray(subject)\n}\n\nexport function mathAbs(n: number): number {\n  return Math.abs(n)\n}\n\nexport function mathSign(n: number): number {\n  return !n ? 0 : n / mathAbs(n)\n}\n\nexport function deltaAbs(valueB: number, valueA: number): number {\n  return mathAbs(valueB - valueA)\n}\n\nexport function factorAbs(valueB: number, valueA: number): number {\n  if (valueB === 0 || valueA === 0) return 0\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA))\n  return mathAbs(diff / valueB)\n}\n\nexport function roundToDecimals(decimalPoints: number): (n: number) => number {\n  const pow = Math.pow(10, decimalPoints)\n  return (n: number): number => Math.round(n * pow) / pow\n}\n\nexport function arrayKeys<Type>(array: Type[]): number[] {\n  return objectKeys(array).map(Number)\n}\n\nexport function arrayLast<Type>(array: Type[]): Type {\n  return array[arrayLastIndex(array)]\n}\n\nexport function arrayLastIndex<Type>(array: Type[]): number {\n  return Math.max(0, array.length - 1)\n}\n\nexport function objectKeys<Type extends object>(object: Type): string[] {\n  return Object.keys(object)\n}\n\nexport function objectsMergeDeep(\n  objectA: Record<string, unknown>,\n  objectB: Record<string, unknown>,\n): Record<string, unknown> {\n  return [objectA, objectB].reduce((mergedObjects, currentObject) => {\n    objectKeys(currentObject).forEach((key) => {\n      const valueA = mergedObjects[key]\n      const valueB = currentObject[key]\n      const areObjects = isObject(valueA) && isObject(valueB)\n\n      mergedObjects[key] = areObjects\n        ? objectsMergeDeep(valueA, valueB)\n        : valueB\n    })\n    return mergedObjects\n  }, {})\n}\n\nexport function objectsAreEqual(\n  objectA: Record<string, unknown>,\n  objectB: Record<string, unknown>,\n): boolean {\n  const objectAKeys = objectKeys(objectA)\n  const objectBKeys = objectKeys(objectB)\n\n  if (objectAKeys.length !== objectBKeys.length) return false\n\n  return objectAKeys.every((key) => {\n    const valueA = objectA[key]\n    const valueB = objectB[key]\n    if (typeof valueA === 'function') return `${valueA}` === `${valueB}`\n    if (!isRecord(valueA) || !isRecord(valueB)) return valueA === valueB\n    return objectsAreEqual(valueA, valueB)\n  })\n}\n","import { isNumber } from './utils'\n\nexport type AlignmentOptionType = 'start' | 'center' | 'end' | number\n\nexport type AlignmentType = {\n  measure: (n: number) => number\n}\n\nexport function Alignment(\n  align: AlignmentOptionType,\n  viewSize: number,\n): AlignmentType {\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function percent(): number {\n    return viewSize * Number(align)\n  }\n\n  function measure(n: number): number {\n    if (isNumber(align)) return percent()\n    return predefined[align](n)\n  }\n\n  const self: AlignmentType = {\n    measure,\n  }\n  return self\n}\n","type CallbackType = () => void\n\nexport type AnimationType = {\n  start: () => void\n  stop: () => void\n  proceed: () => void\n}\n\nexport function Animation(callback: FrameRequestCallback): AnimationType {\n  let animationFrame = 0\n\n  function ifAnimating(active: boolean, cb: CallbackType): CallbackType {\n    return (): void => {\n      if (active === !!animationFrame) cb()\n    }\n  }\n\n  function start(): void {\n    animationFrame = window.requestAnimationFrame(callback)\n  }\n\n  function stop(): void {\n    window.cancelAnimationFrame(animationFrame)\n    animationFrame = 0\n  }\n\n  const self: AnimationType = {\n    proceed: ifAnimating(true, start),\n    start: ifAnimating(false, start),\n    stop: ifAnimating(true, stop),\n  }\n  return self\n}\n","import { DirectionOptionType } from './Direction'\n\nexport type AxisOptionType = 'x' | 'y'\ntype AxisEdgeType = 'top' | 'right' | 'bottom' | 'left'\n\nexport type AxisType = {\n  scroll: AxisOptionType\n  cross: AxisOptionType\n  startEdge: AxisEdgeType\n  endEdge: AxisEdgeType\n  measureSize: (rect: DOMRect) => number\n}\n\nexport function Axis(\n  axis: AxisOptionType,\n  direction: DirectionOptionType,\n): AxisType {\n  const scroll = axis === 'y' ? 'y' : 'x'\n  const cross = axis === 'y' ? 'x' : 'y'\n  const startEdge = getStartEdge()\n  const endEdge = getEndEdge()\n\n  function measureSize(rect: DOMRect): number {\n    const { width, height } = rect\n    return scroll === 'x' ? width : height\n  }\n\n  function getStartEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'top'\n    return direction === 'rtl' ? 'right' : 'left'\n  }\n\n  function getEndEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'bottom'\n    return direction === 'rtl' ? 'left' : 'right'\n  }\n\n  const self: AxisType = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize,\n  }\n  return self\n}\n","import { mathAbs } from './utils'\n\nexport type LimitType = {\n  min: number\n  max: number\n  length: number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(min: number, max: number): LimitType {\n  const length = mathAbs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  function removeOffset(n: number): number {\n    if (!length) return n\n    return n - length * Math.ceil((n - max) / length)\n  }\n\n  const self: LimitType = {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset,\n  }\n  return self\n}\n","import { Limit } from './Limit'\nimport { mathAbs } from './utils'\n\nexport type CounterType = {\n  get: () => number\n  set: (n: number) => CounterType\n  add: (n: number) => CounterType\n  clone: () => CounterType\n  min: number\n  max: number\n}\n\nexport function Counter(\n  max: number,\n  start: number,\n  loop: boolean,\n): CounterType {\n  const { min, constrain } = Limit(0, max)\n  const loopEnd = max + 1\n  let counter = withinLimit(start)\n\n  function withinLimit(n: number): number {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd)\n  }\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): CounterType {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): CounterType {\n    return set(get() + n)\n  }\n\n  function clone(): CounterType {\n    return Counter(max, get(), loop)\n  }\n\n  const self: CounterType = {\n    add,\n    clone,\n    get,\n    set,\n    min,\n    max,\n  }\n  return self\n}\n","export type DirectionOptionType = 'ltr' | 'rtl'\n\nexport type DirectionType = {\n  apply: (n: number) => number\n}\n\nexport function Direction(direction: DirectionOptionType): DirectionType {\n  const sign = direction === 'rtl' ? -1 : 1\n\n  function apply(n: number): number {\n    return n * sign\n  }\n\n  const self: DirectionType = {\n    apply,\n  }\n  return self\n}\n","type EventNameType = keyof DocumentEventMap | keyof WindowEventMap\ntype EventHandlerType = (evt: any) => void\ntype EventOptionsType = boolean | AddEventListenerOptions | undefined\ntype EventRemoverType = () => void\n\nexport type EventStoreType = {\n  add: (\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options?: EventOptionsType,\n  ) => EventStoreType\n  removeAll: () => EventStoreType\n}\n\nexport function EventStore(): EventStoreType {\n  let listeners: EventRemoverType[] = []\n\n  function add(\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options: EventOptionsType = { passive: true },\n  ): EventStoreType {\n    node.addEventListener(type, handler, options)\n    listeners.push(() => node.removeEventListener(type, handler, options))\n    return self\n  }\n\n  function removeAll(): EventStoreType {\n    listeners = listeners.filter((remove) => remove())\n    return self\n  }\n\n  const self: EventStoreType = {\n    add,\n    removeAll,\n  }\n  return self\n}\n","import { isNumber } from './utils'\n\nexport type Vector1DType = {\n  get: () => number\n  set: (v: Vector1DType | number) => Vector1DType\n  add: (v: Vector1DType | number) => Vector1DType\n  subtract: (v: Vector1DType | number) => Vector1DType\n  multiply: (n: number) => Vector1DType\n  divide: (n: number) => Vector1DType\n  normalize: () => Vector1DType\n}\n\nexport function Vector1D(value: number): Vector1DType {\n  let vector = value\n\n  function get(): number {\n    return vector\n  }\n\n  function set(n: Vector1DType | number): Vector1DType {\n    vector = readNumber(n)\n    return self\n  }\n\n  function add(n: Vector1DType | number): Vector1DType {\n    vector += readNumber(n)\n    return self\n  }\n\n  function subtract(n: Vector1DType | number): Vector1DType {\n    vector -= readNumber(n)\n    return self\n  }\n\n  function multiply(n: number): Vector1DType {\n    vector *= n\n    return self\n  }\n\n  function divide(n: number): Vector1DType {\n    vector /= n\n    return self\n  }\n\n  function normalize(): Vector1DType {\n    if (vector !== 0) divide(vector)\n    return self\n  }\n\n  function readNumber(n: Vector1DType | number): number {\n    return isNumber(n) ? n : n.get()\n  }\n\n  const self: Vector1DType = {\n    add,\n    divide,\n    get,\n    multiply,\n    normalize,\n    set,\n    subtract,\n  }\n  return self\n}\n","import { AnimationType } from './Animation'\nimport { CounterType } from './Counter'\nimport { DirectionType } from './Direction'\nimport { DragTrackerType, PointerEventType } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { AxisType } from './Axis'\nimport { EventStore } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType } from './ScrollTarget'\nimport { ScrollToType } from './ScrollTo'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { deltaAbs, factorAbs, mathAbs, mathSign } from './utils'\nimport { PercentOfViewType } from './PercentOfView'\n\nexport type DragHandlerType = {\n  addActivationEvents: () => void\n  clickAllowed: () => boolean\n  pointerDown: () => boolean\n  removeAllEvents: () => void\n}\n\nexport function DragHandler(\n  axis: AxisType,\n  direction: DirectionType,\n  rootNode: HTMLElement,\n  target: Vector1DType,\n  dragTracker: DragTrackerType,\n  location: Vector1DType,\n  animation: AnimationType,\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  index: CounterType,\n  eventHandler: EventHandlerType,\n  percentOfView: PercentOfViewType,\n  loop: boolean,\n  dragFree: boolean,\n  skipSnaps: boolean,\n): DragHandlerType {\n  const { cross: crossAxis } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const nonPassiveEvent = { passive: false }\n  const dragStartPoint = Vector1D(0)\n  const activationEvents = EventStore()\n  const interactionEvents = EventStore()\n  const dragThreshold = percentOfView.measure(20)\n  const snapForceBoost = { mouse: 300, touch: 400 }\n  const freeForceBoost = { mouse: 500, touch: 600 }\n  const baseSpeed = dragFree ? 5 : 16\n  const baseMass = 1\n\n  let startScroll = 0\n  let startCross = 0\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function addActivationEvents(): void {\n    const node = rootNode\n    activationEvents\n      .add(node, 'dragstart', (evt) => evt.preventDefault(), nonPassiveEvent)\n      .add(node, 'touchmove', () => undefined, nonPassiveEvent)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', down)\n      .add(node, 'mousedown', down)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click, true)\n  }\n\n  function addInteractionEvents(): void {\n    const node = isMouse ? document : rootNode\n    interactionEvents\n      .add(node, 'touchmove', move, nonPassiveEvent)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move, nonPassiveEvent)\n      .add(node, 'mouseup', up)\n  }\n\n  function removeAllEvents(): void {\n    activationEvents.removeAll()\n    interactionEvents.removeAll()\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const name = node.nodeName || ''\n    return focusNodes.indexOf(name) > -1\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function allowedForce(force: number, targetChanged: boolean): number {\n    const next = index.clone().add(mathSign(force) * -1)\n    const isEdge = next.get() === index.min || next.get() === index.max\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance\n\n    if (dragFree || mathAbs(force) < dragThreshold) return baseForce\n    if (!loop && isEdge) return baseForce * 0.4\n    if (skipSnaps && targetChanged) return baseForce * 0.5\n\n    return scrollTarget.byIndex(next.get(), 0).distance\n  }\n\n  function down(evt: PointerEventType): void {\n    isMouse = !dragTracker.isTouchEvent(evt)\n    if (isMouse && (evt as MouseEvent).button !== 0) return\n    if (isFocusNode(evt.target as Element)) return\n\n    const isMoving = deltaAbs(target.get(), location.get()) >= 2\n    const clearPreventClick = isMouse || !isMoving\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    dragStartPoint.set(target)\n    target.set(location)\n    scrollBody.useBaseMass().useSpeed(80)\n    addInteractionEvents()\n    startScroll = dragTracker.readPoint(evt)\n    startCross = dragTracker.readPoint(evt, crossAxis)\n    eventHandler.emit('pointerDown')\n\n    if (clearPreventClick) preventClick = false\n  }\n\n  function move(evt: PointerEventType): void {\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt)\n      const lastScroll = dragTracker.readPoint(evt)\n      const lastCross = dragTracker.readPoint(evt, crossAxis)\n      const diffScroll = deltaAbs(lastScroll, startScroll)\n      const diffCross = deltaAbs(lastCross, startCross)\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll && !preventClick) return up(evt)\n    }\n    const diff = dragTracker.pointerMove(evt)\n    if (!preventClick && diff) preventClick = true\n    animation.start()\n    target.add(direction.apply(diff))\n    evt.preventDefault()\n  }\n\n  function up(evt: PointerEventType): void {\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost()\n    const force = allowedForce(direction.apply(rawForce), targetChanged)\n    const forceFactor = factorAbs(rawForce, force)\n    const isMoving = deltaAbs(target.get(), dragStartPoint.get()) >= 0.5\n    const isVigorous = targetChanged && forceFactor > 0.75\n    const isBelowThreshold = mathAbs(rawForce) < dragThreshold\n    const speed = isVigorous ? 10 : baseSpeed\n    const mass = isVigorous ? baseMass + 2.5 * forceFactor : baseMass\n\n    if (isMoving && !isMouse) preventClick = true\n    preventScroll = false\n    pointerIsDown = false\n    interactionEvents.removeAll()\n    scrollBody.useSpeed(isBelowThreshold ? 9 : speed).useMass(mass)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    eventHandler.emit('pointerUp')\n  }\n\n  function click(evt: MouseEvent): void {\n    if (preventClick) {\n      evt.stopPropagation()\n      evt.preventDefault()\n    }\n  }\n\n  // DEPRECATED - Remove in v8 because handled automatically\n  function clickAllowed(): boolean {\n    return !preventClick\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandlerType = {\n    addActivationEvents,\n    clickAllowed,\n    pointerDown,\n    removeAllEvents,\n  }\n  return self\n}\n","import { AxisOptionType, AxisType } from './Axis'\nimport { mathAbs } from './utils'\n\ntype PointerCoordType = keyof Touch | keyof MouseEvent\nexport type PointerEventType = TouchEvent | MouseEvent\n\nexport type DragTrackerType = {\n  isTouchEvent: (evt: PointerEventType) => evt is TouchEvent\n  pointerDown: (evt: PointerEventType) => number\n  pointerMove: (evt: PointerEventType) => number\n  pointerUp: (evt: PointerEventType) => number\n  readPoint: (evt: PointerEventType, evtAxis?: AxisOptionType) => number\n}\n\nexport function DragTracker(axis: AxisType): DragTrackerType {\n  const logInterval = 170\n\n  let startEvent: PointerEventType\n  let lastEvent: PointerEventType\n\n  function isTouchEvent(evt: PointerEventType): evt is TouchEvent {\n    return typeof TouchEvent !== 'undefined' && evt instanceof TouchEvent\n  }\n\n  function readTime(evt: PointerEventType): number {\n    return evt.timeStamp\n  }\n\n  function readPoint(evt: PointerEventType, evtAxis?: AxisOptionType): number {\n    const property = evtAxis || axis.scroll\n    const coord: PointerCoordType = `client${property === 'x' ? 'X' : 'Y'}`\n    return (isTouchEvent(evt) ? evt.touches[0] : evt)[coord]\n  }\n\n  function pointerDown(evt: PointerEventType): number {\n    startEvent = evt\n    lastEvent = evt\n    return readPoint(evt)\n  }\n\n  function pointerMove(evt: PointerEventType): number {\n    const diff = readPoint(evt) - readPoint(lastEvent)\n    const expired = readTime(evt) - readTime(startEvent) > logInterval\n\n    lastEvent = evt\n    if (expired) startEvent = evt\n    return diff\n  }\n\n  function pointerUp(evt: PointerEventType): number {\n    if (!startEvent || !lastEvent) return 0\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent)\n    const diffTime = readTime(evt) - readTime(startEvent)\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval\n    const force = diffDrag / diffTime\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1\n\n    return isFlick ? force : 0\n  }\n\n  const self: DragTrackerType = {\n    isTouchEvent,\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint,\n  }\n  return self\n}\n","export type PercentOfViewType = {\n  measure: (n: number) => number\n}\n\nexport function PercentOfView(viewSize: number): PercentOfViewType {\n  function measure(n: number): number {\n    return viewSize * (n / 100)\n  }\n\n  const self: PercentOfViewType = {\n    measure,\n  }\n  return self\n}\n","import { map, roundToDecimals, mathSign } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type ScrollBodyType = {\n  direction: () => number\n  seek: (target: Vector1DType) => ScrollBodyType\n  settle: (target: Vector1DType) => boolean\n  update: () => void\n  useBaseMass: () => ScrollBodyType\n  useBaseSpeed: () => ScrollBodyType\n  useMass: (n: number) => ScrollBodyType\n  useSpeed: (n: number) => ScrollBodyType\n}\n\nexport function ScrollBody(\n  location: Vector1DType,\n  baseSpeed: number,\n  baseMass: number,\n): ScrollBodyType {\n  const roundToTwoDecimals = roundToDecimals(2)\n  const velocity = Vector1D(0)\n  const acceleration = Vector1D(0)\n  const attraction = Vector1D(0)\n\n  let attractionDirection = 0\n  let speed = baseSpeed\n  let mass = baseMass\n\n  function update(): void {\n    velocity.add(acceleration)\n    location.add(velocity)\n    acceleration.multiply(0)\n  }\n\n  function applyForce(force: Vector1DType): void {\n    force.divide(mass)\n    acceleration.add(force)\n  }\n\n  function seek(target: Vector1DType): ScrollBodyType {\n    attraction.set(target).subtract(location)\n    const magnitude = map(attraction.get(), 0, 100, 0, speed)\n    attractionDirection = mathSign(attraction.get())\n    attraction.normalize().multiply(magnitude).subtract(velocity)\n    applyForce(attraction)\n    return self\n  }\n\n  function settle(target: Vector1DType): boolean {\n    const diff = target.get() - location.get()\n    const hasSettled = !roundToTwoDecimals(diff)\n    if (hasSettled) location.set(target)\n    return hasSettled\n  }\n\n  function direction(): number {\n    return attractionDirection\n  }\n\n  function useBaseSpeed(): ScrollBodyType {\n    return useSpeed(baseSpeed)\n  }\n\n  function useBaseMass(): ScrollBodyType {\n    return useMass(baseMass)\n  }\n\n  function useSpeed(n: number): ScrollBodyType {\n    speed = n\n    return self\n  }\n\n  function useMass(n: number): ScrollBodyType {\n    mass = n\n    return self\n  }\n\n  const self: ScrollBodyType = {\n    direction,\n    seek,\n    settle,\n    update,\n    useBaseMass,\n    useBaseSpeed,\n    useMass,\n    useSpeed,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { ScrollBodyType } from './ScrollBody'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs } from './utils'\nimport { PercentOfViewType } from './PercentOfView'\n\nexport type ScrollBoundsType = {\n  constrain: (pointerDown: boolean) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(\n  limit: LimitType,\n  location: Vector1DType,\n  target: Vector1DType,\n  scrollBody: ScrollBodyType,\n  percentOfView: PercentOfViewType,\n): ScrollBoundsType {\n  const pullBackThreshold = percentOfView.measure(10)\n  const edgeOffsetTolerance = percentOfView.measure(50)\n  const maxFriction = 0.85\n  let disabled = false\n\n  function shouldConstrain(): boolean {\n    if (disabled) return false\n    if (!limit.reachedAny(target.get())) return false\n    if (!limit.reachedAny(location.get())) return false\n    return true\n  }\n\n  function constrain(pointerDown: boolean): void {\n    if (!shouldConstrain()) return\n    const edge = limit.reachedMin(location.get()) ? 'min' : 'max'\n    const diffToEdge = mathAbs(limit[edge] - location.get())\n    const diffToTarget = target.get() - location.get()\n    const friction = Math.min(diffToEdge / edgeOffsetTolerance, maxFriction)\n\n    target.subtract(diffToTarget * friction)\n\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()))\n      scrollBody.useSpeed(10).useMass(3)\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBoundsType = {\n    constrain,\n    toggleActive,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollContainOptionType = '' | 'trimSnaps' | 'keepSnaps'\n\nexport type ScrollContainType = {\n  snapsContained: number[]\n}\n\nexport function ScrollContain(\n  viewSize: number,\n  contentSize: number,\n  snapsAligned: number[],\n  containScroll: ScrollContainOptionType,\n): ScrollContainType {\n  const scrollBounds = Limit(-contentSize + viewSize, snapsAligned[0])\n  const snapsBounded = snapsAligned.map(scrollBounds.constrain)\n  const snapsContained = measureContained()\n\n  function findDuplicates(): LimitType {\n    const startSnap = snapsBounded[0]\n    const endSnap = arrayLast(snapsBounded)\n    const min = snapsBounded.lastIndexOf(startSnap)\n    const max = snapsBounded.indexOf(endSnap) + 1\n    return Limit(min, max)\n  }\n\n  function measureContained(): number[] {\n    if (contentSize <= viewSize) return [scrollBounds.max]\n    if (containScroll === 'keepSnaps') return snapsBounded\n    const { min, max } = findDuplicates()\n    return snapsBounded.slice(min, max)\n  }\n\n  const self: ScrollContainType = {\n    snapsContained,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollLimitType = {\n  limit: LimitType\n}\n\nexport function ScrollLimit(\n  contentSize: number,\n  scrollSnaps: number[],\n  loop: boolean,\n): ScrollLimitType {\n  const limit = measureLimit()\n\n  function measureLimit(): LimitType {\n    const startSnap = scrollSnaps[0]\n    const endSnap = arrayLast(scrollSnaps)\n    const min = loop ? startSnap - contentSize : endSnap\n    const max = startSnap\n    return Limit(min, max)\n  }\n\n  const self: ScrollLimitType = {\n    limit,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollLooperType = {\n  loop: (direction: number) => void\n}\n\nexport function ScrollLooper(\n  contentSize: number,\n  limit: LimitType,\n  location: Vector1DType,\n  vectors: Vector1DType[],\n): ScrollLooperType {\n  const jointSafety = 0.1\n  const min = limit.min + jointSafety\n  const max = limit.max + jointSafety\n  const { reachedMin, reachedMax } = Limit(min, max)\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(location.get())\n    if (direction === -1) return reachedMin(location.get())\n    return false\n  }\n\n  function loop(direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach((v) => v.add(loopDistance))\n  }\n\n  const self: ScrollLooperType = {\n    loop,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\n\nexport type ScrollProgressType = {\n  get: (n: number) => number\n}\n\nexport function ScrollProgress(limit: LimitType): ScrollProgressType {\n  const { max, length: scrollLength } = limit\n\n  function get(n: number): number {\n    const currentLocation = n - max\n    return currentLocation / -scrollLength\n  }\n\n  const self: ScrollProgressType = {\n    get,\n  }\n  return self\n}\n","import { AlignmentType } from './Alignment'\nimport { AxisType } from './Axis'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport { arrayLast, arrayLastIndex, mathAbs } from './utils'\n\nexport type ScrollSnapsType = {\n  snaps: number[]\n  snapsAligned: number[]\n}\n\nexport function ScrollSnaps(\n  axis: AxisType,\n  alignment: AlignmentType,\n  containerRect: DOMRect,\n  slideRects: DOMRect[],\n  slideSizesWithGaps: number[],\n  slidesToScroll: SlidesToScrollType,\n  containScroll: boolean,\n): ScrollSnapsType {\n  const { startEdge, endEdge } = axis\n  const { groupSlides } = slidesToScroll\n  const alignments = measureSizes().map(alignment.measure)\n  const snaps = measureUnaligned()\n  const snapsAligned = measureAligned()\n\n  function measureSizes(): number[] {\n    return groupSlides(slideRects)\n      .map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge])\n      .map(mathAbs)\n  }\n\n  function measureUnaligned(): number[] {\n    return slideRects\n      .map((rect) => containerRect[startEdge] - rect[startEdge])\n      .map((snap) => -mathAbs(snap))\n  }\n\n  function measureAligned(): number[] {\n    const containedStartSnap = 0\n    const containedEndSnap = arrayLast(snaps) - arrayLast(slideSizesWithGaps)\n\n    return groupSlides(snaps)\n      .map((g) => g[0])\n      .map((snap, index, groupedSnaps) => {\n        const isFirst = !index\n        const isLast = index === arrayLastIndex(groupedSnaps)\n        if (containScroll && isFirst) return containedStartSnap\n        if (containScroll && isLast) return containedEndSnap\n        return snap + alignments[index]\n      })\n  }\n\n  const self: ScrollSnapsType = {\n    snaps,\n    snapsAligned,\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs, mathSign } from './utils'\n\nexport type TargetType = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTargetType = {\n  byIndex: (target: number, direction: number) => TargetType\n  byDistance: (force: number, snap: boolean) => TargetType\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(\n  loop: boolean,\n  scrollSnaps: number[],\n  contentSize: number,\n  limit: LimitType,\n  targetVector: Vector1DType,\n): ScrollTargetType {\n  const { reachedAny, removeOffset, constrain } = limit\n\n  function minDistance(distances: number[]): number {\n    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0]\n  }\n\n  function findTargetSnap(target: number): TargetType {\n    const distance = loop ? removeOffset(target) : constrain(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map((scrollSnap) => scrollSnap - distance)\n      .map((diffToSnap) => shortcut(diffToSnap, 0))\n      .map((diff, i) => ({ diff, index: i }))\n      .sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const targets = [target, target + contentSize, target - contentSize]\n\n    if (!loop) return targets[0]\n    if (!direction) return minDistance(targets)\n\n    const matchingTargets = targets.filter((t) => mathSign(t) === direction)\n    return minDistance(matchingTargets)\n  }\n\n  function byIndex(index: number, direction: number): TargetType {\n    const diffToSnap = scrollSnaps[index] - targetVector.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): TargetType {\n    const target = targetVector.get() + distance\n    const { index, distance: targetSnapDistance } = findTargetSnap(target)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTargetType = {\n    byDistance,\n    byIndex,\n    shortcut,\n  }\n  return self\n}\n","import { AnimationType } from './Animation'\nimport { CounterType } from './Counter'\nimport { EventHandlerType } from './EventHandler'\nimport { ScrollTargetType, TargetType } from './ScrollTarget'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollToType = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(\n  animation: AnimationType,\n  indexCurrent: CounterType,\n  indexPrevious: CounterType,\n  scrollTarget: ScrollTargetType,\n  targetVector: Vector1DType,\n  eventHandler: EventHandlerType,\n): ScrollToType {\n  function scrollTo(target: TargetType): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    if (distanceDiff) {\n      animation.start()\n      targetVector.add(distanceDiff)\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      eventHandler.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollToType = {\n    distance,\n    index,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { DirectionType } from './Direction'\nimport { Vector1DType } from './Vector1d'\n\nexport type TranslateType = {\n  clear: () => void\n  to: (vector: Vector1DType) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(\n  axis: AxisType,\n  direction: DirectionType,\n  container: HTMLElement,\n): TranslateType {\n  const translate = axis.scroll === 'x' ? x : y\n  const containerStyle = container.style\n  let disabled = false\n\n  function x(n: number): string {\n    return `translate3d(${n}px,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}px,0px)`\n  }\n\n  function to(target: Vector1DType): void {\n    if (disabled) return\n    containerStyle.transform = translate(direction.apply(target.get()))\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    if (disabled) return\n    containerStyle.transform = ''\n    if (!container.getAttribute('style')) container.removeAttribute('style')\n  }\n\n  const self: TranslateType = {\n    clear,\n    to,\n    toggleActive,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayKeys } from './utils'\nimport { SlidesInViewType } from './SlidesInView'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { Translate, TranslateType } from './Translate'\nimport { DirectionType } from './Direction'\n\ntype EdgeType = 'start' | 'end'\n\ntype LoopPointType = {\n  index: number\n  translate: TranslateType\n  location: Vector1DType\n  target: () => Vector1DType\n}\n\nexport type SlideLooperType = {\n  canLoop: () => boolean\n  clear: () => void\n  loop: () => void\n  loopPoints: LoopPointType[]\n}\n\nexport function SlideLooper(\n  axis: AxisType,\n  direction: DirectionType,\n  viewSize: number,\n  contentSize: number,\n  slideSizesWithGaps: number[],\n  scrollSnaps: number[],\n  slidesInView: SlidesInViewType,\n  scroll: Vector1DType,\n  slides: HTMLElement[],\n): SlideLooperType {\n  const ascItems = arrayKeys(slideSizesWithGaps)\n  const descItems = arrayKeys(slideSizesWithGaps).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n\n  function removeSlideSizes(indexes: number[], from: number): number {\n    return indexes.reduce((a: number, i) => {\n      return a - slideSizesWithGaps[i]\n    }, from)\n  }\n\n  function slidesInGap(indexes: number[], gap: number): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const remainingGap = removeSlideSizes(a, gap)\n      return remainingGap > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function findLoopPoints(indexes: number[], edge: EdgeType): LoopPointType[] {\n    const isStartEdge = edge === 'start'\n    const offset = isStartEdge ? -contentSize : contentSize\n    const slideBounds = slidesInView.findSlideBounds([offset])\n\n    return indexes.map((index) => {\n      const initial = isStartEdge ? 0 : -contentSize\n      const altered = isStartEdge ? contentSize : 0\n      const bounds = slideBounds.filter((b) => b.index === index)[0]\n      const point = bounds[isStartEdge ? 'end' : 'start']\n      const shift = Vector1D(-1)\n      const location = Vector1D(-1)\n      const translate = Translate(axis, direction, slides[index])\n      const target = () => shift.set(scroll.get() > point ? initial : altered)\n      return { index, location, translate, target }\n    })\n  }\n\n  function startPoints(): LoopPointType[] {\n    const gap = scrollSnaps[0] - 1\n    const indexes = slidesInGap(descItems, gap)\n    return findLoopPoints(indexes, 'end')\n  }\n\n  function endPoints(): LoopPointType[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = slidesInGap(ascItems, gap)\n    return findLoopPoints(indexes, 'start')\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter((i) => i !== index)\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1\n    })\n  }\n\n  function loop(): void {\n    loopPoints.forEach((loopPoint) => {\n      const { target, translate, location } = loopPoint\n      const shift = target()\n      if (shift.get() === location.get()) return\n      if (shift.get() === 0) translate.clear()\n      else translate.to(shift)\n      location.set(shift)\n    })\n  }\n\n  function clear(): void {\n    loopPoints.forEach((loopPoint) => loopPoint.translate.clear())\n  }\n\n  const self: SlideLooperType = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints,\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\n\nexport type SlideBoundType = {\n  start: number\n  end: number\n  index: number\n}\n\nexport type SlidesInViewType = {\n  check: (location: number, bounds?: SlideBoundType[]) => number[]\n  findSlideBounds: (offsets?: number[], threshold?: number) => SlideBoundType[]\n}\n\nexport function SlidesInView(\n  viewSize: number,\n  contentSize: number,\n  slideSizes: number[],\n  snaps: number[],\n  limit: LimitType,\n  loop: boolean,\n  inViewThreshold: number,\n): SlidesInViewType {\n  const { removeOffset, constrain } = limit\n  const roundingSafety = 0.5\n  const cachedOffsets = loop ? [0, contentSize, -contentSize] : [0]\n  const cachedBounds = findSlideBounds(cachedOffsets, inViewThreshold)\n\n  function findSlideThresholds(threshold?: number): number[] {\n    const slideThreshold = threshold || 0\n\n    return slideSizes.map((slideSize) => {\n      const thresholdLimit = Limit(roundingSafety, slideSize - roundingSafety)\n      return thresholdLimit.constrain(slideSize * slideThreshold)\n    })\n  }\n\n  function findSlideBounds(\n    offsets?: number[],\n    threshold?: number,\n  ): SlideBoundType[] {\n    const slideOffsets = offsets || cachedOffsets\n    const slideThresholds = findSlideThresholds(threshold)\n\n    return slideOffsets.reduce((list: SlideBoundType[], offset) => {\n      const bounds = snaps.map((snap, index) => ({\n        start: snap - slideSizes[index] + slideThresholds[index] + offset,\n        end: snap + viewSize - slideThresholds[index] + offset,\n        index,\n      }))\n      return list.concat(bounds)\n    }, [])\n  }\n\n  function check(location: number, bounds?: SlideBoundType[]): number[] {\n    const limitedLocation = loop ? removeOffset(location) : constrain(location)\n    const slideBounds = bounds || cachedBounds\n\n    return slideBounds.reduce((list: number[], slideBound) => {\n      const { index, start, end } = slideBound\n      const inList = list.indexOf(index) !== -1\n      const inView = start < limitedLocation && end > limitedLocation\n      return !inList && inView ? list.concat([index]) : list\n    }, [])\n  }\n\n  const self: SlidesInViewType = {\n    check,\n    findSlideBounds,\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayLast, arrayLastIndex, mathAbs } from './utils'\n\nexport type SlideSizesType = {\n  slideSizes: number[]\n  slideSizesWithGaps: number[]\n}\n\nexport function SlideSizes(\n  axis: AxisType,\n  containerRect: DOMRect,\n  slideRects: DOMRect[],\n  slides: HTMLElement[],\n  readEdgeGap: boolean,\n): SlideSizesType {\n  const { measureSize, startEdge, endEdge } = axis\n  const withEdgeGap = slideRects[0] && readEdgeGap\n  const startGap = measureStartGap()\n  const endGap = measureEndGap()\n  const slideSizes = slideRects.map(measureSize)\n  const slideSizesWithGaps = measureWithGaps()\n\n  function measureStartGap(): number {\n    if (!withEdgeGap) return 0\n    const slideRect = slideRects[0]\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge])\n  }\n\n  function measureEndGap(): number {\n    if (!withEdgeGap) return 0\n    const style = window.getComputedStyle(arrayLast(slides))\n    return parseFloat(style.getPropertyValue(`margin-${endEdge}`))\n  }\n\n  function measureWithGaps(): number[] {\n    return slideRects\n      .map((rect, index, rects) => {\n        const isFirst = !index\n        const isLast = index === arrayLastIndex(rects)\n        if (isFirst) return slideSizes[index] + startGap\n        if (isLast) return slideSizes[index] + endGap\n        return rects[index + 1][startEdge] - rect[startEdge]\n      })\n      .map(mathAbs)\n  }\n\n  const self: SlideSizesType = {\n    slideSizes,\n    slideSizesWithGaps,\n  }\n  return self\n}\n","import { arrayKeys, arrayLast, isNumber } from './utils'\n\nexport type SlidesToScrollOptionType = 'auto' | number\n\nexport type SlidesToScrollType = {\n  groupSlides: <Type>(array: Type[]) => Type[][]\n}\n\nexport function SlidesToScroll(\n  viewSize: number,\n  slideSizesWithGaps: number[],\n  slidesToScroll: SlidesToScrollOptionType,\n): SlidesToScrollType {\n  const groupByNumber = isNumber(slidesToScroll)\n\n  function byNumber<Type>(array: Type[], groupSize: number): Type[][] {\n    return arrayKeys(array)\n      .filter((i) => i % groupSize === 0)\n      .map((i) => array.slice(i, i + groupSize))\n  }\n\n  function bySize<Type>(array: Type[]): Type[][] {\n    return arrayKeys(array)\n      .reduce((groupSizes: number[], i) => {\n        const chunk = slideSizesWithGaps.slice(arrayLast(groupSizes), i + 1)\n        const chunkSize = chunk.reduce((a, s) => a + s, 0)\n        return !i || chunkSize > viewSize ? groupSizes.concat(i) : groupSizes\n      }, [])\n      .map((start, i, groupSizes) => array.slice(start, groupSizes[i + 1]))\n  }\n\n  function groupSlides<Type>(array: Type[]): Type[][] {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array)\n  }\n\n  const self: SlidesToScrollType = {\n    groupSlides,\n  }\n  return self\n}\n","import { Alignment } from './Alignment'\nimport { Animation, AnimationType } from './Animation'\nimport { Axis, AxisType } from './Axis'\nimport { Counter, CounterType } from './Counter'\nimport { Direction, DirectionType } from './Direction'\nimport { DragHandler, DragHandlerType } from './DragHandler'\nimport { DragTracker } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { EventStore, EventStoreType } from './EventStore'\nimport { LimitType } from './Limit'\nimport { OptionsType } from './Options'\nimport { PercentOfView, PercentOfViewType } from './PercentOfView'\nimport { ScrollBody, ScrollBodyType } from './ScrollBody'\nimport { ScrollBounds, ScrollBoundsType } from './ScrollBounds'\nimport { ScrollContain } from './ScrollContain'\nimport { ScrollLimit } from './ScrollLimit'\nimport { ScrollLooper, ScrollLooperType } from './ScrollLooper'\nimport { ScrollProgress, ScrollProgressType } from './ScrollProgress'\nimport { ScrollSnaps } from './ScrollSnaps'\nimport { ScrollTarget, ScrollTargetType } from './ScrollTarget'\nimport { ScrollTo, ScrollToType } from './ScrollTo'\nimport { SlideLooper, SlideLooperType } from './SlideLooper'\nimport { SlidesInView, SlidesInViewType } from './SlidesInView'\nimport { SlideSizes } from './SlideSizes'\nimport { SlidesToScroll, SlidesToScrollType } from './SlidesToScroll'\nimport { Translate, TranslateType } from './Translate'\nimport { arrayKeys, arrayLast, arrayLastIndex } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type EngineType = {\n  axis: AxisType\n  direction: DirectionType\n  animation: AnimationType\n  scrollBounds: ScrollBoundsType\n  scrollLooper: ScrollLooperType\n  scrollProgress: ScrollProgressType\n  index: CounterType\n  indexPrevious: CounterType\n  limit: LimitType\n  location: Vector1DType\n  options: OptionsType\n  percentOfView: PercentOfViewType\n  scrollBody: ScrollBodyType\n  dragHandler: DragHandlerType\n  eventStore: EventStoreType\n  slideLooper: SlideLooperType\n  slidesInView: SlidesInViewType\n  slidesToScroll: SlidesToScrollType\n  target: Vector1DType\n  translate: TranslateType\n  scrollTo: ScrollToType\n  scrollTarget: ScrollTargetType\n  scrollSnaps: number[]\n  slideIndexes: number[]\n  containerRect: DOMRect\n  slideRects: DOMRect[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  options: OptionsType,\n  eventHandler: EventHandlerType,\n): EngineType {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction: contentDirection,\n    startIndex,\n    inViewThreshold,\n    loop,\n    speed,\n    dragFree,\n    slidesToScroll: groupSlides,\n    skipSnaps,\n    containScroll,\n  } = options\n\n  // Measurements\n  const containerRect = container.getBoundingClientRect()\n  const slideRects = slides.map((slide) => slide.getBoundingClientRect())\n  const direction = Direction(contentDirection)\n  const axis = Axis(scrollAxis, contentDirection)\n  const viewSize = axis.measureSize(containerRect)\n  const percentOfView = PercentOfView(viewSize)\n  const alignment = Alignment(align, viewSize)\n  const containSnaps = !loop && containScroll !== ''\n  const readEdgeGap = loop || containScroll !== ''\n  const { slideSizes, slideSizesWithGaps } = SlideSizes(\n    axis,\n    containerRect,\n    slideRects,\n    slides,\n    readEdgeGap,\n  )\n  const slidesToScroll = SlidesToScroll(\n    viewSize,\n    slideSizesWithGaps,\n    groupSlides,\n  )\n  const { snaps, snapsAligned } = ScrollSnaps(\n    axis,\n    alignment,\n    containerRect,\n    slideRects,\n    slideSizesWithGaps,\n    slidesToScroll,\n    containSnaps,\n  )\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps)\n  const { snapsContained } = ScrollContain(\n    viewSize,\n    contentSize,\n    snapsAligned,\n    containScroll,\n  )\n  const scrollSnaps = containSnaps ? snapsContained : snapsAligned\n  const { limit } = ScrollLimit(contentSize, scrollSnaps, loop)\n\n  // Indexes\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop)\n  const indexPrevious = index.clone()\n  const slideIndexes = arrayKeys(slides)\n\n  // Draw\n  const update = (): void => {\n    if (!loop) engine.scrollBounds.constrain(engine.dragHandler.pointerDown())\n    engine.scrollBody.seek(target).update()\n    const settled = engine.scrollBody.settle(target)\n\n    if (settled && !engine.dragHandler.pointerDown()) {\n      engine.animation.stop()\n      eventHandler.emit('settle')\n    }\n    if (!settled) {\n      eventHandler.emit('scroll')\n    }\n    if (loop) {\n      engine.scrollLooper.loop(engine.scrollBody.direction())\n      engine.slideLooper.loop()\n    }\n\n    engine.translate.to(location)\n    engine.animation.proceed()\n  }\n\n  // Shared\n  const animation = Animation(update)\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const scrollBody = ScrollBody(location, speed, 1)\n  const scrollTarget = ScrollTarget(\n    loop,\n    scrollSnaps,\n    contentSize,\n    limit,\n    target,\n  )\n  const scrollTo = ScrollTo(\n    animation,\n    index,\n    indexPrevious,\n    scrollTarget,\n    target,\n    eventHandler,\n  )\n  const slidesInView = SlidesInView(\n    viewSize,\n    contentSize,\n    slideSizes,\n    snaps,\n    limit,\n    loop,\n    inViewThreshold,\n  )\n\n  // DragHandler\n  const dragHandler = DragHandler(\n    axis,\n    direction,\n    root,\n    target,\n    DragTracker(axis),\n    location,\n    animation,\n    scrollTo,\n    scrollBody,\n    scrollTarget,\n    index,\n    eventHandler,\n    percentOfView,\n    loop,\n    dragFree,\n    skipSnaps,\n  )\n\n  // Engine\n  const engine: EngineType = {\n    containerRect,\n    slideRects,\n    animation,\n    axis,\n    direction,\n    dragHandler,\n    eventStore: EventStore(),\n    percentOfView,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    options,\n    scrollBody,\n    scrollBounds: ScrollBounds(\n      limit,\n      location,\n      target,\n      scrollBody,\n      percentOfView,\n    ),\n    scrollLooper: ScrollLooper(contentSize, limit, location, [\n      location,\n      target,\n    ]),\n    scrollProgress: ScrollProgress(limit),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper(\n      axis,\n      direction,\n      viewSize,\n      contentSize,\n      slideSizesWithGaps,\n      scrollSnaps,\n      slidesInView,\n      location,\n      slides,\n    ),\n    slidesToScroll,\n    slidesInView,\n    slideIndexes,\n    target,\n    translate: Translate(axis, direction, container),\n  }\n  return engine\n}\n","type CallbackType = (evt: EmblaEventType) => void\ntype ListenersType = Partial<{ [key in EmblaEventType]: CallbackType[] }>\n\nexport type EmblaEventType =\n  | 'init'\n  | 'pointerDown'\n  | 'pointerUp'\n  | 'scroll'\n  | 'select'\n  | 'settle'\n  | 'destroy'\n  | 'reInit'\n  | 'resize'\n\nexport type EventHandlerType = {\n  emit: (evt: EmblaEventType) => EventHandlerType\n  on: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n  off: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n}\n\nexport function EventHandler(): EventHandlerType {\n  const listeners: ListenersType = {}\n\n  function getListeners(evt: EmblaEventType): CallbackType[] {\n    return listeners[evt] || []\n  }\n\n  function emit(evt: EmblaEventType): EventHandlerType {\n    getListeners(evt).forEach((e) => e(evt))\n    return self\n  }\n\n  function on(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).filter((e) => e !== cb)\n    return self\n  }\n\n  const self: EventHandlerType = {\n    emit,\n    off,\n    on,\n  }\n  return self\n}\n","import { AlignmentOptionType } from './Alignment'\nimport { AxisOptionType } from './Axis'\nimport { SlidesToScrollOptionType } from './SlidesToScroll'\nimport { DirectionOptionType } from './Direction'\nimport { ScrollContainOptionType } from './ScrollContain'\n\nexport type LooseOptionsType = {\n  [key: string]: unknown\n}\n\nexport type CreateOptionsType<Type extends LooseOptionsType> = Type & {\n  active: boolean\n  breakpoints: {\n    [key: string]: Omit<Partial<CreateOptionsType<Type>>, 'breakpoints'>\n  }\n}\n\nexport type OptionsType = CreateOptionsType<{\n  align: AlignmentOptionType\n  axis: AxisOptionType\n  container: string | HTMLElement | null\n  slides: string | HTMLElement[] | NodeListOf<HTMLElement> | null\n  containScroll: ScrollContainOptionType\n  direction: DirectionOptionType\n  slidesToScroll: SlidesToScrollOptionType\n  dragFree: boolean\n  draggable: boolean\n  inViewThreshold: number\n  loop: boolean\n  skipSnaps: boolean\n  speed: number\n  startIndex: number\n}>\n\nexport const defaultOptions: OptionsType = {\n  align: 'center',\n  axis: 'x',\n  container: null,\n  slides: null,\n  containScroll: '',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  breakpoints: {},\n  dragFree: false,\n  draggable: true,\n  inViewThreshold: 0,\n  loop: false,\n  skipSnaps: false,\n  speed: 10,\n  startIndex: 0,\n  active: true,\n}\n\nexport type EmblaOptionsType = Partial<OptionsType>\n","import { LooseOptionsType, CreateOptionsType } from './Options'\nimport { objectKeys, objectsAreEqual, objectsMergeDeep } from './utils'\n\ntype OptionsType = Partial<CreateOptionsType<LooseOptionsType>>\n\nexport type OptionsHandlerType = {\n  merge: <TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB,\n  ) => TypeA\n  areEqual: <TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB: TypeB,\n  ) => boolean\n  atMedia: <Type extends OptionsType>(options: Type) => Type\n}\n\nexport function OptionsHandler(): OptionsHandlerType {\n  function merge<TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB,\n  ): TypeA {\n    return <TypeA>objectsMergeDeep(optionsA, optionsB || {})\n  }\n\n  function areEqual<TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB: TypeB,\n  ): boolean {\n    const breakpointsA = JSON.stringify(objectKeys(optionsA.breakpoints || {}))\n    const breakpointsB = JSON.stringify(objectKeys(optionsB.breakpoints || {}))\n    if (breakpointsA !== breakpointsB) return false\n    return objectsAreEqual(optionsA, optionsB)\n  }\n\n  function atMedia<Type extends OptionsType>(options: Type): Type {\n    const optionsAtMedia = options.breakpoints || {}\n    const matchedMediaOptions = objectKeys(optionsAtMedia)\n      .filter((media) => window.matchMedia(media).matches)\n      .map((media) => optionsAtMedia[media])\n      .reduce((a, mediaOption) => merge(a, mediaOption), {})\n\n    return merge(options, matchedMediaOptions)\n  }\n\n  const self: OptionsHandlerType = {\n    merge,\n    areEqual,\n    atMedia,\n  }\n  return self\n}\n","import { EmblaCarouselType } from '.'\nimport { OptionsHandler } from './OptionsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\n\ntype PluginChangedHandlerType = () => boolean\n\nexport type PluginsHandlerType = {\n  init: (\n    plugins: EmblaPluginType[],\n    embla: EmblaCarouselType,\n  ) => EmblaPluginsType\n  destroy: () => void\n  haveChanged: PluginChangedHandlerType\n}\n\nexport function PluginsHandler(): PluginsHandlerType {\n  const { atMedia, areEqual } = OptionsHandler()\n  let activePlugins: EmblaPluginType[] = []\n  let pluginsChanged: PluginChangedHandlerType[] = []\n\n  function haveChanged(): boolean {\n    return pluginsChanged.some((hasChanged) => hasChanged())\n  }\n\n  function hasChanged(plugin: EmblaPluginType): PluginChangedHandlerType {\n    const options = atMedia(plugin.options)\n    return (): boolean => !areEqual(options, atMedia(plugin.options))\n  }\n\n  function init(\n    plugins: EmblaPluginType[],\n    embla: EmblaCarouselType,\n  ): EmblaPluginsType {\n    pluginsChanged = plugins.map(hasChanged)\n    activePlugins = plugins.filter((plugin) => atMedia(plugin.options).active)\n    activePlugins.forEach((plugin) => plugin.init(embla))\n\n    return plugins.reduce((map, plugin) => {\n      return Object.assign(map, { [plugin.name]: plugin })\n    }, {})\n  }\n\n  function destroy(): void {\n    activePlugins = activePlugins.filter((plugin) => plugin.destroy())\n  }\n\n  const self: PluginsHandlerType = {\n    init,\n    destroy,\n    haveChanged,\n  }\n  return self\n}\n","import { Engine, EngineType } from './Engine'\nimport { EventStore } from './EventStore'\nimport { EventHandler, EventHandlerType } from './EventHandler'\nimport { defaultOptions, EmblaOptionsType } from './Options'\nimport { OptionsHandler } from './OptionsHandler'\nimport { PluginsHandler } from './PluginsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\nimport { isString } from './utils'\n\nexport type EmblaCarouselType = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  clickAllowed: () => boolean\n  containerNode: () => HTMLElement\n  internalEngine: () => EngineType\n  destroy: () => void\n  off: EventHandlerType['off']\n  on: EventHandlerType['on']\n  plugins: () => EmblaPluginsType\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptionsType, plugins?: EmblaPluginType[]) => void\n  rootNode: () => HTMLElement\n  scrollNext: (jump?: boolean) => void\n  scrollPrev: (jump?: boolean) => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number, jump?: boolean) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: (target?: boolean) => number[]\n  slidesNotInView: (target?: boolean) => number[]\n}\n\nfunction EmblaCarousel(\n  root: HTMLElement,\n  userOptions?: EmblaOptionsType,\n  userPlugins?: EmblaPluginType[],\n): EmblaCarouselType {\n  const resizeHandlers = EventStore()\n  const optionsHandler = OptionsHandler()\n  const pluginsHandler = PluginsHandler()\n  const eventHandler = EventHandler()\n  const { on, off } = eventHandler\n  const reInit = reActivate\n\n  let destroyed = false\n  let engine: EngineType\n  let optionsBase = optionsHandler.merge(\n    defaultOptions,\n    EmblaCarousel.globalOptions,\n  )\n  let options = optionsHandler.merge(optionsBase)\n  let pluginList: EmblaPluginType[] = []\n  let pluginApis: EmblaPluginsType\n  let rootSize = 0\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  function storeElements(): void {\n    const { container: userContainer, slides: userSlides } = options\n\n    const customContainer = isString(userContainer)\n      ? root.querySelector(userContainer)\n      : userContainer\n    container = <HTMLElement>(customContainer || root.children[0])\n\n    const customSlides = isString(userSlides)\n      ? container.querySelectorAll(userSlides)\n      : userSlides\n    slides = <HTMLElement[]>[].slice.call(customSlides || container.children)\n  }\n\n  function activate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[],\n  ): void {\n    if (destroyed) return\n\n    optionsBase = optionsHandler.merge(optionsBase, withOptions)\n    options = optionsHandler.atMedia(optionsBase)\n\n    storeElements()\n\n    engine = Engine(root, container, slides, options, eventHandler)\n    rootSize = engine.axis.measureSize(root.getBoundingClientRect())\n\n    if (!options.active) return deActivate()\n\n    engine.translate.to(engine.location)\n    pluginList = withPlugins || pluginList\n    pluginApis = pluginsHandler.init(pluginList, self)\n\n    if (options.loop) {\n      if (!engine.slideLooper.canLoop()) {\n        deActivate()\n        activate({ loop: false }, withPlugins)\n        optionsBase = optionsHandler.merge(optionsBase, { loop: true })\n        return\n      }\n      engine.slideLooper.loop()\n    }\n    if (options.draggable && container.offsetParent && slides.length) {\n      engine.dragHandler.addActivationEvents()\n    }\n  }\n\n  function reActivate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[],\n  ): void {\n    const startIndex = selectedScrollSnap()\n    deActivate()\n    activate(optionsHandler.merge({ startIndex }, withOptions), withPlugins)\n    eventHandler.emit('reInit')\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.removeAllEvents()\n    engine.animation.stop()\n    engine.eventStore.removeAll()\n    engine.translate.clear()\n    engine.slideLooper.clear()\n    pluginsHandler.destroy()\n  }\n\n  function destroy(): void {\n    if (destroyed) return\n    destroyed = true\n    resizeHandlers.removeAll()\n    deActivate()\n    eventHandler.emit('destroy')\n  }\n\n  function resize(): void {\n    const newOptions = optionsHandler.atMedia(optionsBase)\n    const optionsChanged = !optionsHandler.areEqual(newOptions, options)\n    const newRootSize = engine.axis.measureSize(root.getBoundingClientRect())\n    const rootSizeChanged = rootSize !== newRootSize\n    const pluginsChanged = pluginsHandler.haveChanged()\n\n    if (rootSizeChanged || optionsChanged || pluginsChanged) reActivate()\n    eventHandler.emit('resize')\n  }\n\n  function slidesInView(target?: boolean): number[] {\n    const location = engine[target ? 'target' : 'location'].get()\n    const type = options.loop ? 'removeOffset' : 'constrain'\n    return engine.slidesInView.check(engine.limit[type](location))\n  }\n\n  function slidesNotInView(target?: boolean): number[] {\n    const inView = slidesInView(target)\n    return engine.slideIndexes.filter((index) => inView.indexOf(index) === -1)\n  }\n\n  function scrollTo(index: number, jump?: boolean, direction?: number): void {\n    if (!options.active || destroyed) return\n    engine.scrollBody.useBaseMass().useSpeed(jump ? 100 : options.speed)\n    engine.scrollTo.index(index, direction || 0)\n  }\n\n  function scrollNext(jump?: boolean): void {\n    const next = engine.index.clone().add(1)\n    scrollTo(next.get(), jump === true, -1)\n  }\n\n  function scrollPrev(jump?: boolean): void {\n    const prev = engine.index.clone().add(-1)\n    scrollTo(prev.get(), jump === true, 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.clone().add(1)\n    return next.get() !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.clone().add(-1)\n    return prev.get() !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnaps.map(engine.scrollProgress.get)\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function clickAllowed(): boolean {\n    return engine.dragHandler.clickAllowed()\n  }\n\n  function plugins(): EmblaPluginsType {\n    return pluginApis\n  }\n\n  function internalEngine(): EngineType {\n    return engine\n  }\n\n  function rootNode(): HTMLElement {\n    return root\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarouselType = {\n    canScrollNext,\n    canScrollPrev,\n    clickAllowed,\n    containerNode,\n    internalEngine,\n    destroy,\n    off,\n    on,\n    plugins,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView,\n  }\n\n  activate(userOptions, userPlugins)\n  resizeHandlers.add(window, 'resize', resize)\n  setTimeout(() => eventHandler.emit('init'), 0)\n  return self\n}\n\nEmblaCarousel.globalOptions = <EmblaOptionsType | undefined>undefined\nEmblaCarousel.optionsHandler = OptionsHandler\n\nexport default EmblaCarousel\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}