{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { useId } from '@mantine/hooks';\nimport 'react';\nimport { getSize, getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { parseThemeColor } from '../../core/MantineProvider/color-functions/parse-theme-color/parse-theme-color.mjs';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport { getContrastColor } from '../../core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs';\nimport { getAutoContrastValue } from '../../core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { extractStyleProps } from '../../core/Box/style-props/extract-style-props/extract-style-props.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { InlineInputClasses, InlineInput } from '../InlineInput/InlineInput.mjs';\nimport { CheckboxCard } from './CheckboxCard/CheckboxCard.mjs';\nimport { useCheckboxGroupContext } from './CheckboxGroup.context.mjs';\nimport { CheckboxGroup } from './CheckboxGroup/CheckboxGroup.mjs';\nimport { CheckboxIndicator } from './CheckboxIndicator/CheckboxIndicator.mjs';\nimport { CheckboxIcon } from './CheckIcon.mjs';\nimport classes from './Checkbox.module.css.mjs';\nconst defaultProps = {\n  labelPosition: \"right\",\n  icon: CheckboxIcon\n};\nconst varsResolver = createVarsResolver((theme, {\n  radius,\n  color,\n  size,\n  iconColor,\n  variant,\n  autoContrast\n}) => {\n  const parsedColor = parseThemeColor({\n    color: color || theme.primaryColor,\n    theme\n  });\n  const outlineColor = parsedColor.isThemeColor && parsedColor.shade === void 0 ? `var(--mantine-color-${parsedColor.color}-outline)` : parsedColor.color;\n  return {\n    root: {\n      \"--checkbox-size\": getSize(size, \"checkbox-size\"),\n      \"--checkbox-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--checkbox-color\": variant === \"outline\" ? outlineColor : getThemeColor(color, theme),\n      \"--checkbox-icon-color\": iconColor ? getThemeColor(iconColor, theme) : getAutoContrastValue(autoContrast, theme) ? getContrastColor({\n        color,\n        theme,\n        autoContrast\n      }) : void 0\n    }\n  };\n});\nconst Checkbox = factory((_props, ref) => {\n  const props = useProps(\"Checkbox\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    label,\n    id,\n    size,\n    radius,\n    wrapperProps,\n    checked,\n    labelPosition,\n    description,\n    error,\n    disabled,\n    variant,\n    indeterminate,\n    icon,\n    rootRef,\n    iconColor,\n    onChange,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n  const ctx = useCheckboxGroupContext();\n  const _size = size || ctx?.size;\n  const Icon = icon;\n  const getStyles = useStyles({\n    name: \"Checkbox\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const {\n    styleProps,\n    rest\n  } = extractStyleProps(others);\n  const uuid = useId(id);\n  const contextProps = ctx ? {\n    checked: ctx.value.includes(rest.value),\n    onChange: event => {\n      ctx.onChange(event);\n      onChange?.(event);\n    }\n  } : {};\n  return /* @__PURE__ */jsx(InlineInput, {\n    ...getStyles(\"root\"),\n    __staticSelector: \"Checkbox\",\n    __stylesApiProps: props,\n    id: uuid,\n    size: _size,\n    labelPosition,\n    label,\n    description,\n    error,\n    disabled,\n    classNames,\n    styles,\n    unstyled,\n    \"data-checked\": contextProps.checked || checked || void 0,\n    variant,\n    ref: rootRef,\n    mod,\n    ...styleProps,\n    ...wrapperProps,\n    children: /* @__PURE__ */jsxs(Box, {\n      ...getStyles(\"inner\"),\n      mod: {\n        \"data-label-position\": labelPosition\n      },\n      children: [/* @__PURE__ */jsx(Box, {\n        component: \"input\",\n        id: uuid,\n        ref,\n        checked,\n        disabled,\n        mod: {\n          error: !!error,\n          indeterminate\n        },\n        ...getStyles(\"input\", {\n          focusable: true,\n          variant\n        }),\n        onChange,\n        ...rest,\n        ...contextProps,\n        type: \"checkbox\"\n      }), /* @__PURE__ */jsx(Icon, {\n        indeterminate,\n        ...getStyles(\"icon\")\n      })]\n    })\n  });\n});\nCheckbox.classes = {\n  ...classes,\n  ...InlineInputClasses\n};\nCheckbox.displayName = \"@mantine/core/Checkbox\";\nCheckbox.Group = CheckboxGroup;\nCheckbox.Indicator = CheckboxIndicator;\nCheckbox.Card = CheckboxCard;\nexport { Checkbox };","map":{"version":3,"names":["defaultProps","labelPosition","icon","CheckboxIcon","varsResolver","createVarsResolver","theme","radius","color","size","iconColor","variant","autoContrast","parsedColor","parseThemeColor","primaryColor","outlineColor","isThemeColor","shade","root","getSize","getRadius","getThemeColor","getAutoContrastValue","getContrastColor","Checkbox","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","label","id","wrapperProps","checked","description","error","disabled","indeterminate","rootRef","onChange","mod","others","ctx","useCheckboxGroupContext","_size","Icon","getStyles","useStyles","name","classes","styleProps","rest","extractStyleProps","uuid","useId","contextProps","value","includes","event","jsx","InlineInput","__staticSelector","__stylesApiProps","children","jsxs","Box","component","focusable","type","InlineInputClasses","displayName","Group","CheckboxGroup","Indicator","CheckboxIndicator","Card","CheckboxCard"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["import { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  extractStyleProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  parseThemeColor,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { InlineInput, InlineInputClasses, InlineInputStylesNames } from '../InlineInput';\nimport { CheckboxCard } from './CheckboxCard/CheckboxCard';\nimport { useCheckboxGroupContext } from './CheckboxGroup.context';\nimport { CheckboxGroup } from './CheckboxGroup/CheckboxGroup';\nimport { CheckboxIndicator } from './CheckboxIndicator/CheckboxIndicator';\nimport { CheckboxIcon } from './CheckIcon';\nimport classes from './Checkbox.module.css';\n\nexport type CheckboxVariant = 'filled' | 'outline';\nexport type CheckboxStylesNames = 'icon' | 'inner' | 'input' | InlineInputStylesNames;\nexport type CheckboxCssVariables = {\n  root: '--checkbox-size' | '--checkbox-radius' | '--checkbox-color' | '--checkbox-icon-color';\n};\n\nexport interface CheckboxProps\n  extends BoxProps,\n    StylesApiProps<CheckboxFactory>,\n    ElementProps<'input', 'size' | 'children'> {\n  /** Id used to connect input with the label. If not set, unique id is generated instead. */\n  id?: string;\n\n  /** Content of the `label` associated with the checkbox */\n  label?: React.ReactNode;\n\n  /** Key of `theme.colors` or any valid CSS color to set input background color in checked state, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Controls size of the component, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius,` `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Props passed down to the root element */\n  wrapperProps?: Record<string, any>;\n\n  /** Position of the label relative to the input, `'right'` by default */\n  labelPosition?: 'left' | 'right';\n\n  /** Description displayed below the label */\n  description?: React.ReactNode;\n\n  /** Error message displayed below the label */\n  error?: React.ReactNode;\n\n  /** Indeterminate state of the checkbox. If set, `checked` prop is ignored. */\n  indeterminate?: boolean;\n\n  /** Icon displayed when checkbox is in checked or indeterminate state */\n  icon?: React.FC<{ indeterminate: boolean | undefined; className: string }>;\n\n  /** Assigns ref of the root element */\n  rootRef?: React.ForwardedRef<HTMLDivElement>;\n\n  /** Key of `theme.colors` or any valid CSS color to set icon color, by default value depends on `theme.autoContrast` */\n  iconColor?: MantineColor;\n\n  /** Determines whether icon color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type CheckboxFactory = Factory<{\n  props: CheckboxProps;\n  ref: HTMLInputElement;\n  stylesNames: CheckboxStylesNames;\n  vars: CheckboxCssVariables;\n  variant: CheckboxVariant;\n  staticComponents: {\n    Group: typeof CheckboxGroup;\n    Indicator: typeof CheckboxIndicator;\n    Card: typeof CheckboxCard;\n  };\n}>;\n\nconst defaultProps: Partial<CheckboxProps> = {\n  labelPosition: 'right',\n  icon: CheckboxIcon,\n};\n\nconst varsResolver = createVarsResolver<CheckboxFactory>(\n  (theme, { radius, color, size, iconColor, variant, autoContrast }) => {\n    const parsedColor = parseThemeColor({ color: color || theme.primaryColor, theme });\n    const outlineColor =\n      parsedColor.isThemeColor && parsedColor.shade === undefined\n        ? `var(--mantine-color-${parsedColor.color}-outline)`\n        : parsedColor.color;\n\n    return {\n      root: {\n        '--checkbox-size': getSize(size, 'checkbox-size'),\n        '--checkbox-radius': radius === undefined ? undefined : getRadius(radius),\n        '--checkbox-color': variant === 'outline' ? outlineColor : getThemeColor(color, theme),\n        '--checkbox-icon-color': iconColor\n          ? getThemeColor(iconColor, theme)\n          : getAutoContrastValue(autoContrast, theme)\n            ? getContrastColor({ color, theme, autoContrast })\n            : undefined,\n      },\n    };\n  }\n);\n\nexport const Checkbox = factory<CheckboxFactory>((_props, ref) => {\n  const props = useProps('Checkbox', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    label,\n    id,\n    size,\n    radius,\n    wrapperProps,\n    checked,\n    labelPosition,\n    description,\n    error,\n    disabled,\n    variant,\n    indeterminate,\n    icon,\n    rootRef,\n    iconColor,\n    onChange,\n    autoContrast,\n    mod,\n    ...others\n  } = props;\n\n  const ctx = useCheckboxGroupContext();\n  const _size = size || ctx?.size;\n  const Icon = icon!;\n\n  const getStyles = useStyles<CheckboxFactory>({\n    name: 'Checkbox',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const { styleProps, rest } = extractStyleProps(others);\n  const uuid = useId(id);\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.value.includes(rest.value as string),\n        onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n          ctx.onChange(event);\n          onChange?.(event);\n        },\n      }\n    : {};\n\n  return (\n    <InlineInput\n      {...getStyles('root')}\n      __staticSelector=\"Checkbox\"\n      __stylesApiProps={props}\n      id={uuid}\n      size={_size}\n      labelPosition={labelPosition}\n      label={label}\n      description={description}\n      error={error}\n      disabled={disabled}\n      classNames={classNames}\n      styles={styles}\n      unstyled={unstyled}\n      data-checked={contextProps.checked || checked || undefined}\n      variant={variant}\n      ref={rootRef}\n      mod={mod}\n      {...styleProps}\n      {...wrapperProps}\n    >\n      <Box {...getStyles('inner')} mod={{ 'data-label-position': labelPosition }}>\n        <Box\n          component=\"input\"\n          id={uuid}\n          ref={ref}\n          checked={checked}\n          disabled={disabled}\n          mod={{ error: !!error, indeterminate }}\n          {...getStyles('input', { focusable: true, variant })}\n          onChange={onChange}\n          {...rest}\n          {...contextProps}\n          type=\"checkbox\"\n        />\n\n        <Icon indeterminate={indeterminate} {...getStyles('icon')} />\n      </Box>\n    </InlineInput>\n  );\n});\n\nCheckbox.classes = { ...classes, ...InlineInputClasses };\nCheckbox.displayName = '@mantine/core/Checkbox';\nCheckbox.Group = CheckboxGroup;\nCheckbox.Indicator = CheckboxIndicator;\nCheckbox.Card = CheckboxCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}