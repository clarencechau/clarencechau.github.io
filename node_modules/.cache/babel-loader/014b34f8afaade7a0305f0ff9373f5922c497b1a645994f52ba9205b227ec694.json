{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { useRef } from 'react';\nimport { findElementAncestor } from '../../core/utils/find-element-ancestor/find-element-ancestor.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nfunction getValuesRange(anchor, value, flatValues) {\n  if (!anchor || !value) {\n    return [];\n  }\n  const anchorIndex = flatValues.indexOf(anchor);\n  const valueIndex = flatValues.indexOf(value);\n  const start = Math.min(anchorIndex, valueIndex);\n  const end = Math.max(anchorIndex, valueIndex);\n  return flatValues.slice(start, end + 1);\n}\nfunction TreeNode({\n  node,\n  getStyles,\n  rootIndex,\n  controller,\n  expandOnClick,\n  selectOnClick,\n  isSubtree,\n  level = 1,\n  renderNode,\n  flatValues,\n  allowRangeSelection,\n  expandOnSpace\n}) {\n  const ref = useRef(null);\n  const nested = (node.children || []).map(child => /* @__PURE__ */jsx(TreeNode, {\n    node: child,\n    flatValues,\n    getStyles,\n    rootIndex: void 0,\n    level: level + 1,\n    controller,\n    expandOnClick,\n    isSubtree: true,\n    renderNode,\n    selectOnClick,\n    allowRangeSelection,\n    expandOnSpace\n  }, child.value));\n  const handleKeyDown = event => {\n    if (event.nativeEvent.code === \"ArrowRight\") {\n      event.stopPropagation();\n      event.preventDefault();\n      if (controller.expandedState[node.value]) {\n        event.currentTarget.querySelector(\"[role=treeitem]\")?.focus();\n      } else {\n        controller.expand(node.value);\n      }\n    }\n    if (event.nativeEvent.code === \"ArrowLeft\") {\n      event.stopPropagation();\n      event.preventDefault();\n      if (controller.expandedState[node.value] && (node.children || []).length > 0) {\n        controller.collapse(node.value);\n      } else if (isSubtree) {\n        findElementAncestor(event.currentTarget, \"[role=treeitem]\")?.focus();\n      }\n    }\n    if (event.nativeEvent.code === \"ArrowDown\" || event.nativeEvent.code === \"ArrowUp\") {\n      const root = findElementAncestor(event.currentTarget, \"[data-tree-root]\");\n      if (!root) {\n        return;\n      }\n      event.stopPropagation();\n      event.preventDefault();\n      const nodes = Array.from(root.querySelectorAll(\"[role=treeitem]\"));\n      const index = nodes.indexOf(event.currentTarget);\n      if (index === -1) {\n        return;\n      }\n      const nextIndex = event.nativeEvent.code === \"ArrowDown\" ? index + 1 : index - 1;\n      nodes[nextIndex]?.focus();\n      if (event.shiftKey) {\n        const selectNode = nodes[nextIndex];\n        if (selectNode) {\n          controller.setSelectedState(getValuesRange(controller.anchorNode, selectNode.dataset.value, flatValues));\n        }\n      }\n    }\n    if (event.nativeEvent.code === \"Space\" && expandOnSpace) {\n      event.stopPropagation();\n      event.preventDefault();\n      controller.toggleExpanded(node.value);\n    }\n  };\n  const handleNodeClick = event => {\n    event.stopPropagation();\n    if (allowRangeSelection && event.shiftKey && controller.anchorNode) {\n      controller.setSelectedState(getValuesRange(controller.anchorNode, node.value, flatValues));\n      ref.current?.focus();\n    } else {\n      expandOnClick && controller.toggleExpanded(node.value);\n      selectOnClick && controller.select(node.value);\n      ref.current?.focus();\n    }\n  };\n  const selected = controller.selectedState.includes(node.value);\n  const elementProps = {\n    ...getStyles(\"label\"),\n    onClick: handleNodeClick,\n    \"data-selected\": selected || void 0,\n    \"data-value\": node.value,\n    \"data-hovered\": controller.hoveredNode === node.value || void 0\n  };\n  return /* @__PURE__ */jsxs(\"li\", {\n    ...getStyles(\"node\", {\n      style: {\n        \"--label-offset\": `calc(var(--level-offset) * ${level - 1})`\n      }\n    }),\n    role: \"treeitem\",\n    \"aria-selected\": selected,\n    \"data-value\": node.value,\n    \"data-selected\": selected || void 0,\n    \"data-hovered\": controller.hoveredNode === node.value || void 0,\n    \"data-level\": level,\n    tabIndex: rootIndex === 0 ? 0 : -1,\n    onKeyDown: handleKeyDown,\n    ref,\n    onMouseOver: event => {\n      event.stopPropagation();\n      controller.setHoveredNode(node.value);\n    },\n    onMouseLeave: event => {\n      event.stopPropagation();\n      controller.setHoveredNode(null);\n    },\n    children: [typeof renderNode === \"function\" ? renderNode({\n      node,\n      level,\n      selected,\n      tree: controller,\n      expanded: controller.expandedState[node.value] || false,\n      hasChildren: Array.isArray(node.children) && node.children.length > 0,\n      elementProps\n    }) : /* @__PURE__ */jsx(\"div\", {\n      ...elementProps,\n      children: node.label\n    }), controller.expandedState[node.value] && nested.length > 0 && /* @__PURE__ */jsx(\"ul\", {\n      role: \"group\",\n      ...getStyles(\"subtree\"),\n      \"data-level\": level,\n      children: nested\n    })]\n  });\n}\nTreeNode.displayName = \"@mantine/core/TreeNode\";\nexport { TreeNode };","map":{"version":3,"names":["getValuesRange","anchor","value","flatValues","anchorIndex","indexOf","valueIndex","start","Math","min","end","max","slice","TreeNode","node","getStyles","rootIndex","controller","expandOnClick","selectOnClick","isSubtree","level","renderNode","allowRangeSelection","expandOnSpace","ref","useRef","nested","children","map","child","jsx","handleKeyDown","event","nativeEvent","code","stopPropagation","preventDefault","expandedState","currentTarget","querySelector","focus","expand","length","collapse","findElementAncestor","root","nodes","Array","from","querySelectorAll","index","nextIndex","shiftKey","selectNode","setSelectedState","anchorNode","dataset","toggleExpanded","handleNodeClick","current","select","selected","selectedState","includes","elementProps","onClick","hoveredNode","jsxs","style","role","tabIndex","onKeyDown","onMouseOver","setHoveredNode","onMouseLeave","tree","expanded","hasChildren","isArray","label","displayName"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/Tree/TreeNode.tsx"],"sourcesContent":["import { useRef } from 'react';\nimport { findElementAncestor, GetStylesApi } from '../../core';\nimport type { RenderNode, TreeFactory, TreeNodeData } from './Tree';\nimport type { TreeController } from './use-tree';\n\nfunction getValuesRange(anchor: string | null, value: string | undefined, flatValues: string[]) {\n  if (!anchor || !value) {\n    return [];\n  }\n\n  const anchorIndex = flatValues.indexOf(anchor);\n  const valueIndex = flatValues.indexOf(value);\n  const start = Math.min(anchorIndex, valueIndex);\n  const end = Math.max(anchorIndex, valueIndex);\n\n  return flatValues.slice(start, end + 1);\n}\n\ninterface TreeNodeProps {\n  node: TreeNodeData;\n  getStyles: GetStylesApi<TreeFactory>;\n  rootIndex: number | undefined;\n  controller: TreeController;\n  expandOnClick: boolean | undefined;\n  flatValues: string[];\n  isSubtree?: boolean;\n  level?: number;\n  renderNode: RenderNode | undefined;\n  selectOnClick: boolean | undefined;\n  allowRangeSelection: boolean | undefined;\n  expandOnSpace: boolean | undefined;\n}\n\nexport function TreeNode({\n  node,\n  getStyles,\n  rootIndex,\n  controller,\n  expandOnClick,\n  selectOnClick,\n  isSubtree,\n  level = 1,\n  renderNode,\n  flatValues,\n  allowRangeSelection,\n  expandOnSpace,\n}: TreeNodeProps) {\n  const ref = useRef<HTMLLIElement>(null);\n  const nested = (node.children || []).map((child) => (\n    <TreeNode\n      key={child.value}\n      node={child}\n      flatValues={flatValues}\n      getStyles={getStyles}\n      rootIndex={undefined}\n      level={level + 1}\n      controller={controller}\n      expandOnClick={expandOnClick}\n      isSubtree\n      renderNode={renderNode}\n      selectOnClick={selectOnClick}\n      allowRangeSelection={allowRangeSelection}\n      expandOnSpace={expandOnSpace}\n    />\n  ));\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.nativeEvent.code === 'ArrowRight') {\n      event.stopPropagation();\n      event.preventDefault();\n\n      if (controller.expandedState[node.value]) {\n        event.currentTarget.querySelector<HTMLLIElement>('[role=treeitem]')?.focus();\n      } else {\n        controller.expand(node.value);\n      }\n    }\n\n    if (event.nativeEvent.code === 'ArrowLeft') {\n      event.stopPropagation();\n      event.preventDefault();\n      if (controller.expandedState[node.value] && (node.children || []).length > 0) {\n        controller.collapse(node.value);\n      } else if (isSubtree) {\n        findElementAncestor(event.currentTarget as HTMLElement, '[role=treeitem]')?.focus();\n      }\n    }\n\n    if (event.nativeEvent.code === 'ArrowDown' || event.nativeEvent.code === 'ArrowUp') {\n      const root = findElementAncestor(event.currentTarget as HTMLElement, '[data-tree-root]');\n\n      if (!root) {\n        return;\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n      const nodes = Array.from(root.querySelectorAll<HTMLLIElement>('[role=treeitem]'));\n      const index = nodes.indexOf(event.currentTarget as HTMLLIElement);\n\n      if (index === -1) {\n        return;\n      }\n\n      const nextIndex = event.nativeEvent.code === 'ArrowDown' ? index + 1 : index - 1;\n      nodes[nextIndex]?.focus();\n\n      if (event.shiftKey) {\n        const selectNode = nodes[nextIndex];\n\n        if (selectNode) {\n          controller.setSelectedState(\n            getValuesRange(controller.anchorNode, selectNode.dataset.value, flatValues)\n          );\n        }\n      }\n    }\n\n    if (event.nativeEvent.code === 'Space' && expandOnSpace) {\n      event.stopPropagation();\n      event.preventDefault();\n      controller.toggleExpanded(node.value);\n    }\n  };\n\n  const handleNodeClick = (event: React.MouseEvent) => {\n    event.stopPropagation();\n\n    if (allowRangeSelection && event.shiftKey && controller.anchorNode) {\n      controller.setSelectedState(getValuesRange(controller.anchorNode, node.value, flatValues));\n      ref.current?.focus();\n    } else {\n      expandOnClick && controller.toggleExpanded(node.value);\n      selectOnClick && controller.select(node.value);\n      ref.current?.focus();\n    }\n  };\n\n  const selected = controller.selectedState.includes(node.value);\n  const elementProps = {\n    ...getStyles('label'),\n    onClick: handleNodeClick,\n    'data-selected': selected || undefined,\n    'data-value': node.value,\n    'data-hovered': controller.hoveredNode === node.value || undefined,\n  };\n\n  return (\n    <li\n      {...getStyles('node', {\n        style: { '--label-offset': `calc(var(--level-offset) * ${level - 1})` },\n      })}\n      role=\"treeitem\"\n      aria-selected={selected}\n      data-value={node.value}\n      data-selected={selected || undefined}\n      data-hovered={controller.hoveredNode === node.value || undefined}\n      data-level={level}\n      tabIndex={rootIndex === 0 ? 0 : -1}\n      onKeyDown={handleKeyDown}\n      ref={ref}\n      onMouseOver={(event) => {\n        event.stopPropagation();\n        controller.setHoveredNode(node.value);\n      }}\n      onMouseLeave={(event) => {\n        event.stopPropagation();\n        controller.setHoveredNode(null);\n      }}\n    >\n      {typeof renderNode === 'function' ? (\n        renderNode({\n          node,\n          level,\n          selected,\n          tree: controller,\n          expanded: controller.expandedState[node.value] || false,\n          hasChildren: Array.isArray(node.children) && node.children.length > 0,\n          elementProps,\n        })\n      ) : (\n        <div {...elementProps}>{node.label}</div>\n      )}\n\n      {controller.expandedState[node.value] && nested.length > 0 && (\n        <ul role=\"group\" {...getStyles('subtree')} data-level={level}>\n          {nested}\n        </ul>\n      )}\n    </li>\n  );\n}\n\nTreeNode.displayName = '@mantine/core/TreeNode';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}