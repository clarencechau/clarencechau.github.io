{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionKey\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"slots\", \"slotProps\", \"value\"],\n  _excluded2 = [\"ref\"],\n  _excluded3 = [\"key\"],\n  _excluded4 = [\"key\"];\nvar _$concat, _$concat2, _$concat3, _styled;\nvar _ClearIcon, _ArrowDropDownIcon;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport useAutocomplete, { createFilterOptions } from \"../useAutocomplete/index.js\";\nimport Popper from \"../Popper/index.js\";\nimport ListSubheader from \"../ListSubheader/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport IconButton from \"../IconButton/index.js\";\nimport Chip from \"../Chip/index.js\";\nimport inputClasses from \"../Input/inputClasses.js\";\nimport inputBaseClasses from \"../InputBase/inputBaseClasses.js\";\nimport outlinedInputClasses from \"../OutlinedInput/outlinedInputClasses.js\";\nimport filledInputClasses from \"../FilledInput/filledInputClasses.js\";\nimport ClearIcon from \"../internal/svg-icons/Close.js\";\nimport ArrowDropDownIcon from \"../internal/svg-icons/ArrowDropDown.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport autocompleteClasses, { getAutocompleteUtilityClass } from \"./autocompleteClasses.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n    disablePortal = ownerState.disablePortal,\n    expanded = ownerState.expanded,\n    focused = ownerState.focused,\n    fullWidth = ownerState.fullWidth,\n    hasClearIcon = ownerState.hasClearIcon,\n    hasPopupIcon = ownerState.hasPopupIcon,\n    inputFocused = ownerState.inputFocused,\n    popupOpen = ownerState.popupOpen,\n    size = ownerState.size;\n  var slots = {\n    root: ['root', expanded && 'expanded', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', \"tagSize\".concat(capitalize(size))],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nvar AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    var fullWidth = ownerState.fullWidth,\n      hasClearIcon = ownerState.hasClearIcon,\n      hasPopupIcon = ownerState.hasPopupIcon,\n      inputFocused = ownerState.inputFocused,\n      size = ownerState.size;\n    return [_defineProperty({}, \"& .\".concat(autocompleteClasses.tag), styles.tag), _defineProperty({}, \"& .\".concat(autocompleteClasses.tag), styles[\"tagSize\".concat(capitalize(size))]), _defineProperty({}, \"& .\".concat(autocompleteClasses.inputRoot), styles.inputRoot), _defineProperty({}, \"& .\".concat(autocompleteClasses.input), styles.input), _defineProperty({}, \"& .\".concat(autocompleteClasses.input), inputFocused && styles.inputFocused), styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})((_styled = {}, _defineProperty(_styled, \"&.\".concat(autocompleteClasses.focused, \" .\").concat(autocompleteClasses.clearIndicator), {\n  visibility: 'visible'\n}), _defineProperty(_styled, '@media (pointer: fine)', _defineProperty({}, \"&:hover .\".concat(autocompleteClasses.clearIndicator), {\n  visibility: 'visible'\n})), _defineProperty(_styled, \"& .\".concat(autocompleteClasses.tag), {\n  margin: 3,\n  maxWidth: 'calc(100% - 6px)'\n}), _defineProperty(_styled, \"& .\".concat(autocompleteClasses.inputRoot), (_$concat = {}, _defineProperty(_$concat, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n  paddingRight: 26 + 4\n}), _defineProperty(_$concat, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n  paddingRight: 52 + 4\n}), _defineProperty(_$concat, \"& .\".concat(autocompleteClasses.input), {\n  width: 0,\n  minWidth: 30\n}), _$concat)), _defineProperty(_styled, \"& .\".concat(inputClasses.root), {\n  paddingBottom: 1,\n  '& .MuiInput-input': {\n    padding: '4px 4px 4px 0px'\n  }\n}), _defineProperty(_styled, \"& .\".concat(inputClasses.root, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({}, \"& .\".concat(inputClasses.input), {\n  padding: '2px 4px 3px 0'\n})), _defineProperty(_styled, \"& .\".concat(outlinedInputClasses.root), (_$concat2 = {\n  padding: 9\n}, _defineProperty(_$concat2, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n  paddingRight: 26 + 4 + 9\n}), _defineProperty(_$concat2, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n  paddingRight: 52 + 4 + 9\n}), _defineProperty(_$concat2, \"& .\".concat(autocompleteClasses.input), {\n  padding: '7.5px 4px 7.5px 5px'\n}), _defineProperty(_$concat2, \"& .\".concat(autocompleteClasses.endAdornment), {\n  right: 9\n}), _$concat2)), _defineProperty(_styled, \"& .\".concat(outlinedInputClasses.root, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({\n  // Don't specify paddingRight, as it overrides the default value set when there is only\n  // one of the popup or clear icon as the specificity is equal so the latter one wins\n  paddingTop: 6,\n  paddingBottom: 6,\n  paddingLeft: 6\n}, \"& .\".concat(autocompleteClasses.input), {\n  padding: '2.5px 4px 2.5px 8px'\n})), _defineProperty(_styled, \"& .\".concat(filledInputClasses.root), (_$concat3 = {\n  paddingTop: 19,\n  paddingLeft: 8\n}, _defineProperty(_$concat3, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n  paddingRight: 26 + 4 + 9\n}), _defineProperty(_$concat3, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n  paddingRight: 52 + 4 + 9\n}), _defineProperty(_$concat3, \"& .\".concat(filledInputClasses.input), {\n  padding: '7px 4px'\n}), _defineProperty(_$concat3, \"& .\".concat(autocompleteClasses.endAdornment), {\n  right: 9\n}), _$concat3)), _defineProperty(_styled, \"& .\".concat(filledInputClasses.root, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({\n  paddingBottom: 1\n}, \"& .\".concat(filledInputClasses.input), {\n  padding: '2.5px 4px'\n})), _defineProperty(_styled, \"& .\".concat(inputBaseClasses.hiddenLabel), {\n  paddingTop: 8\n}), _defineProperty(_styled, \"& .\".concat(filledInputClasses.root, \".\").concat(inputBaseClasses.hiddenLabel), _defineProperty({\n  paddingTop: 0,\n  paddingBottom: 0\n}, \"& .\".concat(autocompleteClasses.input), {\n  paddingTop: 16,\n  paddingBottom: 17\n})), _defineProperty(_styled, \"& .\".concat(filledInputClasses.root, \".\").concat(inputBaseClasses.hiddenLabel, \".\").concat(inputBaseClasses.sizeSmall), _defineProperty({}, \"& .\".concat(autocompleteClasses.input), {\n  paddingTop: 8,\n  paddingBottom: 9\n})), _defineProperty(_styled, \"& .\".concat(autocompleteClasses.input), {\n  flexGrow: 1,\n  textOverflow: 'ellipsis',\n  opacity: 0\n}), _defineProperty(_styled, \"variants\", [{\n  props: {\n    fullWidth: true\n  },\n  style: {\n    width: '100%'\n  }\n}, {\n  props: {\n    size: 'small'\n  },\n  style: _defineProperty({}, \"& .\".concat(autocompleteClasses.tag), {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  })\n}, {\n  props: {\n    inputFocused: true\n  },\n  style: _defineProperty({}, \"& .\".concat(autocompleteClasses.input), {\n    opacity: 1\n  })\n}, {\n  props: {\n    multiple: true\n  },\n  style: _defineProperty({}, \"& .\".concat(autocompleteClasses.inputRoot), {\n    flexWrap: 'wrap'\n  })\n}]), _styled));\nvar AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.endAdornment;\n  }\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: '50%',\n  transform: 'translate(0, -50%)'\n});\nvar AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.clearIndicator;\n  }\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nvar AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: function overridesResolver(_ref6, styles) {\n    var ownerState = _ref6.ownerState;\n    return _objectSpread(_objectSpread({}, styles.popupIndicator), ownerState.popupOpen && styles.popupIndicatorOpen);\n  }\n})({\n  padding: 2,\n  marginRight: -2,\n  variants: [{\n    props: {\n      popupOpen: true\n    },\n    style: {\n      transform: 'rotate(180deg)'\n    }\n  }]\n});\nvar AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [_defineProperty({}, \"& .\".concat(autocompleteClasses.option), styles.option), styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(memoTheme(function (_ref8) {\n  var theme = _ref8.theme;\n  return {\n    zIndex: (theme.vars || theme).zIndex.modal,\n    variants: [{\n      props: {\n        disablePortal: true\n      },\n      style: {\n        position: 'absolute'\n      }\n    }]\n  };\n}));\nvar AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.paper;\n  }\n})(memoTheme(function (_ref9) {\n  var theme = _ref9.theme;\n  return _objectSpread(_objectSpread({}, theme.typography.body1), {}, {\n    overflow: 'auto'\n  });\n}));\nvar AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.loading;\n  }\n})(memoTheme(function (_ref10) {\n  var theme = _ref10.theme;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    padding: '14px 16px'\n  };\n}));\nvar AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.noOptions;\n  }\n})(memoTheme(function (_ref11) {\n  var theme = _ref11.theme;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    padding: '14px 16px'\n  };\n}));\nvar AutocompleteListbox = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.listbox;\n  }\n})(memoTheme(function (_ref12) {\n  var _ariaSelectedTru, _$concat4;\n  var theme = _ref12.theme;\n  return _defineProperty({\n    listStyle: 'none',\n    margin: 0,\n    padding: '8px 0',\n    maxHeight: '40vh',\n    overflow: 'auto',\n    position: 'relative'\n  }, \"& .\".concat(autocompleteClasses.option), (_$concat4 = {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16\n  }, _defineProperty(_$concat4, theme.breakpoints.up('sm'), {\n    minHeight: 'auto'\n  }), _defineProperty(_$concat4, \"&.\".concat(autocompleteClasses.focused), {\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }), _defineProperty(_$concat4, '&[aria-disabled=\"true\"]', {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity,\n    pointerEvents: 'none'\n  }), _defineProperty(_$concat4, \"&.\".concat(autocompleteClasses.focusVisible), {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  }), _defineProperty(_$concat4, '&[aria-selected=\"true\"]', (_ariaSelectedTru = {\n    backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / \").concat(theme.vars.palette.action.selectedOpacity, \")\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n  }, _defineProperty(_ariaSelectedTru, \"&.\".concat(autocompleteClasses.focused), {\n    backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / calc(\").concat(theme.vars.palette.action.selectedOpacity, \" + \").concat(theme.vars.palette.action.hoverOpacity, \"))\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: (theme.vars || theme).palette.action.selected\n    }\n  }), _defineProperty(_ariaSelectedTru, \"&.\".concat(autocompleteClasses.focusVisible), {\n    backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / calc(\").concat(theme.vars.palette.action.selectedOpacity, \" + \").concat(theme.vars.palette.action.focusOpacity, \"))\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  }), _ariaSelectedTru)), _$concat4));\n}));\nvar AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.groupLabel;\n  }\n})(memoTheme(function (_ref14) {\n  var theme = _ref14.theme;\n  return {\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    top: -8\n  };\n}));\nvar AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.groupUl;\n  }\n})(_defineProperty({\n  padding: 0\n}, \"& .\".concat(autocompleteClasses.option), {\n  paddingLeft: 24\n}));\nexport { createFilterOptions };\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n    autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n    _props$autoHighlight = props.autoHighlight,\n    autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n    _props$autoSelect = props.autoSelect,\n    autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n    _props$blurOnSelect = props.blurOnSelect,\n    blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n    ChipPropsProp = props.ChipProps,\n    className = props.className,\n    _props$clearIcon = props.clearIcon,\n    clearIcon = _props$clearIcon === void 0 ? _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })) : _props$clearIcon,\n    _props$clearOnBlur = props.clearOnBlur,\n    clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n    _props$clearOnEscape = props.clearOnEscape,\n    clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n    _props$clearText = props.clearText,\n    clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n    _props$closeText = props.closeText,\n    closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n    componentsProps = props.componentsProps,\n    _props$defaultValue = props.defaultValue,\n    defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n    _props$disableClearab = props.disableClearable,\n    disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n    _props$disableCloseOn = props.disableCloseOnSelect,\n    disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    _props$disabledItemsF = props.disabledItemsFocusable,\n    disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n    _props$disableListWra = props.disableListWrap,\n    disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n    _props$disablePortal = props.disablePortal,\n    disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n    filterOptions = props.filterOptions,\n    _props$filterSelected = props.filterSelectedOptions,\n    filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n    _props$forcePopupIcon = props.forcePopupIcon,\n    forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n    _props$freeSolo = props.freeSolo,\n    freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n    _props$fullWidth = props.fullWidth,\n    fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n    _props$getLimitTagsTe = props.getLimitTagsText,\n    getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n      return \"+\".concat(more);\n    } : _props$getLimitTagsTe,\n    getOptionDisabled = props.getOptionDisabled,\n    getOptionKey = props.getOptionKey,\n    getOptionLabelProp = props.getOptionLabel,\n    isOptionEqualToValue = props.isOptionEqualToValue,\n    groupBy = props.groupBy,\n    _props$handleHomeEndK = props.handleHomeEndKeys,\n    handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n    idProp = props.id,\n    _props$includeInputIn = props.includeInputInList,\n    includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n    inputValueProp = props.inputValue,\n    _props$limitTags = props.limitTags,\n    limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n    ListboxComponentProp = props.ListboxComponent,\n    ListboxPropsProp = props.ListboxProps,\n    _props$loading = props.loading,\n    loading = _props$loading === void 0 ? false : _props$loading,\n    _props$loadingText = props.loadingText,\n    loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n    _props$multiple = props.multiple,\n    multiple = _props$multiple === void 0 ? false : _props$multiple,\n    _props$noOptionsText = props.noOptionsText,\n    noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n    onChange = props.onChange,\n    onClose = props.onClose,\n    onHighlightChange = props.onHighlightChange,\n    onInputChange = props.onInputChange,\n    onOpen = props.onOpen,\n    open = props.open,\n    _props$openOnFocus = props.openOnFocus,\n    openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n    _props$openText = props.openText,\n    openText = _props$openText === void 0 ? 'Open' : _props$openText,\n    options = props.options,\n    PaperComponentProp = props.PaperComponent,\n    PopperComponentProp = props.PopperComponent,\n    _props$popupIcon = props.popupIcon,\n    popupIcon = _props$popupIcon === void 0 ? _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})) : _props$popupIcon,\n    _props$readOnly = props.readOnly,\n    readOnly = _props$readOnly === void 0 ? false : _props$readOnly,\n    renderGroupProp = props.renderGroup,\n    renderInput = props.renderInput,\n    renderOptionProp = props.renderOption,\n    renderTags = props.renderTags,\n    _props$selectOnFocus = props.selectOnFocus,\n    selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 'medium' : _props$size,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    valueProp = props.value,\n    other = _objectWithoutProperties(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  var _useAutocomplete = useAutocomplete(_objectSpread(_objectSpread({}, props), {}, {\n      componentName: 'Autocomplete'\n    })),\n    getRootProps = _useAutocomplete.getRootProps,\n    getInputProps = _useAutocomplete.getInputProps,\n    getInputLabelProps = _useAutocomplete.getInputLabelProps,\n    getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n    getClearProps = _useAutocomplete.getClearProps,\n    getTagProps = _useAutocomplete.getTagProps,\n    getListboxProps = _useAutocomplete.getListboxProps,\n    getOptionProps = _useAutocomplete.getOptionProps,\n    value = _useAutocomplete.value,\n    dirty = _useAutocomplete.dirty,\n    expanded = _useAutocomplete.expanded,\n    id = _useAutocomplete.id,\n    popupOpen = _useAutocomplete.popupOpen,\n    focused = _useAutocomplete.focused,\n    focusedTag = _useAutocomplete.focusedTag,\n    anchorEl = _useAutocomplete.anchorEl,\n    setAnchorEl = _useAutocomplete.setAnchorEl,\n    inputValue = _useAutocomplete.inputValue,\n    groupedOptions = _useAutocomplete.groupedOptions;\n  var hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  var _getInputProps = getInputProps(),\n    handleInputMouseDown = _getInputProps.onMouseDown;\n  var _getListboxProps = getListboxProps(),\n    listboxRef = _getListboxProps.ref,\n    otherListboxProps = _objectWithoutProperties(_getListboxProps, _excluded2);\n  var defaultGetOptionLabel = function defaultGetOptionLabel(option) {\n    var _option$label;\n    return (_option$label = option.label) !== null && _option$label !== void 0 ? _option$label : option;\n  };\n  var getOptionLabel = getOptionLabelProp || defaultGetOptionLabel;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  var ownerState = _objectSpread(_objectSpread({}, props), {}, {\n    disablePortal: disablePortal,\n    expanded: expanded,\n    focused: focused,\n    fullWidth: fullWidth,\n    getOptionLabel: getOptionLabel,\n    hasClearIcon: hasClearIcon,\n    hasPopupIcon: hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen: popupOpen,\n    size: size\n  });\n  var classes = useUtilityClasses(ownerState);\n  var externalForwardedProps = {\n    slots: _objectSpread({\n      paper: PaperComponentProp,\n      popper: PopperComponentProp\n    }, slots),\n    slotProps: _objectSpread(_objectSpread({\n      chip: ChipPropsProp,\n      listbox: ListboxPropsProp\n    }, componentsProps), slotProps)\n  };\n  var _useSlot = useSlot('listbox', {\n      elementType: AutocompleteListbox,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState,\n      className: classes.listbox,\n      additionalProps: otherListboxProps,\n      ref: listboxRef\n    }),\n    _useSlot2 = _slicedToArray(_useSlot, 2),\n    ListboxSlot = _useSlot2[0],\n    listboxProps = _useSlot2[1];\n  var _useSlot3 = useSlot('paper', {\n      elementType: Paper,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState,\n      className: classes.paper\n    }),\n    _useSlot4 = _slicedToArray(_useSlot3, 2),\n    PaperSlot = _useSlot4[0],\n    paperProps = _useSlot4[1];\n  var _useSlot5 = useSlot('popper', {\n      elementType: Popper,\n      externalForwardedProps: externalForwardedProps,\n      ownerState: ownerState,\n      className: classes.popper,\n      additionalProps: {\n        disablePortal: disablePortal,\n        style: {\n          width: anchorEl ? anchorEl.clientWidth : null\n        },\n        role: 'presentation',\n        anchorEl: anchorEl,\n        open: popupOpen\n      }\n    }),\n    _useSlot6 = _slicedToArray(_useSlot5, 2),\n    PopperSlot = _useSlot6[0],\n    popperProps = _useSlot6[1];\n  var startAdornment;\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _objectSpread({\n        className: classes.tag,\n        disabled: disabled\n      }, getTagProps(params));\n    };\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        var _getCustomizedTagProp = getCustomizedTagProps({\n            index: index\n          }),\n          key = _getCustomizedTagProp.key,\n          customTagProps = _objectWithoutProperties(_getCustomizedTagProp, _excluded3);\n        return /*#__PURE__*/_jsx(Chip, _objectSpread(_objectSpread({\n          label: getOptionLabel(option),\n          size: size\n        }, customTagProps), externalForwardedProps.slotProps.chip), key);\n      });\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/_jsxs(\"li\", {\n      children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n        className: classes.groupLabel,\n        ownerState: ownerState,\n        component: \"div\",\n        children: params.group\n      }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n        className: classes.groupUl,\n        ownerState: ownerState,\n        children: params.children\n      })]\n    }, params.key);\n  };\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n  var defaultRenderOption = function defaultRenderOption(props2, option) {\n    // Need to clearly apply key because of https://github.com/vercel/next.js/issues/55642\n    var key = props2.key,\n      otherProps = _objectWithoutProperties(props2, _excluded4);\n    return /*#__PURE__*/_jsx(\"li\", _objectSpread(_objectSpread({}, otherProps), {}, {\n      children: getOptionLabel(option)\n    }), key);\n  };\n  var renderOption = renderOptionProp || defaultRenderOption;\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return renderOption(_objectSpread(_objectSpread({}, optionProps), {}, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      index: index,\n      inputValue: inputValue\n    }, ownerState);\n  };\n  var clearIndicatorSlotProps = externalForwardedProps.slotProps.clearIndicator;\n  var popupIndicatorSlotProps = externalForwardedProps.slotProps.popupIndicator;\n  var renderAutocompletePopperChildren = function renderAutocompletePopperChildren(children) {\n    return /*#__PURE__*/_jsx(AutocompletePopper, _objectSpread(_objectSpread({\n      as: PopperSlot\n    }, popperProps), {}, {\n      children: /*#__PURE__*/_jsx(AutocompletePaper, _objectSpread(_objectSpread({\n        as: PaperSlot\n      }, paperProps), {}, {\n        children: children\n      }))\n    }));\n  };\n  var autocompletePopper = null;\n  if (groupedOptions.length > 0) {\n    autocompletePopper = renderAutocompletePopperChildren( /*#__PURE__*/\n    // TODO v7: remove `as` prop and move ListboxComponentProp to externalForwardedProps or remove ListboxComponentProp entirely\n    // https://github.com/mui/material-ui/pull/43994#issuecomment-2401945800\n    _jsx(ListboxSlot, _objectSpread(_objectSpread({\n      as: ListboxComponentProp\n    }, listboxProps), {}, {\n      children: groupedOptions.map(function (option, index) {\n        if (groupBy) {\n          return renderGroup({\n            key: option.key,\n            group: option.group,\n            children: option.options.map(function (option2, index2) {\n              return renderListOption(option2, option.index + index2);\n            })\n          });\n        }\n        return renderListOption(option, index);\n      })\n    })));\n  } else if (loading && groupedOptions.length === 0) {\n    autocompletePopper = renderAutocompletePopperChildren( /*#__PURE__*/_jsx(AutocompleteLoading, {\n      className: classes.loading,\n      ownerState: ownerState,\n      children: loadingText\n    }));\n  } else if (groupedOptions.length === 0 && !freeSolo && !loading) {\n    autocompletePopper = renderAutocompletePopperChildren( /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n      className: classes.noOptions,\n      ownerState: ownerState,\n      role: \"presentation\",\n      onMouseDown: function onMouseDown(event) {\n        // Prevent input blur when interacting with the \"no options\" content\n        event.preventDefault();\n      },\n      children: noOptionsText\n    }));\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _objectSpread(_objectSpread({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other)), {}, {\n      children: renderInput({\n        id: id,\n        disabled: disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _objectSpread({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment: startAdornment,\n          onMouseDown: function onMouseDown(event) {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          }\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _objectSpread(_objectSpread(_objectSpread({}, getClearProps()), {}, {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps), {}, {\n              className: clsx(classes.clearIndicator, clearIndicatorSlotProps === null || clearIndicatorSlotProps === void 0 ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _objectSpread(_objectSpread(_objectSpread({}, getPopupIndicatorProps()), {}, {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps), {}, {\n              className: clsx(classes.popupIndicator, popupIndicatorSlotProps === null || popupIndicatorSlotProps === void 0 ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _objectSpread({\n          className: classes.input,\n          disabled: disabled,\n          readOnly: readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? autocompletePopper : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the portion of the selected suggestion that the user hasn't typed,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   *\n   * When using the `freeSolo` mode, the typed value will be the input value\n   * if the Autocomplete loses focus without highlighting an option.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n  /**\n   * Props applied to the [`Chip`](https://mui.com/material-ui/api/chip/) element.\n   * @deprecated Use `slotProps.chip` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  ChipProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set it to `true` if you want to help the user enter a new value.\n   * Set it to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, function (props) {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', \"However, \".concat(props.defaultValue, \" was provided.\")].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {Value[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {Value[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {Value} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the key for a given option.\n   * This can be useful when the labels of options are not unique (since labels are used as keys by default).\n   *\n   * @param {Value} option The option to get the key for.\n   * @returns {string | number}\n   */\n  getOptionKey: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {Value} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {Value} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {Value} option The option to test.\n   * @param {Value} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   * @deprecated Use `slotProps.listbox.component` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * Props applied to the Listbox element.\n   * @deprecated Use `slotProps.listbox` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  ListboxProps: PropTypes.object,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, for example `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value|Value[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`, `\"blur\"`, `\"selectOption\"`, `\"removeOption\"`\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * A list of options that will be shown in the Autocomplete.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   * @deprecated Use `slots.paper` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   * @deprecated Use `slots.popper` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {Value} option The option to render.\n   * @param {object} state The state of each option.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {Value[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    chip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    clearIndicator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    listbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    popper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    popupIndicator: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    listbox: PropTypes.elementType,\n    paper: PropTypes.elementType,\n    popper: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, function (props) {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', \"However, \".concat(props.value, \" was provided.\")].join('\\n'));\n    }\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","map":{"version":3,"names":["_slicedToArray","_objectWithoutProperties","_objectSpread","_defineProperty","_excluded","_excluded2","_excluded3","_excluded4","_$concat","_$concat2","_$concat3","_styled","_ClearIcon","_ArrowDropDownIcon","React","PropTypes","clsx","integerPropType","chainPropTypes","composeClasses","alpha","useAutocomplete","createFilterOptions","Popper","ListSubheader","Paper","IconButton","Chip","inputClasses","inputBaseClasses","outlinedInputClasses","filledInputClasses","ClearIcon","ArrowDropDownIcon","styled","memoTheme","useDefaultProps","autocompleteClasses","getAutocompleteUtilityClass","capitalize","useSlot","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","disablePortal","expanded","focused","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","popupOpen","size","slots","root","inputRoot","input","tag","concat","endAdornment","clearIndicator","popupIndicator","popper","paper","listbox","loading","noOptions","option","groupLabel","groupUl","AutocompleteRoot","name","slot","overridesResolver","props","styles","visibility","margin","maxWidth","paddingRight","width","minWidth","paddingBottom","padding","sizeSmall","right","paddingTop","paddingLeft","hiddenLabel","flexGrow","textOverflow","opacity","style","multiple","flexWrap","AutocompleteEndAdornment","position","top","transform","AutocompleteClearIndicator","marginRight","AutocompletePopupIndicator","_ref6","popupIndicatorOpen","variants","AutocompletePopper","popperDisablePortal","_ref8","theme","zIndex","vars","modal","AutocompletePaper","_ref9","typography","body1","overflow","AutocompleteLoading","_ref10","color","palette","text","secondary","AutocompleteNoOptions","_ref11","AutocompleteListbox","_ref12","_ariaSelectedTru","_$concat4","listStyle","maxHeight","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","breakpoints","up","backgroundColor","action","hover","disabledOpacity","pointerEvents","focusVisible","focus","primary","mainChannel","selectedOpacity","main","hoverOpacity","selected","focusOpacity","AutocompleteGroupLabel","_ref14","background","AutocompleteGroupUl","Autocomplete","forwardRef","inProps","ref","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","ChipPropsProp","ChipProps","className","_props$clearIcon","clearIcon","fontSize","_props$clearOnBlur","clearOnBlur","freeSolo","_props$clearOnEscape","clearOnEscape","_props$clearText","clearText","_props$closeText","closeText","componentsProps","_props$defaultValue","defaultValue","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disabled","disabled","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$disablePortal","filterOptions","_props$filterSelected","filterSelectedOptions","_props$forcePopupIcon","forcePopupIcon","_props$freeSolo","_props$fullWidth","_props$getLimitTagsTe","getLimitTagsText","more","getOptionDisabled","getOptionKey","getOptionLabelProp","getOptionLabel","isOptionEqualToValue","groupBy","_props$handleHomeEndK","handleHomeEndKeys","idProp","id","_props$includeInputIn","includeInputInList","inputValueProp","inputValue","_props$limitTags","limitTags","ListboxComponentProp","ListboxComponent","ListboxPropsProp","ListboxProps","_props$loading","_props$loadingText","loadingText","_props$multiple","_props$noOptionsText","noOptionsText","onChange","onClose","onHighlightChange","onInputChange","onOpen","open","_props$openOnFocus","openOnFocus","_props$openText","openText","options","PaperComponentProp","PaperComponent","PopperComponentProp","PopperComponent","_props$popupIcon","popupIcon","_props$readOnly","readOnly","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_props$selectOnFocus","selectOnFocus","_props$size","_props$slots","_props$slotProps","slotProps","valueProp","value","other","_useAutocomplete","componentName","getRootProps","getInputProps","getInputLabelProps","getPopupIndicatorProps","getClearProps","getTagProps","getListboxProps","getOptionProps","dirty","focusedTag","anchorEl","setAnchorEl","groupedOptions","_getInputProps","handleInputMouseDown","onMouseDown","_getListboxProps","listboxRef","otherListboxProps","defaultGetOptionLabel","_option$label","label","externalForwardedProps","chip","_useSlot","elementType","additionalProps","_useSlot2","ListboxSlot","listboxProps","_useSlot3","_useSlot4","PaperSlot","paperProps","_useSlot5","clientWidth","role","_useSlot6","PopperSlot","popperProps","startAdornment","length","getCustomizedTagProps","params","map","index","_getCustomizedTagProp","key","customTagProps","Array","isArray","splice","push","children","defaultRenderGroup","component","group","defaultRenderOption","props2","otherProps","renderListOption","optionProps","clearIndicatorSlotProps","popupIndicatorSlotProps","renderAutocompletePopperChildren","as","autocompletePopper","option2","index2","event","preventDefault","Fragment","undefined","InputLabelProps","InputProps","target","currentTarget","title","inputProps","process","env","NODE_ENV","propTypes","bool","oneOfType","oneOf","object","string","node","shape","any","Error","join","func","onKeyDown","array","isRequired","sx","arrayOf"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mui/material/Autocomplete/Autocomplete.js"],"sourcesContent":["'use client';\n\nvar _ClearIcon, _ArrowDropDownIcon;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport useAutocomplete, { createFilterOptions } from \"../useAutocomplete/index.js\";\nimport Popper from \"../Popper/index.js\";\nimport ListSubheader from \"../ListSubheader/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport IconButton from \"../IconButton/index.js\";\nimport Chip from \"../Chip/index.js\";\nimport inputClasses from \"../Input/inputClasses.js\";\nimport inputBaseClasses from \"../InputBase/inputBaseClasses.js\";\nimport outlinedInputClasses from \"../OutlinedInput/outlinedInputClasses.js\";\nimport filledInputClasses from \"../FilledInput/filledInputClasses.js\";\nimport ClearIcon from \"../internal/svg-icons/Close.js\";\nimport ArrowDropDownIcon from \"../internal/svg-icons/ArrowDropDown.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport autocompleteClasses, { getAutocompleteUtilityClass } from \"./autocompleteClasses.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  },\n  [`& .${autocompleteClasses.tag}`]: {\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  },\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 5px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 8px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 16,\n      paddingBottom: 17\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 8,\n      paddingBottom: 9\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: {\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  },\n  variants: [{\n    props: {\n      fullWidth: true\n    },\n    style: {\n      width: '100%'\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      [`& .${autocompleteClasses.tag}`]: {\n        margin: 2,\n        maxWidth: 'calc(100% - 4px)'\n      }\n    }\n  }, {\n    props: {\n      inputFocused: true\n    },\n    style: {\n      [`& .${autocompleteClasses.input}`]: {\n        opacity: 1\n      }\n    }\n  }, {\n    props: {\n      multiple: true\n    },\n    style: {\n      [`& .${autocompleteClasses.inputRoot}`]: {\n        flexWrap: 'wrap'\n      }\n    }\n  }]\n});\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: '50%',\n  transform: 'translate(0, -50%)'\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => ({\n    ...styles.popupIndicator,\n    ...(ownerState.popupOpen && styles.popupIndicatorOpen)\n  })\n})({\n  padding: 2,\n  marginRight: -2,\n  variants: [{\n    props: {\n      popupOpen: true\n    },\n    style: {\n      transform: 'rotate(180deg)'\n    }\n  }]\n});\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  zIndex: (theme.vars || theme).zIndex.modal,\n  variants: [{\n    props: {\n      disablePortal: true\n    },\n    style: {\n      position: 'absolute'\n    }\n  }]\n})));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body1,\n  overflow: 'auto'\n})));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n})));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n})));\nconst AutocompleteListbox = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(memoTheme(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  position: 'relative',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n})));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(memoTheme(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n})));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps: ChipPropsProp,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps,\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterOptions,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionDisabled,\n    getOptionKey,\n    getOptionLabel: getOptionLabelProp,\n    isOptionEqualToValue,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    limitTags = -1,\n    ListboxComponent: ListboxComponentProp,\n    ListboxProps: ListboxPropsProp,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open,\n    openOnFocus = false,\n    openText = 'Open',\n    options,\n    PaperComponent: PaperComponentProp,\n    PopperComponent: PopperComponentProp,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    readOnly = false,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium',\n    slots = {},\n    slotProps = {},\n    value: valueProp,\n    ...other\n  } = props;\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    expanded,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete({\n    ...props,\n    componentName: 'Autocomplete'\n  });\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  const {\n    onMouseDown: handleInputMouseDown\n  } = getInputProps();\n  const {\n    ref: listboxRef,\n    ...otherListboxProps\n  } = getListboxProps();\n  const defaultGetOptionLabel = option => option.label ?? option;\n  const getOptionLabel = getOptionLabelProp || defaultGetOptionLabel;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = {\n    ...props,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    getOptionLabel,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots: {\n      paper: PaperComponentProp,\n      popper: PopperComponentProp,\n      ...slots\n    },\n    slotProps: {\n      chip: ChipPropsProp,\n      listbox: ListboxPropsProp,\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [ListboxSlot, listboxProps] = useSlot('listbox', {\n    elementType: AutocompleteListbox,\n    externalForwardedProps,\n    ownerState,\n    className: classes.listbox,\n    additionalProps: otherListboxProps,\n    ref: listboxRef\n  });\n  const [PaperSlot, paperProps] = useSlot('paper', {\n    elementType: Paper,\n    externalForwardedProps,\n    ownerState,\n    className: classes.paper\n  });\n  const [PopperSlot, popperProps] = useSlot('popper', {\n    elementType: Popper,\n    externalForwardedProps,\n    ownerState,\n    className: classes.popper,\n    additionalProps: {\n      disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      role: 'presentation',\n      anchorEl,\n      open: popupOpen\n    }\n  });\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => ({\n      className: classes.tag,\n      disabled,\n      ...getTagProps(params)\n    });\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => {\n        const {\n          key,\n          ...customTagProps\n        } = getCustomizedTagProps({\n          index\n        });\n        return /*#__PURE__*/_jsx(Chip, {\n          label: getOptionLabel(option),\n          size: size,\n          ...customTagProps,\n          ...externalForwardedProps.slotProps.chip\n        }, key);\n      });\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push(/*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => {\n    // Need to clearly apply key because of https://github.com/vercel/next.js/issues/55642\n    const {\n      key,\n      ...otherProps\n    } = props2;\n    return /*#__PURE__*/_jsx(\"li\", {\n      ...otherProps,\n      children: getOptionLabel(option)\n    }, key);\n  };\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption({\n      ...optionProps,\n      className: classes.option\n    }, option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    }, ownerState);\n  };\n  const clearIndicatorSlotProps = externalForwardedProps.slotProps.clearIndicator;\n  const popupIndicatorSlotProps = externalForwardedProps.slotProps.popupIndicator;\n  const renderAutocompletePopperChildren = children => /*#__PURE__*/_jsx(AutocompletePopper, {\n    as: PopperSlot,\n    ...popperProps,\n    children: /*#__PURE__*/_jsx(AutocompletePaper, {\n      as: PaperSlot,\n      ...paperProps,\n      children: children\n    })\n  });\n  let autocompletePopper = null;\n  if (groupedOptions.length > 0) {\n    autocompletePopper = renderAutocompletePopperChildren(\n    /*#__PURE__*/\n    // TODO v7: remove `as` prop and move ListboxComponentProp to externalForwardedProps or remove ListboxComponentProp entirely\n    // https://github.com/mui/material-ui/pull/43994#issuecomment-2401945800\n    _jsx(ListboxSlot, {\n      as: ListboxComponentProp,\n      ...listboxProps,\n      children: groupedOptions.map((option, index) => {\n        if (groupBy) {\n          return renderGroup({\n            key: option.key,\n            group: option.group,\n            children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n          });\n        }\n        return renderListOption(option, index);\n      })\n    }));\n  } else if (loading && groupedOptions.length === 0) {\n    autocompletePopper = renderAutocompletePopperChildren(/*#__PURE__*/_jsx(AutocompleteLoading, {\n      className: classes.loading,\n      ownerState: ownerState,\n      children: loadingText\n    }));\n  } else if (groupedOptions.length === 0 && !freeSolo && !loading) {\n    autocompletePopper = renderAutocompletePopperChildren(/*#__PURE__*/_jsx(AutocompleteNoOptions, {\n      className: classes.noOptions,\n      ownerState: ownerState,\n      role: \"presentation\",\n      onMouseDown: event => {\n        // Prevent input blur when interacting with the \"no options\" content\n        event.preventDefault();\n      },\n      children: noOptionsText\n    }));\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, {\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState,\n      ...getRootProps(other),\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          onMouseDown: event => {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          },\n          ...((hasClearIcon || hasPopupIcon) && {\n            endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n              className: classes.endAdornment,\n              ownerState: ownerState,\n              children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, {\n                ...getClearProps(),\n                \"aria-label\": clearText,\n                title: clearText,\n                ownerState: ownerState,\n                ...clearIndicatorSlotProps,\n                className: clsx(classes.clearIndicator, clearIndicatorSlotProps?.className),\n                children: clearIcon\n              }) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, {\n                ...getPopupIndicatorProps(),\n                disabled: disabled,\n                \"aria-label\": popupOpen ? closeText : openText,\n                title: popupOpen ? closeText : openText,\n                ownerState: ownerState,\n                ...popupIndicatorSlotProps,\n                className: clsx(classes.popupIndicator, popupIndicatorSlotProps?.className),\n                children: popupIcon\n              }) : null]\n            })\n          })\n        },\n        inputProps: {\n          className: classes.input,\n          disabled,\n          readOnly,\n          ...getInputProps()\n        }\n      })\n    }), anchorEl ? autocompletePopper : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the portion of the selected suggestion that the user hasn't typed,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   *\n   * When using the `freeSolo` mode, the typed value will be the input value\n   * if the Autocomplete loses focus without highlighting an option.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n  /**\n   * Props applied to the [`Chip`](https://mui.com/material-ui/api/chip/) element.\n   * @deprecated Use `slotProps.chip` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  ChipProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set it to `true` if you want to help the user enter a new value.\n   * Set it to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {Value[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {Value[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {Value} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the key for a given option.\n   * This can be useful when the labels of options are not unique (since labels are used as keys by default).\n   *\n   * @param {Value} option The option to get the key for.\n   * @returns {string | number}\n   */\n  getOptionKey: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {Value} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {Value} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {Value} option The option to test.\n   * @param {Value} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   * @deprecated Use `slotProps.listbox.component` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * Props applied to the Listbox element.\n   * @deprecated Use `slotProps.listbox` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  ListboxProps: PropTypes.object,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, for example `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value|Value[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`, `\"blur\"`, `\"selectOption\"`, `\"removeOption\"`\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * A list of options that will be shown in the Autocomplete.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   * @deprecated Use `slots.paper` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   * @deprecated Use `slots.popper` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {Value} option The option to render.\n   * @param {object} state The state of each option.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {Value[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    chip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    clearIndicator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    listbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    popper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    popupIndicator: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    listbox: PropTypes.elementType,\n    paper: PropTypes.elementType,\n    popper: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;"],"mappings":"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AC;EACF;AACF;AACA;AACA;EACE9K,gBAAgB,EAAEnL,SAAS,CAACwV,IAAI;EAChC;AACF;AACA;AACA;EACEnK,oBAAoB,EAAErL,SAAS,CAACwV,IAAI;EACpC;AACF;AACA;AACA;EACEjK,QAAQ,EAAEvL,SAAS,CAACwV,IAAI;EACxB;AACF;AACA;AACA;EACE/J,sBAAsB,EAAEzL,SAAS,CAACwV,IAAI;EACtC;AACF;AACA;AACA;EACE7J,eAAe,EAAE3L,SAAS,CAACwV,IAAI;EAC/B;AACF;AACA;AACA;EACEvT,aAAa,EAAEjC,SAAS,CAACwV,IAAI;EAC7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE3J,aAAa,EAAE7L,SAAS,CAACkW,IAAI;EAC7B;AACF;AACA;AACA;EACEnK,qBAAqB,EAAE/L,SAAS,CAACwV,IAAI;EACrC;AACF;AACA;AACA;EACEvJ,cAAc,EAAEjM,SAAS,CAACyV,SAAS,CAAC,CAACzV,SAAS,CAAC0V,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE1V,SAAS,CAACwV,IAAI,CAAC,CAAC;EAChF;AACF;AACA;AACA;EACEhL,QAAQ,EAAExK,SAAS,CAACwV,IAAI;EACxB;AACF;AACA;AACA;EACEpT,SAAS,EAAEpC,SAAS,CAACwV,IAAI;EACzB;AACF;AACA;AACA;AACA;AACA;AACA;EACEnJ,gBAAgB,EAAErM,SAAS,CAACkW,IAAI;EAChC;AACF;AACA;AACA;AACA;AACA;EACE3J,iBAAiB,EAAEvM,SAAS,CAACkW,IAAI;EACjC;AACF;AACA;AACA;AACA;AACA;AACA;EACE1J,YAAY,EAAExM,SAAS,CAACkW,IAAI;EAC5B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACExJ,cAAc,EAAE1M,SAAS,CAACkW,IAAI;EAC9B;AACF;AACA;AACA;AACA;AACA;AACA;EACEtJ,OAAO,EAAE5M,SAAS,CAACkW,IAAI;EACvB;AACF;AACA;AACA;AACA;EACEpJ,iBAAiB,EAAE9M,SAAS,CAACwV,IAAI;EACjC;AACF;AACA;AACA;EACExI,EAAE,EAAEhN,SAAS,CAAC4V,MAAM;EACpB;AACF;AACA;AACA;EACE1I,kBAAkB,EAAElN,SAAS,CAACwV,IAAI;EAClC;AACF;AACA;EACEpI,UAAU,EAAEpN,SAAS,CAAC4V,MAAM;EAC5B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEjJ,oBAAoB,EAAE3M,SAAS,CAACkW,IAAI;EACpC;AACF;AACA;AACA;AACA;EACE5I,SAAS,EAAEpN,eAAe;EAC1B;AACF;AACA;AACA;AACA;EACEsN,gBAAgB,EAAExN,SAAS,CAAC8R,WAAW;EACvC;AACF;AACA;AACA;EACEpE,YAAY,EAAE1N,SAAS,CAAC2V,MAAM;EAC9B;AACF;AACA;AACA;AACA;EACErS,OAAO,EAAEtD,SAAS,CAACwV,IAAI;EACvB;AACF;AACA;AACA;AACA;AACA;EACE3H,WAAW,EAAE7N,SAAS,CAAC6V,IAAI;EAC3B;AACF;AACA;AACA;EACE3Q,QAAQ,EAAElF,SAAS,CAACwV,IAAI;EACxB;AACF;AACA;AACA;AACA;AACA;EACExH,aAAa,EAAEhO,SAAS,CAAC6V,IAAI;EAC7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE5H,QAAQ,EAAEjO,SAAS,CAACkW,IAAI;EACxB;AACF;AACA;AACA;AACA;AACA;AACA;EACEhI,OAAO,EAAElO,SAAS,CAACkW,IAAI;EACvB;AACF;AACA;AACA;AACA;AACA;AACA;EACE/H,iBAAiB,EAAEnO,SAAS,CAACkW,IAAI;EACjC;AACF;AACA;AACA;AACA;AACA;AACA;EACE9H,aAAa,EAAEpO,SAAS,CAACkW,IAAI;EAC7B;AACF;AACA;EACEC,SAAS,EAAEnW,SAAS,CAACkW,IAAI;EACzB;AACF;AACA;AACA;AACA;AACA;EACE7H,MAAM,EAAErO,SAAS,CAACkW,IAAI;EACtB;AACF;AACA;EACE5H,IAAI,EAAEtO,SAAS,CAACwV,IAAI;EACpB;AACF;AACA;AACA;EACEhH,WAAW,EAAExO,SAAS,CAACwV,IAAI;EAC3B;AACF;AACA;AAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}