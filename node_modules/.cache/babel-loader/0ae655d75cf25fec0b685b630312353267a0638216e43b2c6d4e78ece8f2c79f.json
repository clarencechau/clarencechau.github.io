{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nconst ScrollAreaViewport = forwardRef(({\n  children,\n  style,\n  ...others\n}, ref) => {\n  const ctx = useScrollAreaContext();\n  const rootRef = useMergedRef(ref, ctx.onViewportChange);\n  return /* @__PURE__ */jsx(Box, {\n    ...others,\n    ref: rootRef,\n    style: {\n      overflowX: ctx.scrollbarXEnabled ? \"scroll\" : \"hidden\",\n      overflowY: ctx.scrollbarYEnabled ? \"scroll\" : \"hidden\",\n      ...style\n    },\n    children: /* @__PURE__ */jsx(\"div\", {\n      style: {\n        minWidth: \"100%\",\n        display: \"table\"\n      },\n      ref: ctx.onContentChange,\n      children\n    })\n  });\n});\nScrollAreaViewport.displayName = \"@mantine/core/ScrollAreaViewport\";\nexport { ScrollAreaViewport };","map":{"version":3,"names":["ScrollAreaViewport","forwardRef","children","style","others","ref","ctx","useScrollAreaContext","rootRef","useMergedRef","onViewportChange","jsx","Box","overflowX","scrollbarXEnabled","overflowY","scrollbarYEnabled","minWidth","display","onContentChange","displayName"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/ScrollArea/ScrollAreaViewport/ScrollAreaViewport.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { Box, BoxProps, ElementProps } from '../../../core';\nimport { useScrollAreaContext } from '../ScrollArea.context';\n\nexport interface ScrollAreaViewportProps extends BoxProps, ElementProps<'div'> {}\n\nexport const ScrollAreaViewport = forwardRef<HTMLDivElement, ScrollAreaViewportProps>(\n  ({ children, style, ...others }, ref) => {\n    const ctx = useScrollAreaContext();\n    const rootRef = useMergedRef(ref, ctx.onViewportChange);\n\n    return (\n      <Box\n        {...others}\n        ref={rootRef}\n        style={{\n          overflowX: ctx.scrollbarXEnabled ? 'scroll' : 'hidden',\n          overflowY: ctx.scrollbarYEnabled ? 'scroll' : 'hidden',\n          ...style,\n        }}\n      >\n        <div style={{ minWidth: '100%', display: 'table' }} ref={ctx.onContentChange}>\n          {children}\n        </div>\n      </Box>\n    );\n  }\n);\n\nScrollAreaViewport.displayName = '@mantine/core/ScrollAreaViewport';\n"],"mappings":";;;;;;;;;;;;;;AAMY,MAACA,kBAAkB,GAAGC,UAAU,CAC1C,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAE,GAAGC;AAAM,CAAE,EAAEC,GAAG,KAAK;EACvC,MAAMC,GAAG,GAAGC,oBAAoB,CAAE;EAClC,MAAMC,OAAO,GAAGC,YAAY,CAACJ,GAAG,EAAEC,GAAG,CAACI,gBAAgB,CAAC;EACvD,sBAAuBC,GAAG,CACxBC,GAAG,EACH;IACE,GAAGR,MAAM;IACTC,GAAG,EAAEG,OAAO;IACZL,KAAK,EAAE;MACLU,SAAS,EAAEP,GAAG,CAACQ,iBAAiB,GAAG,QAAQ,GAAG,QAAQ;MACtDC,SAAS,EAAET,GAAG,CAACU,iBAAiB,GAAG,QAAQ,GAAG,QAAQ;MACtD,GAAGb;IACJ;IACDD,QAAQ,EAAkB,eAAAS,GAAG,CAAC,KAAK,EAAE;MAAER,KAAK,EAAE;QAAEc,QAAQ,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAEb,GAAG,EAAEC,GAAG,CAACa,eAAe;MAAEjB;IAAU;EAClI,CACK;AACL,CACA;AACAF,kBAAkB,CAACoB,WAAW,GAAG,kCAAkC"},"metadata":{},"sourceType":"module","externalDependencies":[]}