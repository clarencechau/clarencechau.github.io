{"ast":null,"code":"'use client';\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport _objectWithoutProperties from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport requirePropFactory from \"../utils/requirePropFactory.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useTheme from \"../styles/useTheme.js\";\nimport GridContext from \"./GridContext.js\";\nimport gridClasses, { getGridUtilityClass } from \"./gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function generateGrid(_ref) {\n  var theme = _ref.theme,\n    ownerState = _ref.ownerState;\n  var size;\n  return theme.breakpoints.keys.reduce(function (globalStyles, breakpoint) {\n    // Use side effect over immutability for better performance.\n    var styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      var columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      var columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      var width = \"\".concat(Math.round(size / columnValue * 10e7) / 10e5, \"%\");\n      var more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        var themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          var fullWidth = \"calc(\".concat(width, \" + \").concat(themeSpacing, \")\");\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = _objectSpread({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection(_ref2) {\n  var theme = _ref2.theme,\n    ownerState = _ref2.ownerState;\n  var directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme: theme\n  }, directionValues, function (propValue) {\n    var output = {\n      flexDirection: propValue\n    };\n    if (propValue.startsWith('column')) {\n      output[\"& > .\".concat(gridClasses.item)] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys(_ref3) {\n  var breakpoints = _ref3.breakpoints,\n    values = _ref3.values;\n  var nonZeroKey = '';\n  Object.keys(values).forEach(function (key) {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  var sortedBreakpointKeysByValue = Object.keys(breakpoints).sort(function (a, b) {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap(_ref4) {\n  var theme = _ref4.theme,\n    ownerState = _ref4.ownerState;\n  var container = ownerState.container,\n    rowSpacing = ownerState.rowSpacing;\n  var styles = {};\n  if (container && rowSpacing !== 0) {\n    var rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    var zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme: theme\n    }, rowSpacingValues, function (propValue, breakpoint) {\n      var _zeroValueBreakpointK;\n      var themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return _defineProperty({\n          marginTop: \"-\".concat(themeSpacing)\n        }, \"& > .\".concat(gridClasses.item), {\n          paddingTop: themeSpacing\n        });\n      }\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) !== null && _zeroValueBreakpointK !== void 0 && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n      return _defineProperty({\n        marginTop: 0\n      }, \"& > .\".concat(gridClasses.item), {\n        paddingTop: 0\n      });\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap(_ref7) {\n  var theme = _ref7.theme,\n    ownerState = _ref7.ownerState;\n  var container = ownerState.container,\n    columnSpacing = ownerState.columnSpacing;\n  var styles = {};\n  if (container && columnSpacing !== 0) {\n    var columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    var zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme: theme\n    }, columnSpacingValues, function (propValue, breakpoint) {\n      var _zeroValueBreakpointK2;\n      var themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        var negativeValue = \"-\".concat(themeSpacing);\n        return _defineProperty({\n          width: \"calc(100% + \".concat(themeSpacing, \")\"),\n          marginLeft: negativeValue\n        }, \"& > .\".concat(gridClasses.item), {\n          paddingLeft: themeSpacing\n        });\n      }\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) !== null && _zeroValueBreakpointK2 !== void 0 && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n      return _defineProperty({\n        width: '100%',\n        marginLeft: 0\n      }, \"& > .\".concat(gridClasses.item), {\n        paddingLeft: 0\n      });\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints) {\n  var styles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[\"spacing-xs-\".concat(String(spacing))]];\n  }\n  // in case of object `spacing`\n  var spacingStyles = [];\n  breakpoints.forEach(function (breakpoint) {\n    var value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[\"spacing-\".concat(breakpoint, \"-\").concat(String(value))]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nvar GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    var container = ownerState.container,\n      direction = ownerState.direction,\n      item = ownerState.item,\n      spacing = ownerState.spacing,\n      wrap = ownerState.wrap,\n      zeroMinWidth = ownerState.zeroMinWidth,\n      breakpoints = ownerState.breakpoints;\n    var spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    var breakpointsStyles = [];\n    breakpoints.forEach(function (breakpoint) {\n      var value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[\"grid-\".concat(breakpoint, \"-\").concat(String(value))]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth].concat(_toConsumableArray(spacingStyles), [direction !== 'row' && styles[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && styles[\"wrap-xs-\".concat(String(wrap))]], breakpointsStyles);\n  }\n})(\n// FIXME(romgrk): Can't use memoTheme here\nfunction (_ref10) {\n  var ownerState = _ref10.ownerState;\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    boxSizing: 'border-box'\n  }, ownerState.container && {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  }), ownerState.item && {\n    margin: 0 // For instance, it's useful when used with a `figure` element.\n  }), ownerState.zeroMinWidth && {\n    minWidth: 0\n  }), ownerState.wrap !== 'wrap' && {\n    flexWrap: ownerState.wrap\n  });\n}, generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [\"spacing-xs-\".concat(String(spacing))];\n  }\n  // in case of object `spacing`\n  var classes = [];\n  breakpoints.forEach(function (breakpoint) {\n    var value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      var className = \"spacing-\".concat(breakpoint, \"-\").concat(String(value));\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n    container = ownerState.container,\n    direction = ownerState.direction,\n    item = ownerState.item,\n    spacing = ownerState.spacing,\n    wrap = ownerState.wrap,\n    zeroMinWidth = ownerState.zeroMinWidth,\n    breakpoints = ownerState.breakpoints;\n  var spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  var breakpointsClasses = [];\n  breakpoints.forEach(function (breakpoint) {\n    var value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(\"grid-\".concat(breakpoint, \"-\").concat(String(value)));\n    }\n  });\n  var slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth'].concat(_toConsumableArray(spacingClasses), [direction !== 'row' && \"direction-xs-\".concat(String(direction)), wrap !== 'wrap' && \"wrap-xs-\".concat(String(wrap))], breakpointsClasses)\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\n/**\n * @deprecated Use the [`Grid2`](https://mui.com/material-ui/react-grid2/) component instead.\n */\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  var themeProps = useDefaultProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  var _useTheme = useTheme(),\n    breakpoints = _useTheme.breakpoints;\n  var props = extendSxProp(themeProps);\n  var className = props.className,\n    columnsProp = props.columns,\n    columnSpacingProp = props.columnSpacing,\n    _props$component = props.component,\n    component = _props$component === void 0 ? 'div' : _props$component,\n    _props$container = props.container,\n    container = _props$container === void 0 ? false : _props$container,\n    _props$direction = props.direction,\n    direction = _props$direction === void 0 ? 'row' : _props$direction,\n    _props$item = props.item,\n    item = _props$item === void 0 ? false : _props$item,\n    rowSpacingProp = props.rowSpacing,\n    _props$spacing = props.spacing,\n    spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n    _props$wrap = props.wrap,\n    wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n    _props$zeroMinWidth = props.zeroMinWidth,\n    zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n    other = _objectWithoutProperties(props, _excluded);\n  var rowSpacing = rowSpacingProp || spacing;\n  var columnSpacing = columnSpacingProp || spacing;\n  var columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  var columns = container ? columnsProp || 12 : columnsContext;\n  var breakpointsValues = {};\n  var otherFiltered = _objectSpread({}, other);\n  breakpoints.keys.forEach(function (breakpoint) {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  var ownerState = _objectSpread(_objectSpread(_objectSpread({}, props), {}, {\n    columns: columns,\n    container: container,\n    direction: direction,\n    item: item,\n    rowSpacing: rowSpacing,\n    columnSpacing: columnSpacing,\n    wrap: wrap,\n    zeroMinWidth: zeroMinWidth,\n    spacing: spacing\n  }, breakpointsValues), {}, {\n    breakpoints: breakpoints.keys\n  });\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _objectSpread({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = _objectSpread(_objectSpread({}, Grid.propTypes), {}, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\nexport default Grid;","map":{"version":3,"names":["_objectWithoutProperties","_toConsumableArray","_defineProperty","_objectSpread","_excluded","React","PropTypes","clsx","handleBreakpoints","unstable_resolveBreakpointValues","resolveBreakpointValues","extendSxProp","composeClasses","requirePropFactory","styled","useDefaultProps","useTheme","GridContext","gridClasses","getGridUtilityClass","jsx","_jsx","generateGrid","_ref","theme","ownerState","size","breakpoints","keys","reduce","globalStyles","breakpoint","styles","flexBasis","flexGrow","maxWidth","flexShrink","width","columnsBreakpointValues","values","columns","columnValue","undefined","concat","Math","round","more","container","item","columnSpacing","themeSpacing","spacing","fullWidth","Object","assign","up","generateDirection","_ref2","directionValues","direction","propValue","output","flexDirection","startsWith","extractZeroValueBreakpointKeys","_ref3","nonZeroKey","forEach","key","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","generateRowGap","_ref4","rowSpacing","rowSpacingValues","zeroValueBreakpointKeys","_zeroValueBreakpointK","marginTop","paddingTop","includes","generateColumnGap","_ref7","columnSpacingValues","_zeroValueBreakpointK2","negativeValue","marginLeft","paddingLeft","resolveSpacingStyles","arguments","length","Number","isNaN","String","spacingStyles","value","push","GridRoot","name","slot","overridesResolver","props","wrap","zeroMinWidth","breakpointsStyles","root","_ref10","boxSizing","display","flexWrap","margin","minWidth","resolveSpacingClasses","classes","className","useUtilityClasses","spacingClasses","breakpointsClasses","slots","Grid","forwardRef","inProps","ref","themeProps","_useTheme","columnsProp","columnSpacingProp","_props$component","component","_props$container","_props$direction","_props$item","rowSpacingProp","_props$spacing","_props$wrap","_props$zeroMinWidth","other","columnsContext","useContext","breakpointsValues","otherFiltered","Provider","children","as","process","env","NODE_ENV","propTypes","node","object","string","oneOfType","arrayOf","number","elementType","bool","oneOf","lg","md","sm","sx","func","xl","xs","requireProp"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mui/material/Grid/Grid.js"],"sourcesContent":["'use client';\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport requirePropFactory from \"../utils/requirePropFactory.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useTheme from \"../styles/useTheme.js\";\nimport GridContext from \"./GridContext.js\";\nimport gridClasses, { getGridUtilityClass } from \"./gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${themeSpacing})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = {\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width,\n        ...more\n      };\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.startsWith('column')) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${themeSpacing}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: themeSpacing\n          }\n        };\n      }\n      if (zeroValueBreakpointKeys?.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        const negativeValue = `-${themeSpacing}`;\n        return {\n          width: `calc(100% + ${themeSpacing})`,\n          marginLeft: negativeValue,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: themeSpacing\n          }\n        };\n      }\n      if (zeroValueBreakpointKeys?.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(\n// FIXME(romgrk): Can't use memoTheme here\n({\n  ownerState\n}) => ({\n  boxSizing: 'border-box',\n  ...(ownerState.container && {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  }),\n  ...(ownerState.item && {\n    margin: 0 // For instance, it's useful when used with a `figure` element.\n  }),\n  ...(ownerState.zeroMinWidth && {\n    minWidth: 0\n  }),\n  ...(ownerState.wrap !== 'wrap' && {\n    flexWrap: ownerState.wrap\n  })\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\n/**\n * @deprecated Use the [`Grid2`](https://mui.com/material-ui/react-grid2/) component instead.\n */\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useDefaultProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    rowSpacing: rowSpacingProp,\n    spacing = 0,\n    wrap = 'wrap',\n    zeroMinWidth = false,\n    ...other\n  } = props;\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = {\n    ...other\n  };\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = {\n    ...props,\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing,\n    ...breakpointsValues,\n    breakpoints: breakpoints.keys\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, {\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      ...otherFiltered\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = {\n    // eslint-disable-next-line react/forbid-foreign-prop-types\n    ...Grid.propTypes,\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  };\n}\nexport default Grid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}