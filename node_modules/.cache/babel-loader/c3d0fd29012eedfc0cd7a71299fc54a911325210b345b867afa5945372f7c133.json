{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nfunction useQueue({\n  initialValues = [],\n  limit\n}) {\n  const [state, setState] = useState({\n    state: initialValues.slice(0, limit),\n    queue: initialValues.slice(limit)\n  });\n  const add = (...items) => setState(current => {\n    const results = [...current.state, ...current.queue, ...items];\n    return {\n      state: results.slice(0, limit),\n      queue: results.slice(limit)\n    };\n  });\n  const update = fn => setState(current => {\n    const results = fn([...current.state, ...current.queue]);\n    return {\n      state: results.slice(0, limit),\n      queue: results.slice(limit)\n    };\n  });\n  const cleanQueue = () => setState(current => ({\n    state: current.state,\n    queue: []\n  }));\n  return {\n    state: state.state,\n    queue: state.queue,\n    add,\n    update,\n    cleanQueue\n  };\n}\nexport { useQueue };","map":{"version":3,"names":["useQueue","initialValues","limit","state","setState","useState","slice","queue","add","items","current","results","update","fn","cleanQueue"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/hooks/src/use-queue/use-queue.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport function useQueue<T>({ initialValues = [], limit }: { initialValues?: T[]; limit: number }) {\n  const [state, setState] = useState({\n    state: initialValues.slice(0, limit),\n    queue: initialValues.slice(limit),\n  });\n\n  const add = (...items: T[]) =>\n    setState((current) => {\n      const results = [...current.state, ...current.queue, ...items];\n\n      return {\n        state: results.slice(0, limit),\n        queue: results.slice(limit),\n      };\n    });\n\n  const update = (fn: (state: T[]) => T[]) =>\n    setState((current) => {\n      const results = fn([...current.state, ...current.queue]);\n\n      return {\n        state: results.slice(0, limit),\n        queue: results.slice(limit),\n      };\n    });\n\n  const cleanQueue = () => setState((current) => ({ state: current.state, queue: [] }));\n\n  return {\n    state: state.state,\n    queue: state.queue,\n    add,\n    update,\n    cleanQueue,\n  };\n}\n"],"mappings":";;;AAEO,SAASA,QAAQA,CAAC;EAAEC,aAAa,GAAG,EAAE;EAAEC;AAAK,CAAE,EAAE;EACtD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC;IACjCF,KAAK,EAAEF,aAAa,CAACK,KAAK,CAAC,CAAC,EAAEJ,KAAK,CAAC;IACpCK,KAAK,EAAEN,aAAa,CAACK,KAAK,CAACJ,KAAK;EACpC,CAAG,CAAC;EACF,MAAMM,GAAG,GAAGA,CAAC,GAAGC,KAAK,KAAKL,QAAQ,CAAEM,OAAO,IAAK;IAC9C,MAAMC,OAAO,GAAG,CAAC,GAAGD,OAAO,CAACP,KAAK,EAAE,GAAGO,OAAO,CAACH,KAAK,EAAE,GAAGE,KAAK,CAAC;IAC9D,OAAO;MACLN,KAAK,EAAEQ,OAAO,CAACL,KAAK,CAAC,CAAC,EAAEJ,KAAK,CAAC;MAC9BK,KAAK,EAAEI,OAAO,CAACL,KAAK,CAACJ,KAAK;IAC3B;EACL,CAAG,CAAC;EACF,MAAMU,MAAM,GAAIC,EAAE,IAAKT,QAAQ,CAAEM,OAAO,IAAK;IAC3C,MAAMC,OAAO,GAAGE,EAAE,CAAC,CAAC,GAAGH,OAAO,CAACP,KAAK,EAAE,GAAGO,OAAO,CAACH,KAAK,CAAC,CAAC;IACxD,OAAO;MACLJ,KAAK,EAAEQ,OAAO,CAACL,KAAK,CAAC,CAAC,EAAEJ,KAAK,CAAC;MAC9BK,KAAK,EAAEI,OAAO,CAACL,KAAK,CAACJ,KAAK;IAC3B;EACL,CAAG,CAAC;EACF,MAAMY,UAAU,GAAGA,CAAA,KAAMV,QAAQ,CAAEM,OAAO,KAAM;IAAEP,KAAK,EAAEO,OAAO,CAACP,KAAK;IAAEI,KAAK,EAAE;EAAI,EAAC,CAAC;EACrF,OAAO;IACLJ,KAAK,EAAEA,KAAK,CAACA,KAAK;IAClBI,KAAK,EAAEJ,KAAK,CAACI,KAAK;IAClBC,GAAG;IACHI,MAAM;IACNE;EACD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}