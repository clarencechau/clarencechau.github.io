{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Popover } from '../../Popover/Popover.mjs';\nimport '../../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { useComboboxContext } from '../Combobox.context.mjs';\nimport classes from '../Combobox.module.css.mjs';\nconst defaultProps = {};\nconst ComboboxDropdown = factory((props, ref) => {\n  const {\n    classNames,\n    styles,\n    className,\n    style,\n    hidden,\n    ...others\n  } = useProps(\"ComboboxDropdown\", defaultProps, props);\n  const ctx = useComboboxContext();\n  return /* @__PURE__ */jsx(Popover.Dropdown, {\n    ...others,\n    ref,\n    role: \"presentation\",\n    \"data-hidden\": hidden || void 0,\n    ...ctx.getStyles(\"dropdown\", {\n      className,\n      style,\n      classNames,\n      styles\n    })\n  });\n});\nComboboxDropdown.classes = classes;\nComboboxDropdown.displayName = \"@mantine/core/ComboboxDropdown\";\nexport { ComboboxDropdown };","map":{"version":3,"names":["defaultProps","ComboboxDropdown","factory","props","ref","classNames","styles","className","style","hidden","others","useProps","ctx","useComboboxContext","jsx","Popover","Dropdown","role","getStyles","classes","displayName"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/Combobox/ComboboxDropdown/ComboboxDropdown.tsx"],"sourcesContent":["import { factory, Factory, useProps } from '../../../core';\nimport { Popover, PopoverDropdownProps } from '../../Popover';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxDropdownStylesNames = 'dropdown';\n\nexport interface ComboboxDropdownProps extends PopoverDropdownProps {\n  /** Determines whether the dropdown should be hidden, for example, when there are no options to display */\n  hidden?: boolean;\n}\n\nexport type ComboboxDropdownFactory = Factory<{\n  props: ComboboxDropdownProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxDropdownStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxDropdownProps> = {};\n\nexport const ComboboxDropdown = factory<ComboboxDropdownFactory>((props, ref) => {\n  const { classNames, styles, className, style, hidden, ...others } = useProps(\n    'ComboboxDropdown',\n    defaultProps,\n    props\n  );\n\n  const ctx = useComboboxContext();\n\n  return (\n    <Popover.Dropdown\n      {...others}\n      ref={ref}\n      role=\"presentation\"\n      data-hidden={hidden || undefined}\n      {...ctx.getStyles('dropdown', { className, style, classNames, styles })}\n    />\n  );\n});\n\nComboboxDropdown.classes = classes;\nComboboxDropdown.displayName = '@mantine/core/ComboboxDropdown';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAMA,MAAMA,YAAY,GAAG,CAAE;AACX,MAACC,gBAAgB,GAAGC,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EACtD,MAAM;IAAEC,UAAU;IAAEC,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC,MAAM;IAAE,GAAGC;EAAM,CAAE,GAAGC,QAAQ,CAC1E,kBAAkB,EAClBX,YAAY,EACZG,KACD;EACD,MAAMS,GAAG,GAAGC,kBAAkB,CAAE;EAChC,sBAAuBC,GAAG,CACxBC,OAAO,CAACC,QAAQ,EAChB;IACE,GAAGN,MAAM;IACTN,GAAG;IACHa,IAAI,EAAE,cAAc;IACpB,aAAa,EAAER,MAAM,IAAI,KAAK,CAAC;IAC/B,GAAGG,GAAG,CAACM,SAAS,CAAC,UAAU,EAAE;MAAEX,SAAS;MAAEC,KAAK;MAAEH,UAAU;MAAEC;IAAQ;EAC3E,CACG;AACH,CAAC;AACDL,gBAAgB,CAACkB,OAAO,GAAGA,OAAO;AAClClB,gBAAgB,CAACmB,WAAW,GAAG,gCAAgC"},"metadata":{},"sourceType":"module","externalDependencies":[]}