{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { keys } from '../../core/utils/keys/keys.mjs';\nimport { px } from '../../core/utils/units-converters/px.mjs';\nimport { filterProps } from '../../core/utils/filter-props/filter-props.mjs';\nimport 'react';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport { getSortedBreakpoints } from '../../core/utils/get-sorted-breakpoints/get-sorted-breakpoints.mjs';\nimport { getBaseValue } from '../../core/utils/get-base-value/get-base-value.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { InlineStyles } from '../../core/InlineStyles/InlineStyles.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nfunction SimpleGridMediaVariables({\n  spacing,\n  verticalSpacing,\n  cols,\n  selector\n}) {\n  const theme = useMantineTheme();\n  const _verticalSpacing = verticalSpacing === void 0 ? spacing : verticalSpacing;\n  const baseStyles = filterProps({\n    \"--sg-spacing-x\": getSpacing(getBaseValue(spacing)),\n    \"--sg-spacing-y\": getSpacing(getBaseValue(_verticalSpacing)),\n    \"--sg-cols\": getBaseValue(cols)?.toString()\n  });\n  const queries = keys(theme.breakpoints).reduce((acc, breakpoint) => {\n    if (!acc[breakpoint]) {\n      acc[breakpoint] = {};\n    }\n    if (typeof spacing === \"object\" && spacing[breakpoint] !== void 0) {\n      acc[breakpoint][\"--sg-spacing-x\"] = getSpacing(spacing[breakpoint]);\n    }\n    if (typeof _verticalSpacing === \"object\" && _verticalSpacing[breakpoint] !== void 0) {\n      acc[breakpoint][\"--sg-spacing-y\"] = getSpacing(_verticalSpacing[breakpoint]);\n    }\n    if (typeof cols === \"object\" && cols[breakpoint] !== void 0) {\n      acc[breakpoint][\"--sg-cols\"] = cols[breakpoint];\n    }\n    return acc;\n  }, {});\n  const sortedBreakpoints = getSortedBreakpoints(keys(queries), theme.breakpoints).filter(breakpoint => keys(queries[breakpoint.value]).length > 0);\n  const media = sortedBreakpoints.map(breakpoint => ({\n    query: `(min-width: ${theme.breakpoints[breakpoint.value]})`,\n    styles: queries[breakpoint.value]\n  }));\n  return /* @__PURE__ */jsx(InlineStyles, {\n    styles: baseStyles,\n    media,\n    selector\n  });\n}\nfunction getBreakpoints(values) {\n  if (typeof values === \"object\" && values !== null) {\n    return keys(values);\n  }\n  return [];\n}\nfunction sortBreakpoints(breakpoints) {\n  return breakpoints.sort((a, b) => px(a) - px(b));\n}\nfunction getUniqueBreakpoints({\n  spacing,\n  verticalSpacing,\n  cols\n}) {\n  const breakpoints = Array.from( /* @__PURE__ */new Set([...getBreakpoints(spacing), ...getBreakpoints(verticalSpacing), ...getBreakpoints(cols)]));\n  return sortBreakpoints(breakpoints);\n}\nfunction SimpleGridContainerVariables({\n  spacing,\n  verticalSpacing,\n  cols,\n  selector\n}) {\n  const _verticalSpacing = verticalSpacing === void 0 ? spacing : verticalSpacing;\n  const baseStyles = filterProps({\n    \"--sg-spacing-x\": getSpacing(getBaseValue(spacing)),\n    \"--sg-spacing-y\": getSpacing(getBaseValue(_verticalSpacing)),\n    \"--sg-cols\": getBaseValue(cols)?.toString()\n  });\n  const uniqueBreakpoints = getUniqueBreakpoints({\n    spacing,\n    verticalSpacing,\n    cols\n  });\n  const queries = uniqueBreakpoints.reduce((acc, breakpoint) => {\n    if (!acc[breakpoint]) {\n      acc[breakpoint] = {};\n    }\n    if (typeof spacing === \"object\" && spacing[breakpoint] !== void 0) {\n      acc[breakpoint][\"--sg-spacing-x\"] = getSpacing(spacing[breakpoint]);\n    }\n    if (typeof _verticalSpacing === \"object\" && _verticalSpacing[breakpoint] !== void 0) {\n      acc[breakpoint][\"--sg-spacing-y\"] = getSpacing(_verticalSpacing[breakpoint]);\n    }\n    if (typeof cols === \"object\" && cols[breakpoint] !== void 0) {\n      acc[breakpoint][\"--sg-cols\"] = cols[breakpoint];\n    }\n    return acc;\n  }, {});\n  const media = uniqueBreakpoints.map(breakpoint => ({\n    query: `simple-grid (min-width: ${breakpoint})`,\n    styles: queries[breakpoint]\n  }));\n  return /* @__PURE__ */jsx(InlineStyles, {\n    styles: baseStyles,\n    container: media,\n    selector\n  });\n}\nexport { SimpleGridContainerVariables, SimpleGridMediaVariables };","map":{"version":3,"names":["SimpleGridMediaVariables","spacing","verticalSpacing","cols","selector","theme","useMantineTheme","_verticalSpacing","baseStyles","filterProps","getSpacing","getBaseValue","toString","queries","keys","breakpoints","reduce","acc","breakpoint","sortedBreakpoints","getSortedBreakpoints","filter","value","length","media","map","query","styles","jsx","InlineStyles","getBreakpoints","values","sortBreakpoints","sort","a","b","px","getUniqueBreakpoints","Array","from","Set","SimpleGridContainerVariables","uniqueBreakpoints","container"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/SimpleGrid/SimpleGridVariables.tsx"],"sourcesContent":["import {\n  filterProps,\n  getBaseValue,\n  getSortedBreakpoints,\n  getSpacing,\n  InlineStyles,\n  keys,\n  MantineBreakpoint,\n  px,\n  useMantineTheme,\n} from '../../core';\nimport type { SimpleGridProps } from './SimpleGrid';\n\ninterface SimpleGridVariablesProps extends SimpleGridProps {\n  selector: string;\n}\n\nexport function SimpleGridMediaVariables({\n  spacing,\n  verticalSpacing,\n  cols,\n  selector,\n}: SimpleGridVariablesProps) {\n  const theme = useMantineTheme();\n  const _verticalSpacing = verticalSpacing === undefined ? spacing : verticalSpacing;\n\n  const baseStyles: Record<string, string | undefined> = filterProps({\n    '--sg-spacing-x': getSpacing(getBaseValue(spacing)),\n    '--sg-spacing-y': getSpacing(getBaseValue(_verticalSpacing)),\n    '--sg-cols': getBaseValue(cols)?.toString(),\n  });\n\n  const queries = keys(theme.breakpoints).reduce<Record<string, Record<string, any>>>(\n    (acc, breakpoint) => {\n      if (!acc[breakpoint]) {\n        acc[breakpoint] = {};\n      }\n\n      if (typeof spacing === 'object' && spacing[breakpoint] !== undefined) {\n        acc[breakpoint]['--sg-spacing-x'] = getSpacing(spacing[breakpoint]);\n      }\n\n      if (typeof _verticalSpacing === 'object' && _verticalSpacing[breakpoint] !== undefined) {\n        acc[breakpoint]['--sg-spacing-y'] = getSpacing(_verticalSpacing[breakpoint]);\n      }\n\n      if (typeof cols === 'object' && cols[breakpoint] !== undefined) {\n        acc[breakpoint]['--sg-cols'] = cols[breakpoint];\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  const sortedBreakpoints = getSortedBreakpoints(keys(queries), theme.breakpoints).filter(\n    (breakpoint) => keys(queries[breakpoint.value]).length > 0\n  );\n\n  const media = sortedBreakpoints.map((breakpoint) => ({\n    query: `(min-width: ${theme.breakpoints[breakpoint.value as MantineBreakpoint]})`,\n    styles: queries[breakpoint.value],\n  }));\n\n  return <InlineStyles styles={baseStyles} media={media} selector={selector} />;\n}\n\nfunction getBreakpoints(values: unknown) {\n  if (typeof values === 'object' && values !== null) {\n    return keys(values);\n  }\n\n  return [];\n}\n\nfunction sortBreakpoints(breakpoints: string[]) {\n  return breakpoints.sort((a, b) => (px(a) as number) - (px(b) as number));\n}\n\nfunction getUniqueBreakpoints({\n  spacing,\n  verticalSpacing,\n  cols,\n}: Omit<SimpleGridVariablesProps, 'selector'>) {\n  const breakpoints = Array.from(\n    new Set([\n      ...getBreakpoints(spacing),\n      ...getBreakpoints(verticalSpacing),\n      ...getBreakpoints(cols),\n    ])\n  );\n\n  return sortBreakpoints(breakpoints);\n}\n\nexport function SimpleGridContainerVariables({\n  spacing,\n  verticalSpacing,\n  cols,\n  selector,\n}: SimpleGridVariablesProps) {\n  const _verticalSpacing = verticalSpacing === undefined ? spacing : verticalSpacing;\n\n  const baseStyles: Record<string, string | undefined> = filterProps({\n    '--sg-spacing-x': getSpacing(getBaseValue(spacing)),\n    '--sg-spacing-y': getSpacing(getBaseValue(_verticalSpacing)),\n    '--sg-cols': getBaseValue(cols)?.toString(),\n  });\n\n  const uniqueBreakpoints = getUniqueBreakpoints({ spacing, verticalSpacing, cols });\n\n  const queries = uniqueBreakpoints.reduce<Record<string, Record<string, any>>>(\n    (acc, breakpoint) => {\n      if (!acc[breakpoint]) {\n        acc[breakpoint] = {};\n      }\n\n      if (typeof spacing === 'object' && spacing[breakpoint] !== undefined) {\n        acc[breakpoint]['--sg-spacing-x'] = getSpacing(spacing[breakpoint]);\n      }\n\n      if (typeof _verticalSpacing === 'object' && _verticalSpacing[breakpoint] !== undefined) {\n        acc[breakpoint]['--sg-spacing-y'] = getSpacing(_verticalSpacing[breakpoint]);\n      }\n\n      if (typeof cols === 'object' && cols[breakpoint] !== undefined) {\n        acc[breakpoint]['--sg-cols'] = cols[breakpoint];\n      }\n\n      return acc;\n    },\n    {}\n  );\n\n  const media = uniqueBreakpoints.map((breakpoint) => ({\n    query: `simple-grid (min-width: ${breakpoint})`,\n    styles: queries[breakpoint],\n  }));\n\n  return <InlineStyles styles={baseStyles} container={media} selector={selector} />;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAYO,SAASA,wBAAwBA,CAAC;EACvCC,OAAO;EACPC,eAAe;EACfC,IAAI;EACJC;AACF,CAAC,EAAE;EACD,MAAMC,KAAK,GAAGC,eAAe,CAAE;EAC/B,MAAMC,gBAAgB,GAAGL,eAAe,KAAK,KAAK,CAAC,GAAGD,OAAO,GAAGC,eAAe;EAC/E,MAAMM,UAAU,GAAGC,WAAW,CAAC;IAC7B,gBAAgB,EAAEC,UAAU,CAACC,YAAY,CAACV,OAAO,CAAC,CAAC;IACnD,gBAAgB,EAAES,UAAU,CAACC,YAAY,CAACJ,gBAAgB,CAAC,CAAC;IAC5D,WAAW,EAAEI,YAAY,CAACR,IAAI,CAAC,EAAES,QAAQ;EAC7C,CAAG,CAAC;EACF,MAAMC,OAAO,GAAGC,IAAI,CAACT,KAAK,CAACU,WAAW,CAAC,CAACC,MAAM,CAC5C,CAACC,GAAG,EAAEC,UAAU,KAAK;IACnB,IAAI,CAACD,GAAG,CAACC,UAAU,CAAC,EAAE;MACpBD,GAAG,CAACC,UAAU,CAAC,GAAG,CAAE;IAC5B;IACM,IAAI,OAAOjB,OAAO,KAAK,QAAQ,IAAIA,OAAO,CAACiB,UAAU,CAAC,KAAK,KAAK,CAAC,EAAE;MACjED,GAAG,CAACC,UAAU,CAAC,CAAC,gBAAgB,CAAC,GAAGR,UAAU,CAACT,OAAO,CAACiB,UAAU,CAAC,CAAC;IAC3E;IACM,IAAI,OAAOX,gBAAgB,KAAK,QAAQ,IAAIA,gBAAgB,CAACW,UAAU,CAAC,KAAK,KAAK,CAAC,EAAE;MACnFD,GAAG,CAACC,UAAU,CAAC,CAAC,gBAAgB,CAAC,GAAGR,UAAU,CAACH,gBAAgB,CAACW,UAAU,CAAC,CAAC;IACpF;IACM,IAAI,OAAOf,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAACe,UAAU,CAAC,KAAK,KAAK,CAAC,EAAE;MAC3DD,GAAG,CAACC,UAAU,CAAC,CAAC,WAAW,CAAC,GAAGf,IAAI,CAACe,UAAU,CAAC;IACvD;IACM,OAAOD,GAAG;EACX,GACD,EACD;EACD,MAAME,iBAAiB,GAAGC,oBAAoB,CAACN,IAAI,CAACD,OAAO,CAAC,EAAER,KAAK,CAACU,WAAW,CAAC,CAACM,MAAM,CACpFH,UAAU,IAAKJ,IAAI,CAACD,OAAO,CAACK,UAAU,CAACI,KAAK,CAAC,CAAC,CAACC,MAAM,GAAG,CAC1D;EACD,MAAMC,KAAK,GAAGL,iBAAiB,CAACM,GAAG,CAAEP,UAAU,KAAM;IACnDQ,KAAK,EAAG,eAAcrB,KAAK,CAACU,WAAW,CAACG,UAAU,CAACI,KAAK,CAAE,GAAE;IAC5DK,MAAM,EAAEd,OAAO,CAACK,UAAU,CAACI,KAAK;EACpC,CAAG,CAAC,CAAC;EACH,OAAuB,eAAAM,GAAG,CAACC,YAAY,EAAE;IAAEF,MAAM,EAAEnB,UAAU;IAAEgB,KAAK;IAAEpB;EAAQ,CAAE,CAAC;AACnF;AACA,SAAS0B,cAAcA,CAACC,MAAM,EAAE;EAC9B,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,KAAK,IAAI,EAAE;IACjD,OAAOjB,IAAI,CAACiB,MAAM,CAAC;EACvB;EACE,OAAO,EAAE;AACX;AACA,SAASC,eAAeA,CAACjB,WAAW,EAAE;EACpC,OAAOA,WAAW,CAACkB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKC,EAAE,CAACF,CAAC,CAAC,GAAGE,EAAE,CAACD,CAAC,CAAC,CAAC;AAClD;AACA,SAASE,oBAAoBA,CAAC;EAC5BpC,OAAO;EACPC,eAAe;EACfC;AACF,CAAC,EAAE;EACD,MAAMY,WAAW,GAAGuB,KAAK,CAACC,IAAI,EACZ,mBAAIC,GAAG,CAAC,CACtB,GAAGV,cAAc,CAAC7B,OAAO,CAAC,EAC1B,GAAG6B,cAAc,CAAC5B,eAAe,CAAC,EAClC,GAAG4B,cAAc,CAAC3B,IAAI,EACvB,CACF;EACD,OAAO6B,eAAe,CAACjB,WAAW,CAAC;AACrC;AACO,SAAS0B,4BAA4BA,CAAC;EAC3CxC,OAAO;EACPC,eAAe;EACfC,IAAI;EACJC;AACF,CAAC,EAAE;EACD,MAAMG,gBAAgB,GAAGL,eAAe,KAAK,KAAK,CAAC,GAAGD,OAAO,GAAGC,eAAe;EAC/E,MAAMM,UAAU,GAAGC,WAAW,CAAC;IAC7B,gBAAgB,EAAEC,UAAU,CAACC,YAAY,CAACV,OAAO,CAAC,CAAC;IACnD,gBAAgB,EAAES,UAAU,CAACC,YAAY,CAACJ,gBAAgB,CAAC,CAAC;IAC5D,WAAW,EAAEI,YAAY,CAACR,IAAI,CAAC,EAAES,QAAQ;EAC7C,CAAG,CAAC;EACF,MAAM8B,iBAAiB,GAAGL,oBAAoB,CAAC;IAAEpC,OAAO;IAAEC,eAAe;IAAEC;EAAI,CAAE,CAAC;EAClF,MAAMU,OAAO,GAAG6B,iBAAiB,CAAC1B,MAAM,CACtC,CAACC,GAAG,EAAEC,UAAU,KAAK;IACnB,IAAI,CAACD,GAAG,CAACC,UAAU,CAAC,EAAE;MACpBD,GAAG,CAACC,UAAU,CAAC,GAAG,CAAE;IAC5B;IACM,IAAI,OAAOjB,OAAO,KAAK,QAAQ,IAAIA,OAAO,CAACiB,UAAU,CAAC,KAAK,KAAK,CAAC,EAAE;MACjED,GAAG,CAACC,UAAU,CAAC,CAAC,gBAAgB,CAAC,GAAGR,UAAU,CAACT,OAAO,CAACiB,UAAU,CAAC,CAAC;IAC3E;IACM,IAAI,OAAOX,gBAAgB,KAAK,QAAQ,IAAIA,gBAAgB,CAACW,UAAU,CAAC,KAAK,KAAK,CAAC,EAAE;MACnFD,GAAG,CAACC,UAAU,CAAC,CAAC,gBAAgB,CAAC,GAAGR,UAAU,CAACH,gBAAgB,CAACW,UAAU,CAAC,CAAC;IACpF;IACM,IAAI,OAAOf,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAACe,UAAU,CAAC,KAAK,KAAK,CAAC,EAAE;MAC3DD,GAAG,CAACC,UAAU,CAAC,CAAC,WAAW,CAAC,GAAGf,IAAI,CAACe,UAAU,CAAC;IACvD;IACM,OAAOD,GAAG;EACX,GACD,EACD;EACD,MAAMO,KAAK,GAAGkB,iBAAiB,CAACjB,GAAG,CAAEP,UAAU,KAAM;IACnDQ,KAAK,EAAG,2BAA0BR,UAAW,GAAE;IAC/CS,MAAM,EAAEd,OAAO,CAACK,UAAU;EAC9B,CAAG,CAAC,CAAC;EACH,sBAAuBU,GAAG,CAACC,YAAY,EAAE;IAAEF,MAAM,EAAEnB,UAAU;IAAEmC,SAAS,EAAEnB,KAAK;IAAEpB;EAAQ,CAAE,CAAC;AAC9F"},"metadata":{},"sourceType":"module","externalDependencies":[]}