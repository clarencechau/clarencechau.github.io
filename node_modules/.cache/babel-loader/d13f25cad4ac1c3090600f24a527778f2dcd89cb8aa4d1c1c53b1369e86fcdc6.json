{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport 'react';\nimport { getRadius } from '../../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport { useDirection } from '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { UnstyledButton } from '../../UnstyledButton/UnstyledButton.mjs';\nimport { useRadioGroupContext } from '../RadioGroup.context.mjs';\nimport { RadioCardProvider } from './RadioCard.context.mjs';\nimport classes from './RadioCard.module.css.mjs';\nconst defaultProps = {\n  withBorder: true\n};\nconst varsResolver = createVarsResolver((_, {\n  radius\n}) => ({\n  card: {\n    \"--card-radius\": getRadius(radius)\n  }\n}));\nconst RadioCard = factory((_props, ref) => {\n  const props = useProps(\"RadioCard\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    checked,\n    mod,\n    withBorder,\n    value,\n    onClick,\n    name,\n    onKeyDown,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"RadioCard\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: \"card\"\n  });\n  const {\n    dir\n  } = useDirection();\n  const ctx = useRadioGroupContext();\n  const _checked = typeof checked === \"boolean\" ? checked : ctx?.value === value || false;\n  const _name = name || ctx?.name;\n  const handleKeyDown = event => {\n    onKeyDown?.(event);\n    if ([\"ArrowDown\", \"ArrowUp\", \"ArrowLeft\", \"ArrowRight\"].includes(event.nativeEvent.code)) {\n      event.preventDefault();\n      const siblings = Array.from(document.querySelectorAll(`[role=\"radio\"][name=\"${_name || \"__mantine\"}\"]`));\n      const currentIndex = siblings.findIndex(element => element === event.target);\n      const nextIndex = currentIndex + 1 >= siblings.length ? 0 : currentIndex + 1;\n      const prevIndex = currentIndex - 1 < 0 ? siblings.length - 1 : currentIndex - 1;\n      if (event.nativeEvent.code === \"ArrowDown\") {\n        siblings[nextIndex].focus();\n        siblings[nextIndex].click();\n      }\n      if (event.nativeEvent.code === \"ArrowUp\") {\n        siblings[prevIndex].focus();\n        siblings[prevIndex].click();\n      }\n      if (event.nativeEvent.code === \"ArrowLeft\") {\n        siblings[dir === \"ltr\" ? prevIndex : nextIndex].focus();\n        siblings[dir === \"ltr\" ? prevIndex : nextIndex].click();\n      }\n      if (event.nativeEvent.code === \"ArrowRight\") {\n        siblings[dir === \"ltr\" ? nextIndex : prevIndex].focus();\n        siblings[dir === \"ltr\" ? nextIndex : prevIndex].click();\n      }\n    }\n  };\n  return /* @__PURE__ */jsx(RadioCardProvider, {\n    value: {\n      checked: _checked\n    },\n    children: /* @__PURE__ */jsx(UnstyledButton, {\n      ref,\n      mod: [{\n        \"with-border\": withBorder,\n        checked: _checked\n      }, mod],\n      ...getStyles(\"card\"),\n      ...others,\n      role: \"radio\",\n      \"aria-checked\": _checked,\n      name: _name,\n      onClick: event => {\n        onClick?.(event);\n        ctx?.onChange(value || \"\");\n      },\n      onKeyDown: handleKeyDown\n    })\n  });\n});\nRadioCard.displayName = \"@mantine/core/RadioCard\";\nRadioCard.classes = classes;\nexport { RadioCard };","map":{"version":3,"names":["defaultProps","withBorder","varsResolver","createVarsResolver","_","radius","card","getRadius","RadioCard","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","checked","mod","value","onClick","name","onKeyDown","others","getStyles","useStyles","classes","rootSelector","dir","useDirection","ctx","useRadioGroupContext","_checked","_name","handleKeyDown","event","includes","nativeEvent","code","preventDefault","siblings","Array","from","document","querySelectorAll","currentIndex","findIndex","element","target","nextIndex","length","prevIndex","focus","click","jsx","RadioCardProvider","children","UnstyledButton","role","onChange","displayName"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/Radio/RadioCard/RadioCard.tsx"],"sourcesContent":["import {\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  MantineRadius,\n  StylesApiProps,\n  useDirection,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport { useRadioGroupContext } from '../RadioGroup.context';\nimport { RadioCardProvider } from './RadioCard.context';\nimport classes from './RadioCard.module.css';\n\nexport type RadioCardStylesNames = 'card';\nexport type RadioCardCssVariables = {\n  card: '--card-radius';\n};\n\nexport interface RadioCardProps\n  extends BoxProps,\n    StylesApiProps<RadioCardFactory>,\n    ElementProps<'button', 'onChange'> {\n  /** Checked state */\n  checked?: boolean;\n\n  /** Determines whether the card should have border, `true` by default */\n  withBorder?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Value of the checkbox, used with `Radio.Group` */\n  value?: string;\n\n  /** Value used to associate all related radio cards, required for accessibility if used outside of `Radio.Group` */\n  name?: string;\n}\n\nexport type RadioCardFactory = Factory<{\n  props: RadioCardProps;\n  ref: HTMLButtonElement;\n  stylesNames: RadioCardStylesNames;\n  vars: RadioCardCssVariables;\n}>;\n\nconst defaultProps: Partial<RadioCardProps> = {\n  withBorder: true,\n};\n\nconst varsResolver = createVarsResolver<RadioCardFactory>((_, { radius }) => ({\n  card: {\n    '--card-radius': getRadius(radius),\n  },\n}));\n\nexport const RadioCard = factory<RadioCardFactory>((_props, ref) => {\n  const props = useProps('RadioCard', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    checked,\n    mod,\n    withBorder,\n    value,\n    onClick,\n    name,\n    onKeyDown,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<RadioCardFactory>({\n    name: 'RadioCard',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'card',\n  });\n\n  const { dir } = useDirection();\n  const ctx = useRadioGroupContext();\n  const _checked = typeof checked === 'boolean' ? checked : ctx?.value === value || false;\n  const _name = name || ctx?.name;\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLButtonElement>) => {\n    onKeyDown?.(event);\n\n    if (['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'].includes(event.nativeEvent.code)) {\n      event.preventDefault();\n\n      const siblings = Array.from(\n        document.querySelectorAll<HTMLButtonElement>(\n          `[role=\"radio\"][name=\"${_name || '__mantine'}\"]`\n        )\n      );\n\n      const currentIndex = siblings.findIndex((element) => element === event.target);\n      const nextIndex = currentIndex + 1 >= siblings.length ? 0 : currentIndex + 1;\n      const prevIndex = currentIndex - 1 < 0 ? siblings.length - 1 : currentIndex - 1;\n\n      if (event.nativeEvent.code === 'ArrowDown') {\n        siblings[nextIndex].focus();\n        siblings[nextIndex].click();\n      }\n\n      if (event.nativeEvent.code === 'ArrowUp') {\n        siblings[prevIndex].focus();\n        siblings[prevIndex].click();\n      }\n\n      if (event.nativeEvent.code === 'ArrowLeft') {\n        siblings[dir === 'ltr' ? prevIndex : nextIndex].focus();\n        siblings[dir === 'ltr' ? prevIndex : nextIndex].click();\n      }\n\n      if (event.nativeEvent.code === 'ArrowRight') {\n        siblings[dir === 'ltr' ? nextIndex : prevIndex].focus();\n        siblings[dir === 'ltr' ? nextIndex : prevIndex].click();\n      }\n    }\n  };\n\n  return (\n    <RadioCardProvider value={{ checked: _checked }}>\n      <UnstyledButton\n        ref={ref}\n        mod={[{ 'with-border': withBorder, checked: _checked }, mod]}\n        {...getStyles('card')}\n        {...others}\n        role=\"radio\"\n        aria-checked={_checked}\n        name={_name}\n        onClick={(event) => {\n          onClick?.(event);\n          ctx?.onChange(value || '');\n        }}\n        onKeyDown={handleKeyDown}\n      />\n    </RadioCardProvider>\n  );\n});\n\nRadioCard.displayName = '@mantine/core/RadioCard';\nRadioCard.classes = classes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}