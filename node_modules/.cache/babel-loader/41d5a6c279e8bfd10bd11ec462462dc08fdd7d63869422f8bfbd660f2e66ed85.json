{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { createEventHandler } from '../../../core/utils/create-event-handler/create-event-handler.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Popover } from '../../Popover/Popover.mjs';\nimport '../../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { useMenuContext } from '../Menu.context.mjs';\nimport classes from '../Menu.module.css.mjs';\nconst defaultProps = {};\nconst MenuDropdown = factory((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    onMouseEnter,\n    onMouseLeave,\n    onKeyDown,\n    children,\n    ...others\n  } = useProps(\"MenuDropdown\", defaultProps, props);\n  const wrapperRef = useRef(null);\n  const ctx = useMenuContext();\n  const handleKeyDown = createEventHandler(onKeyDown, event => {\n    if (event.key === \"ArrowUp\" || event.key === \"ArrowDown\") {\n      event.preventDefault();\n      wrapperRef.current?.querySelectorAll(\"[data-menu-item]:not(:disabled)\")[0]?.focus();\n    }\n  });\n  const handleMouseEnter = createEventHandler(onMouseEnter, () => (ctx.trigger === \"hover\" || ctx.trigger === \"click-hover\") && ctx.openDropdown());\n  const handleMouseLeave = createEventHandler(onMouseLeave, () => (ctx.trigger === \"hover\" || ctx.trigger === \"click-hover\") && ctx.closeDropdown());\n  return /* @__PURE__ */jsxs(Popover.Dropdown, {\n    ...others,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    role: \"menu\",\n    \"aria-orientation\": \"vertical\",\n    ref: useMergedRef(ref, wrapperRef),\n    ...ctx.getStyles(\"dropdown\", {\n      className,\n      style,\n      styles,\n      classNames,\n      withStaticClass: false\n    }),\n    tabIndex: -1,\n    \"data-menu-dropdown\": true,\n    onKeyDown: handleKeyDown,\n    children: [/* @__PURE__ */jsx(\"div\", {\n      tabIndex: -1,\n      \"data-autofocus\": true,\n      \"data-mantine-stop-propagation\": true,\n      style: {\n        outline: 0\n      }\n    }), children]\n  });\n});\nMenuDropdown.classes = classes;\nMenuDropdown.displayName = \"@mantine/core/MenuDropdown\";\nexport { MenuDropdown };","map":{"version":3,"names":["defaultProps","MenuDropdown","factory","props","ref","classNames","className","style","styles","vars","onMouseEnter","onMouseLeave","onKeyDown","children","others","useProps","wrapperRef","useRef","ctx","useMenuContext","handleKeyDown","createEventHandler","event","key","preventDefault","current","querySelectorAll","focus","handleMouseEnter","trigger","openDropdown","handleMouseLeave","closeDropdown","jsxs","Popover","Dropdown","role","useMergedRef","getStyles","withStaticClass","tabIndex","jsx","outline","classes","displayName"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/Menu/MenuDropdown/MenuDropdown.tsx"],"sourcesContent":["import { useRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport {\n  BoxProps,\n  CompoundStylesApiProps,\n  createEventHandler,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { Popover } from '../../Popover';\nimport { useMenuContext } from '../Menu.context';\nimport classes from '../Menu.module.css';\n\nexport type MenuDropdownStylesNames = 'dropdown';\n\nexport interface MenuDropdownProps\n  extends BoxProps,\n    CompoundStylesApiProps<MenuDropdownFactory>,\n    ElementProps<'div'> {}\n\nexport type MenuDropdownFactory = Factory<{\n  props: MenuDropdownProps;\n  ref: HTMLDivElement;\n  stylesNames: MenuDropdownStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<MenuDropdownProps> = {};\n\nexport const MenuDropdown = factory<MenuDropdownFactory>((props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    onMouseEnter,\n    onMouseLeave,\n    onKeyDown,\n    children,\n    ...others\n  } = useProps('MenuDropdown', defaultProps, props);\n\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const ctx = useMenuContext();\n\n  const handleKeyDown = createEventHandler<any>(onKeyDown, (event) => {\n    if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      event.preventDefault();\n      wrapperRef.current\n        ?.querySelectorAll<HTMLButtonElement>('[data-menu-item]:not(:disabled)')[0]\n        ?.focus();\n    }\n  });\n\n  const handleMouseEnter = createEventHandler<any>(\n    onMouseEnter,\n    () => (ctx.trigger === 'hover' || ctx.trigger === 'click-hover') && ctx.openDropdown()\n  );\n\n  const handleMouseLeave = createEventHandler<any>(\n    onMouseLeave,\n    () => (ctx.trigger === 'hover' || ctx.trigger === 'click-hover') && ctx.closeDropdown()\n  );\n\n  return (\n    <Popover.Dropdown\n      {...others}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      role=\"menu\"\n      aria-orientation=\"vertical\"\n      ref={useMergedRef(ref, wrapperRef)}\n      {...ctx.getStyles('dropdown', {\n        className,\n        style,\n        styles,\n        classNames,\n        withStaticClass: false,\n      })}\n      tabIndex={-1}\n      data-menu-dropdown\n      onKeyDown={handleKeyDown}\n    >\n      <div tabIndex={-1} data-autofocus data-mantine-stop-propagation style={{ outline: 0 }} />\n      {children}\n    </Popover.Dropdown>\n  );\n});\n\nMenuDropdown.classes = classes;\nMenuDropdown.displayName = '@mantine/core/MenuDropdown';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAYA,MAAMA,YAAY,GAAG,CAAE;AACX,MAACC,YAAY,GAAGC,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EAClD,MAAM;IACJC,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,IAAI;IACJC,YAAY;IACZC,YAAY;IACZC,SAAS;IACTC,QAAQ;IACR,GAAGC;EACJ,IAAGC,QAAQ,CAAC,cAAc,EAAEf,YAAY,EAAEG,KAAK,CAAC;EACjD,MAAMa,UAAU,GAAGC,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMC,GAAG,GAAGC,cAAc,CAAE;EAC5B,MAAMC,aAAa,GAAGC,kBAAkB,CAACT,SAAS,EAAGU,KAAK,IAAK;IAC7D,IAAIA,KAAK,CAACC,GAAG,KAAK,SAAS,IAAID,KAAK,CAACC,GAAG,KAAK,WAAW,EAAE;MACxDD,KAAK,CAACE,cAAc,CAAE;MACtBR,UAAU,CAACS,OAAO,EAAEC,gBAAgB,CAAC,iCAAiC,CAAC,CAAC,CAAC,CAAC,EAAEC,KAAK,CAAE;IACzF;EACA,CAAG,CAAC;EACF,MAAMC,gBAAgB,GAAGP,kBAAkB,CACzCX,YAAY,EACZ,MAAM,CAACQ,GAAG,CAACW,OAAO,KAAK,OAAO,IAAIX,GAAG,CAACW,OAAO,KAAK,aAAa,KAAKX,GAAG,CAACY,YAAY,EACrF;EACD,MAAMC,gBAAgB,GAAGV,kBAAkB,CACzCV,YAAY,EACZ,MAAM,CAACO,GAAG,CAACW,OAAO,KAAK,OAAO,IAAIX,GAAG,CAACW,OAAO,KAAK,aAAa,KAAKX,GAAG,CAACc,aAAa,EACtF;EACD,sBAAuBC,IAAI,CACzBC,OAAO,CAACC,QAAQ,EAChB;IACE,GAAGrB,MAAM;IACTJ,YAAY,EAAEkB,gBAAgB;IAC9BjB,YAAY,EAAEoB,gBAAgB;IAC9BK,IAAI,EAAE,MAAM;IACZ,kBAAkB,EAAE,UAAU;IAC9BhC,GAAG,EAAEiC,YAAY,CAACjC,GAAG,EAAEY,UAAU,CAAC;IAClC,GAAGE,GAAG,CAACoB,SAAS,CAAC,UAAU,EAAE;MAC3BhC,SAAS;MACTC,KAAK;MACLC,MAAM;MACNH,UAAU;MACVkC,eAAe,EAAE;IACzB,CAAO,CAAC;IACFC,QAAQ,EAAE,CAAC,CAAC;IACZ,oBAAoB,EAAE,IAAI;IAC1B5B,SAAS,EAAEQ,aAAa;IACxBP,QAAQ,EAAE,CACQ,eAAA4B,GAAG,CAAC,KAAK,EAAE;MAAED,QAAQ,EAAE,CAAC,CAAC;MAAE,gBAAgB,EAAE,IAAI;MAAE,+BAA+B,EAAE,IAAI;MAAEjC,KAAK,EAAE;QAAEmC,OAAO,EAAE;MAAG;IAAA,CAAE,CAAC,EAClI7B,QAAA;EAER,CACG;AACH,CAAC;AACDZ,YAAY,CAAC0C,OAAO,GAAGA,OAAO;AAC9B1C,YAAY,CAAC2C,WAAW,GAAG,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}