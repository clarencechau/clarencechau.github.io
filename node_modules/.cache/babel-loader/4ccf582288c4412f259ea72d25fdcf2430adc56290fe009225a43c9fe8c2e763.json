{"ast":null,"code":"'use client';\n\nimport { useMediaQuery } from '@mantine/hooks';\nimport { useMantineTheme } from '../MantineThemeProvider/MantineThemeProvider.mjs';\nconst BREAKPOINTS = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\nfunction getFirstMatchingValue(value, biggestMatch) {\n  if (!biggestMatch) {\n    return value.base;\n  }\n  let index = BREAKPOINTS.indexOf(biggestMatch);\n  while (index >= 0) {\n    if (BREAKPOINTS[index] in value) {\n      return value[BREAKPOINTS[index]];\n    }\n    index -= 1;\n  }\n  return value.base;\n}\nfunction getFirstMatchingBreakpoint(matches) {\n  return matches.findLastIndex(v => v);\n}\nfunction useMatches(payload, options) {\n  const theme = useMantineTheme();\n  const xsMatches = useMediaQuery(`(min-width: ${theme.breakpoints.xs})`, false, options);\n  const smMatches = useMediaQuery(`(min-width: ${theme.breakpoints.sm})`, false, options);\n  const mdMatches = useMediaQuery(`(min-width: ${theme.breakpoints.md})`, false, options);\n  const lgMatches = useMediaQuery(`(min-width: ${theme.breakpoints.lg})`, false, options);\n  const xlMatches = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`, false, options);\n  const breakpoints = [xsMatches, smMatches, mdMatches, lgMatches, xlMatches];\n  const firstMatchingBreakpointIndex = getFirstMatchingBreakpoint(breakpoints);\n  return getFirstMatchingValue(payload, BREAKPOINTS[firstMatchingBreakpointIndex]);\n}\nexport { useMatches };","map":{"version":3,"names":["BREAKPOINTS","getFirstMatchingValue","value","biggestMatch","base","index","indexOf","getFirstMatchingBreakpoint","matches","findLastIndex","v","useMatches","payload","options","theme","useMantineTheme","xsMatches","useMediaQuery","breakpoints","xs","smMatches","sm","mdMatches","md","lgMatches","lg","xlMatches","xl","firstMatchingBreakpointIndex"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/core/MantineProvider/use-matches/use-matches.ts"],"sourcesContent":["import { useMediaQuery, UseMediaQueryOptions } from '@mantine/hooks';\nimport { useMantineTheme } from '../MantineThemeProvider';\nimport { MantineBreakpoint } from '../theme.types';\n\ntype UseMatchesInput<T> = Partial<Record<MantineBreakpoint, T>>;\n\nconst BREAKPOINTS = ['xs', 'sm', 'md', 'lg', 'xl'];\n\nfunction getFirstMatchingValue<T>(\n  value: UseMatchesInput<T>,\n  biggestMatch: MantineBreakpoint | undefined\n): T {\n  if (!biggestMatch) {\n    return value.base!;\n  }\n\n  let index = BREAKPOINTS.indexOf(biggestMatch);\n\n  while (index >= 0) {\n    if (BREAKPOINTS[index] in value) {\n      return value[BREAKPOINTS[index]]!;\n    }\n    index -= 1;\n  }\n\n  return value.base!;\n}\n\nfunction getFirstMatchingBreakpoint(matches: (boolean | undefined)[]) {\n  return matches.findLastIndex((v) => v);\n}\n\nexport function useMatches<T>(payload: UseMatchesInput<T>, options?: UseMediaQueryOptions) {\n  const theme = useMantineTheme();\n  const xsMatches = useMediaQuery(`(min-width: ${theme.breakpoints.xs})`, false, options);\n  const smMatches = useMediaQuery(`(min-width: ${theme.breakpoints.sm})`, false, options);\n  const mdMatches = useMediaQuery(`(min-width: ${theme.breakpoints.md})`, false, options);\n  const lgMatches = useMediaQuery(`(min-width: ${theme.breakpoints.lg})`, false, options);\n  const xlMatches = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`, false, options);\n\n  const breakpoints = [xsMatches, smMatches, mdMatches, lgMatches, xlMatches];\n  const firstMatchingBreakpointIndex = getFirstMatchingBreakpoint(breakpoints);\n  return getFirstMatchingValue(payload, BREAKPOINTS[firstMatchingBreakpointIndex]);\n}\n"],"mappings":";;;;AAGA,MAAMA,WAAW,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAClD,SAASC,qBAAqBA,CAACC,KAAK,EAAEC,YAAY,EAAE;EAClD,IAAI,CAACA,YAAY,EAAE;IACjB,OAAOD,KAAK,CAACE,IAAI;EACrB;EACE,IAAIC,KAAK,GAAGL,WAAW,CAACM,OAAO,CAACH,YAAY,CAAC;EAC7C,OAAOE,KAAK,IAAI,CAAC,EAAE;IACjB,IAAIL,WAAW,CAACK,KAAK,CAAC,IAAIH,KAAK,EAAE;MAC/B,OAAOA,KAAK,CAACF,WAAW,CAACK,KAAK,CAAC,CAAC;IACtC;IACIA,KAAK,IAAI,CAAC;EACd;EACE,OAAOH,KAAK,CAACE,IAAI;AACnB;AACA,SAASG,0BAA0BA,CAACC,OAAO,EAAE;EAC3C,OAAOA,OAAO,CAACC,aAAa,CAAEC,CAAC,IAAKA,CAAC,CAAC;AACxC;AACO,SAASC,UAAUA,CAACC,OAAO,EAAEC,OAAO,EAAE;EAC3C,MAAMC,KAAK,GAAGC,eAAe,CAAE;EAC/B,MAAMC,SAAS,GAAGC,aAAa,CAAE,eAAcH,KAAK,CAACI,WAAW,CAACC,EAAG,GAAE,EAAE,KAAK,EAAEN,OAAO,CAAC;EACvF,MAAMO,SAAS,GAAGH,aAAa,CAAE,eAAcH,KAAK,CAACI,WAAW,CAACG,EAAG,GAAE,EAAE,KAAK,EAAER,OAAO,CAAC;EACvF,MAAMS,SAAS,GAAGL,aAAa,CAAE,eAAcH,KAAK,CAACI,WAAW,CAACK,EAAG,GAAE,EAAE,KAAK,EAAEV,OAAO,CAAC;EACvF,MAAMW,SAAS,GAAGP,aAAa,CAAE,eAAcH,KAAK,CAACI,WAAW,CAACO,EAAG,GAAE,EAAE,KAAK,EAAEZ,OAAO,CAAC;EACvF,MAAMa,SAAS,GAAGT,aAAa,CAAE,eAAcH,KAAK,CAACI,WAAW,CAACS,EAAG,GAAE,EAAE,KAAK,EAAEd,OAAO,CAAC;EACvF,MAAMK,WAAW,GAAG,CAACF,SAAS,EAAEI,SAAS,EAAEE,SAAS,EAAEE,SAAS,EAAEE,SAAS,CAAC;EAC3E,MAAME,4BAA4B,GAAGrB,0BAA0B,CAACW,WAAW,CAAC;EAC5E,OAAOjB,qBAAqB,CAACW,OAAO,EAAEZ,WAAW,CAAC4B,4BAA4B,CAAC,CAAC;AAClF"},"metadata":{},"sourceType":"module","externalDependencies":[]}