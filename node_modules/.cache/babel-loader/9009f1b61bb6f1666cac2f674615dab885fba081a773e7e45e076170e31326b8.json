{"ast":null,"code":"'use client';\n\nfunction memoize(func) {\n  const cache = /* @__PURE__ */new Map();\n  return (...args) => {\n    const key = JSON.stringify(args);\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    const result = func(...args);\n    cache.set(key, result);\n    return result;\n  };\n}\nexport { memoize };","map":{"version":3,"names":["memoize","func","cache","Map","args","key","JSON","stringify","has","get","result","set"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/core/utils/memoize/memoize.ts"],"sourcesContent":["export function memoize<T extends (...args: any[]) => any>(\n  func: T\n): (...args: Parameters<T>) => ReturnType<T> {\n  const cache = new Map<string, ReturnType<T>>();\n\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const key = JSON.stringify(args);\n    if (cache.has(key)) {\n      return cache.get(key) as ReturnType<T>;\n    }\n\n    const result = func(...args);\n    cache.set(key, result);\n    return result;\n  };\n}\n"],"mappings":";;AACO,SAASA,OAAOA,CAACC,IAAI,EAAE;EAC5B,MAAMC,KAAK,GAAmB,mBAAIC,GAAG,CAAE;EACvC,OAAO,CAAC,GAAGC,IAAI,KAAK;IAClB,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IAChC,IAAIF,KAAK,CAACM,GAAG,CAACH,GAAG,CAAC,EAAE;MAClB,OAAOH,KAAK,CAACO,GAAG,CAACJ,GAAG,CAAC;IAC3B;IACI,MAAMK,MAAM,GAAGT,IAAI,CAAC,GAAGG,IAAI,CAAC;IAC5BF,KAAK,CAACS,GAAG,CAACN,GAAG,EAAEK,MAAM,CAAC;IACtB,OAAOA,MAAM;EACd;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}