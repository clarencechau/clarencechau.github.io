{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nfunction useInterval(fn, interval, {\n  autoInvoke = false\n} = {}) {\n  const [active, setActive] = useState(false);\n  const intervalRef = useRef();\n  const fnRef = useRef();\n  const start = () => {\n    setActive(old => {\n      if (!old && !intervalRef.current) {\n        intervalRef.current = window.setInterval(fnRef.current, interval);\n      }\n      return true;\n    });\n  };\n  const stop = () => {\n    setActive(false);\n    window.clearInterval(intervalRef.current);\n    intervalRef.current = void 0;\n  };\n  const toggle = () => {\n    if (active) {\n      stop();\n    } else {\n      start();\n    }\n  };\n  useEffect(() => {\n    fnRef.current = fn;\n    active && start();\n    return stop;\n  }, [fn, active, interval]);\n  useEffect(() => {\n    if (autoInvoke) {\n      start();\n    }\n  }, []);\n  return {\n    start,\n    stop,\n    toggle,\n    active\n  };\n}\nexport { useInterval };","map":{"version":3,"names":["useInterval","fn","interval","autoInvoke","active","setActive","useState","intervalRef","useRef","fnRef","start","old","current","window","setInterval","stop","clearInterval","toggle","useEffect"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/hooks/src/use-interval/use-interval.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\ninterface UseIntervalOptions {\n  /** If set, the interval will start automatically when the component is mounted, `false` by default */\n  autoInvoke?: boolean;\n}\n\nexport function useInterval(\n  fn: () => void,\n  interval: number,\n  { autoInvoke = false }: UseIntervalOptions = {}\n) {\n  const [active, setActive] = useState(false);\n  const intervalRef = useRef<number>();\n  const fnRef = useRef<() => void>();\n\n  const start = () => {\n    setActive((old) => {\n      if (!old && !intervalRef.current) {\n        intervalRef.current = window.setInterval(fnRef.current!, interval);\n      }\n      return true;\n    });\n  };\n\n  const stop = () => {\n    setActive(false);\n    window.clearInterval(intervalRef.current);\n    intervalRef.current = undefined;\n  };\n\n  const toggle = () => {\n    if (active) {\n      stop();\n    } else {\n      start();\n    }\n  };\n\n  useEffect(() => {\n    fnRef.current = fn;\n    active && start();\n    return stop;\n  }, [fn, active, interval]);\n\n  useEffect(() => {\n    if (autoInvoke) {\n      start();\n    }\n  }, []);\n\n  return { start, stop, toggle, active };\n}\n"],"mappings":";;;AAEO,SAASA,WAAWA,CAACC,EAAE,EAAEC,QAAQ,EAAE;EAAEC,UAAU,GAAG;AAAO,IAAG,EAAE,EAAE;EACrE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMC,WAAW,GAAGC,MAAM,CAAE;EAC5B,MAAMC,KAAK,GAAGD,MAAM,CAAE;EACtB,MAAME,KAAK,GAAGA,CAAA,KAAM;IAClBL,SAAS,CAAEM,GAAG,IAAK;MACjB,IAAI,CAACA,GAAG,IAAI,CAACJ,WAAW,CAACK,OAAO,EAAE;QAChCL,WAAW,CAACK,OAAO,GAAGC,MAAM,CAACC,WAAW,CAACL,KAAK,CAACG,OAAO,EAAEV,QAAQ,CAAC;MACzE;MACM,OAAO,IAAI;IACjB,CAAK,CAAC;EACH;EACD,MAAMa,IAAI,GAAGA,CAAA,KAAM;IACjBV,SAAS,CAAC,KAAK,CAAC;IAChBQ,MAAM,CAACG,aAAa,CAACT,WAAW,CAACK,OAAO,CAAC;IACzCL,WAAW,CAACK,OAAO,GAAG,KAAK,CAAC;EAC7B;EACD,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnB,IAAIb,MAAM,EAAE;MACVW,IAAI,CAAE;IACZ,CAAK,MAAM;MACLL,KAAK,CAAE;IACb;EACG;EACDQ,SAAS,CAAC,MAAM;IACdT,KAAK,CAACG,OAAO,GAAGX,EAAE;IAClBG,MAAM,IAAIM,KAAK,CAAE;IACjB,OAAOK,IAAI;EACZ,GAAE,CAACd,EAAE,EAAEG,MAAM,EAAEF,QAAQ,CAAC,CAAC;EAC1BgB,SAAS,CAAC,MAAM;IACd,IAAIf,UAAU,EAAE;MACdO,KAAK,CAAE;IACb;EACG,GAAE,EAAE,CAAC;EACN,OAAO;IAAEA,KAAK;IAAEK,IAAI;IAAEE,MAAM;IAAEb;EAAQ;AACxC"},"metadata":{},"sourceType":"module","externalDependencies":[]}