{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"onEntering\"],\n  _excluded2 = [\"autoFocus\", \"children\", \"className\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"TransitionProps\", \"variant\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport HTMLElementType from '@mui/utils/HTMLElementType';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport MenuList from \"../MenuList/index.js\";\nimport Popover, { PopoverPaper } from \"../Popover/index.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getMenuUtilityClass } from \"./menuClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nvar LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root'],\n    paper: ['paper'],\n    list: ['list']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\nvar MenuRoot = styled(Popover, {\n  shouldForwardProp: function shouldForwardProp(prop) {\n    return rootShouldForwardProp(prop) || prop === 'classes';\n  },\n  name: 'MuiMenu',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})({});\nexport var MenuPaper = styled(PopoverPaper, {\n  name: 'MuiMenu',\n  slot: 'Paper',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.paper;\n  }\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tappable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: 'calc(100% - 96px)',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch'\n});\nvar MenuMenuList = styled(MenuList, {\n  name: 'MuiMenu',\n  slot: 'List',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.list;\n  }\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nvar Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\n  var _slots$paper, _slotProps$paper;\n  var props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenu'\n  });\n  var _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n    children = props.children,\n    className = props.className,\n    _props$disableAutoFoc = props.disableAutoFocusItem,\n    disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n    _props$MenuListProps = props.MenuListProps,\n    MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps,\n    onClose = props.onClose,\n    open = props.open,\n    _props$PaperProps = props.PaperProps,\n    PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n    PopoverClasses = props.PopoverClasses,\n    _props$transitionDura = props.transitionDuration,\n    transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\n    _props$TransitionProp = props.TransitionProps,\n    _props$TransitionProp2 = _props$TransitionProp === void 0 ? {} : _props$TransitionProp,\n    onEntering = _props$TransitionProp2.onEntering,\n    TransitionProps = _objectWithoutProperties(_props$TransitionProp2, _excluded),\n    _props$variant = props.variant,\n    variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    other = _objectWithoutProperties(props, _excluded2);\n  var isRtl = useRtl();\n  var ownerState = _objectSpread(_objectSpread({}, props), {}, {\n    autoFocus: autoFocus,\n    disableAutoFocusItem: disableAutoFocusItem,\n    MenuListProps: MenuListProps,\n    onEntering: onEntering,\n    PaperProps: PaperProps,\n    transitionDuration: transitionDuration,\n    TransitionProps: TransitionProps,\n    variant: variant\n  });\n  var classes = useUtilityClasses(ownerState);\n  var autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  var menuListActionsRef = React.useRef(null);\n  var handleEntering = function handleEntering(element, isAppearing) {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, {\n        direction: isRtl ? 'rtl' : 'ltr'\n      });\n    }\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n  var handleListKeyDown = function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n  var activeItemIndex = -1;\n  // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n  React.Children.map(children, function (child, index) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  var PaperSlot = (_slots$paper = slots.paper) !== null && _slots$paper !== void 0 ? _slots$paper : MenuPaper;\n  var paperExternalSlotProps = (_slotProps$paper = slotProps.paper) !== null && _slotProps$paper !== void 0 ? _slotProps$paper : PaperProps;\n  var rootSlotProps = useSlotProps({\n    elementType: slots.root,\n    externalSlotProps: slotProps.root,\n    ownerState: ownerState,\n    className: [classes.root, className]\n  });\n  var paperSlotProps = useSlotProps({\n    elementType: PaperSlot,\n    externalSlotProps: paperExternalSlotProps,\n    ownerState: ownerState,\n    className: classes.paper\n  });\n  return /*#__PURE__*/_jsx(MenuRoot, _objectSpread(_objectSpread({\n    onClose: onClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: isRtl ? 'right' : 'left'\n    },\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    slots: {\n      paper: PaperSlot,\n      root: slots.root\n    },\n    slotProps: {\n      root: rootSlotProps,\n      paper: paperSlotProps\n    },\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    TransitionProps: _objectSpread({\n      onEntering: handleEntering\n    }, TransitionProps),\n    ownerState: ownerState\n  }, other), {}, {\n    classes: PopoverClasses,\n    children: /*#__PURE__*/_jsx(MenuMenuList, _objectSpread(_objectSpread({\n      onKeyDown: handleListKeyDown,\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant\n    }, MenuListProps), {}, {\n      className: clsx(classes.list, MenuListProps.className),\n      children: children\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the position of the menu.\n   */\n  anchorEl: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\n   * children are not focusable. If you set this prop to `false` focus will be placed\n   * on the parent modal container. This has severe accessibility implications\n   * and should only be considered if you manage focus otherwise.\n   * @default true\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\n   * unless `autoFocus` is also set to `false`. Not using the default means not\n   * following WAI-ARIA authoring practices. Please be considerate about possible\n   * accessibility implications.\n   * @default false\n   */\n  disableAutoFocusItem: PropTypes.bool,\n  /**\n   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.\n   * @default {}\n   */\n  MenuListProps: PropTypes.object,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    paper: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object,\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default Menu;","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","_excluded2","React","isFragment","PropTypes","clsx","composeClasses","HTMLElementType","useRtl","useSlotProps","MenuList","Popover","PopoverPaper","rootShouldForwardProp","styled","useDefaultProps","getMenuUtilityClass","jsx","_jsx","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","useUtilityClasses","ownerState","classes","slots","root","paper","list","MenuRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","MenuPaper","maxHeight","WebkitOverflowScrolling","MenuMenuList","outline","Menu","forwardRef","inProps","ref","_slots$paper","_slotProps$paper","_props$autoFocus","autoFocus","children","className","_props$disableAutoFoc","disableAutoFocusItem","_props$MenuListProps","MenuListProps","onClose","open","_props$PaperProps","PaperProps","PopoverClasses","_props$transitionDura","transitionDuration","_props$TransitionProp","TransitionProps","_props$TransitionProp2","onEntering","_props$variant","variant","_props$slots","_props$slotProps","slotProps","other","isRtl","autoFocusItem","menuListActionsRef","useRef","handleEntering","element","isAppearing","current","adjustStyleForScrollbar","direction","handleListKeyDown","event","key","preventDefault","activeItemIndex","Children","map","child","index","isValidElement","process","env","NODE_ENV","console","error","join","disabled","selected","PaperSlot","paperExternalSlotProps","rootSlotProps","elementType","externalSlotProps","paperSlotProps","anchorOrigin","transformOrigin","onKeyDown","actions","propTypes","anchorEl","oneOfType","func","bool","node","object","string","isRequired","shape","sx","arrayOf","oneOf","number","appear","enter","exit"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mui/material/Menu/Menu.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport HTMLElementType from '@mui/utils/HTMLElementType';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport MenuList from \"../MenuList/index.js\";\nimport Popover, { PopoverPaper } from \"../Popover/index.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getMenuUtilityClass } from \"./menuClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nconst LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    paper: ['paper'],\n    list: ['list']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\nconst MenuRoot = styled(Popover, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenu',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nexport const MenuPaper = styled(PopoverPaper, {\n  name: 'MuiMenu',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tappable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: 'calc(100% - 96px)',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch'\n});\nconst MenuMenuList = styled(MenuList, {\n  name: 'MuiMenu',\n  slot: 'List',\n  overridesResolver: (props, styles) => styles.list\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenu'\n  });\n  const {\n    autoFocus = true,\n    children,\n    className,\n    disableAutoFocusItem = false,\n    MenuListProps = {},\n    onClose,\n    open,\n    PaperProps = {},\n    PopoverClasses,\n    transitionDuration = 'auto',\n    TransitionProps: {\n      onEntering,\n      ...TransitionProps\n    } = {},\n    variant = 'selectedMenu',\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const isRtl = useRtl();\n  const ownerState = {\n    ...props,\n    autoFocus,\n    disableAutoFocusItem,\n    MenuListProps,\n    onEntering,\n    PaperProps,\n    transitionDuration,\n    TransitionProps,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  const menuListActionsRef = React.useRef(null);\n  const handleEntering = (element, isAppearing) => {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, {\n        direction: isRtl ? 'rtl' : 'ltr'\n      });\n    }\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n  let activeItemIndex = -1;\n  // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n  React.Children.map(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  const PaperSlot = slots.paper ?? MenuPaper;\n  const paperExternalSlotProps = slotProps.paper ?? PaperProps;\n  const rootSlotProps = useSlotProps({\n    elementType: slots.root,\n    externalSlotProps: slotProps.root,\n    ownerState,\n    className: [classes.root, className]\n  });\n  const paperSlotProps = useSlotProps({\n    elementType: PaperSlot,\n    externalSlotProps: paperExternalSlotProps,\n    ownerState,\n    className: classes.paper\n  });\n  return /*#__PURE__*/_jsx(MenuRoot, {\n    onClose: onClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: isRtl ? 'right' : 'left'\n    },\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    slots: {\n      paper: PaperSlot,\n      root: slots.root\n    },\n    slotProps: {\n      root: rootSlotProps,\n      paper: paperSlotProps\n    },\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    TransitionProps: {\n      onEntering: handleEntering,\n      ...TransitionProps\n    },\n    ownerState: ownerState,\n    ...other,\n    classes: PopoverClasses,\n    children: /*#__PURE__*/_jsx(MenuMenuList, {\n      onKeyDown: handleListKeyDown,\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant,\n      ...MenuListProps,\n      className: clsx(classes.list, MenuListProps.className),\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the position of the menu.\n   */\n  anchorEl: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\n   * children are not focusable. If you set this prop to `false` focus will be placed\n   * on the parent modal container. This has severe accessibility implications\n   * and should only be considered if you manage focus otherwise.\n   * @default true\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Menu contents, normally `MenuItem`s.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\n   * unless `autoFocus` is also set to `false`. Not using the default means not\n   * following WAI-ARIA authoring practices. Please be considerate about possible\n   * accessibility implications.\n   * @default false\n   */\n  disableAutoFocusItem: PropTypes.bool,\n  /**\n   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.\n   * @default {}\n   */\n  MenuListProps: PropTypes.object,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.\n   */\n  PopoverClasses: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    paper: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The length of the transition in `ms`, or 'auto'\n   * @default 'auto'\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object,\n  /**\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.\n   * @default 'selectedMenu'\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default Menu;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}