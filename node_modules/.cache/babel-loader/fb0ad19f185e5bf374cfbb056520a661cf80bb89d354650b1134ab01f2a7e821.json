{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useDisclosure } from '@mantine/hooks';\nimport 'react';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useDelayedHover } from '../Floating/use-delayed-hover.mjs';\nimport '@floating-ui/react';\nimport '../Floating/FloatingArrow/FloatingArrow.mjs';\nimport { Popover } from '../Popover/Popover.mjs';\nimport '../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { HoverCardContextProvider } from './HoverCard.context.mjs';\nimport { HoverCardDropdown } from './HoverCardDropdown/HoverCardDropdown.mjs';\nimport { HoverCardTarget } from './HoverCardTarget/HoverCardTarget.mjs';\nconst defaultProps = {\n  openDelay: 0,\n  closeDelay: 150,\n  initiallyOpened: false\n};\nfunction HoverCard(props) {\n  const {\n    children,\n    onOpen,\n    onClose,\n    openDelay,\n    closeDelay,\n    initiallyOpened,\n    ...others\n  } = useProps(\"HoverCard\", defaultProps, props);\n  const [opened, {\n    open,\n    close\n  }] = useDisclosure(initiallyOpened, {\n    onClose,\n    onOpen\n  });\n  const {\n    openDropdown,\n    closeDropdown\n  } = useDelayedHover({\n    open,\n    close,\n    openDelay,\n    closeDelay\n  });\n  return /* @__PURE__ */jsx(HoverCardContextProvider, {\n    value: {\n      openDropdown,\n      closeDropdown\n    },\n    children: /* @__PURE__ */jsx(Popover, {\n      ...others,\n      opened,\n      __staticSelector: \"HoverCard\",\n      children\n    })\n  });\n}\nHoverCard.displayName = \"@mantine/core/HoverCard\";\nHoverCard.Target = HoverCardTarget;\nHoverCard.Dropdown = HoverCardDropdown;\nHoverCard.extend = input => input;\nexport { HoverCard };","map":{"version":3,"names":["defaultProps","openDelay","closeDelay","initiallyOpened","HoverCard","props","children","onOpen","onClose","others","useProps","opened","open","close","useDisclosure","openDropdown","closeDropdown","useDelayedHover","jsx","HoverCardContextProvider","value","Popover","__staticSelector","displayName","Target","HoverCardTarget","Dropdown","HoverCardDropdown","extend","input"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/HoverCard/HoverCard.tsx"],"sourcesContent":["import { useDisclosure } from '@mantine/hooks';\nimport { ExtendComponent, Factory, useProps } from '../../core';\nimport { useDelayedHover } from '../Floating';\nimport { Popover, PopoverProps, PopoverStylesNames } from '../Popover';\nimport { PopoverCssVariables } from '../Popover/Popover';\nimport { HoverCardContextProvider } from './HoverCard.context';\nimport { HoverCardDropdown } from './HoverCardDropdown/HoverCardDropdown';\nimport { HoverCardTarget } from './HoverCardTarget/HoverCardTarget';\n\nexport interface HoverCardProps extends Omit<PopoverProps, 'opened' | 'onChange'> {\n  variant?: string;\n\n  /** Initial opened state */\n  initiallyOpened?: boolean;\n\n  /** Called when dropdown is opened */\n  onOpen?: () => void;\n\n  /** Called when dropdown is closed */\n  onClose?: () => void;\n\n  /** Open delay in ms */\n  openDelay?: number;\n\n  /** Close delay in ms */\n  closeDelay?: number;\n}\n\nexport type HoverCardFactory = Factory<{\n  props: HoverCardProps;\n  stylesNames: PopoverStylesNames;\n  vars: PopoverCssVariables;\n}>;\n\nconst defaultProps: Partial<HoverCardProps> = {\n  openDelay: 0,\n  closeDelay: 150,\n  initiallyOpened: false,\n};\n\nexport function HoverCard(props: HoverCardProps) {\n  const { children, onOpen, onClose, openDelay, closeDelay, initiallyOpened, ...others } = useProps(\n    'HoverCard',\n    defaultProps,\n    props\n  );\n  const [opened, { open, close }] = useDisclosure(initiallyOpened, { onClose, onOpen });\n  const { openDropdown, closeDropdown } = useDelayedHover({ open, close, openDelay, closeDelay });\n\n  return (\n    <HoverCardContextProvider value={{ openDropdown, closeDropdown }}>\n      <Popover {...others} opened={opened} __staticSelector=\"HoverCard\">\n        {children}\n      </Popover>\n    </HoverCardContextProvider>\n  );\n}\n\nHoverCard.displayName = '@mantine/core/HoverCard';\nHoverCard.Target = HoverCardTarget;\nHoverCard.Dropdown = HoverCardDropdown;\nHoverCard.extend = (input: ExtendComponent<HoverCardFactory>) => input;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AASA,MAAMA,YAAY,GAAG;EACnBC,SAAS,EAAE,CAAC;EACZC,UAAU,EAAE,GAAG;EACfC,eAAe,EAAE;AACnB,CAAC;AACM,SAASC,SAASA,CAACC,KAAK,EAAE;EAC/B,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,OAAO;IAAEP,SAAS;IAAEC,UAAU;IAAEC,eAAe;IAAE,GAAGM;EAAM,CAAE,GAAGC,QAAQ,CAC/F,WAAW,EACXV,YAAY,EACZK,KACD;EACD,MAAM,CAACM,MAAM,EAAE;IAAEC,IAAI;IAAEC;EAAO,EAAC,GAAGC,aAAa,CAACX,eAAe,EAAE;IAAEK,OAAO;IAAED;EAAM,CAAE,CAAC;EACrF,MAAM;IAAEQ,YAAY;IAAEC;EAAa,CAAE,GAAGC,eAAe,CAAC;IAAEL,IAAI;IAAEC,KAAK;IAAEZ,SAAS;IAAEC;EAAU,CAAE,CAAC;EAC/F,OAAuB,eAAAgB,GAAG,CAACC,wBAAwB,EAAE;IAAEC,KAAK,EAAE;MAAEL,YAAY;MAAEC;IAAe;IAAEV,QAAQ,EAAkB,eAAAY,GAAG,CAACG,OAAO,EAAE;MAAE,GAAGZ,MAAM;MAAEE,MAAM;MAAEW,gBAAgB,EAAE,WAAW;MAAEhB;IAAU;EAAC,CAAE,CAAC;AAC1M;AACAF,SAAS,CAACmB,WAAW,GAAG,yBAAyB;AACjDnB,SAAS,CAACoB,MAAM,GAAGC,eAAe;AAClCrB,SAAS,CAACsB,QAAQ,GAAGC,iBAAiB;AACtCvB,SAAS,CAACwB,MAAM,GAAIC,KAAK,IAAKA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}