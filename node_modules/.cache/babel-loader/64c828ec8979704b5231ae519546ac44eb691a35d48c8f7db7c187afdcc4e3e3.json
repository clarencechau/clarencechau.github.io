{"ast":null,"code":"import _slicedToArray from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/* eslint-disable import/prefer-default-export */\nimport { isPlainObject } from '@mui/utils/deepmerge';\nfunction isSerializable(val) {\n  return isPlainObject(val) || typeof val === 'undefined' || typeof val === 'string' || typeof val === 'boolean' || typeof val === 'number' || Array.isArray(val);\n}\n\n/**\n * `baseTheme` usually comes from `createTheme()` or `extendTheme()`.\n *\n * This function is intended to be used with zero-runtime CSS-in-JS like Pigment CSS\n * For example, in a Next.js project:\n *\n * ```js\n * // next.config.js\n * const { extendTheme } = require('@mui/material/styles');\n *\n * const theme = extendTheme();\n * // `.toRuntimeSource` is Pigment CSS specific to create a theme that is available at runtime.\n * theme.toRuntimeSource = stringifyTheme;\n *\n * module.exports = withPigment({\n *  theme,\n * });\n * ```\n */\nexport function stringifyTheme() {\n  var baseTheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var serializableTheme = _objectSpread({}, baseTheme);\n  function serializeTheme(object) {\n    var array = Object.entries(object);\n    // eslint-disable-next-line no-plusplus\n    for (var index = 0; index < array.length; index++) {\n      var _array$index = _slicedToArray(array[index], 2),\n        key = _array$index[0],\n        value = _array$index[1];\n      if (!isSerializable(value) || key.startsWith('unstable_')) {\n        delete object[key];\n      } else if (isPlainObject(value)) {\n        object[key] = _objectSpread({}, value);\n        serializeTheme(object[key]);\n      }\n    }\n  }\n  serializeTheme(serializableTheme);\n  return \"import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';\\n\\nconst theme = \".concat(JSON.stringify(serializableTheme, null, 2), \";\\n\\ntheme.breakpoints = createBreakpoints(theme.breakpoints || {});\\ntheme.transitions = createTransitions(theme.transitions || {});\\n\\nexport default theme;\");\n}","map":{"version":3,"names":["isPlainObject","isSerializable","val","Array","isArray","stringifyTheme","baseTheme","arguments","length","undefined","serializableTheme","_objectSpread","serializeTheme","object","array","Object","entries","index","_array$index","_slicedToArray","key","value","startsWith","concat","JSON","stringify"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mui/material/styles/stringifyTheme.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport { isPlainObject } from '@mui/utils/deepmerge';\nfunction isSerializable(val) {\n  return isPlainObject(val) || typeof val === 'undefined' || typeof val === 'string' || typeof val === 'boolean' || typeof val === 'number' || Array.isArray(val);\n}\n\n/**\n * `baseTheme` usually comes from `createTheme()` or `extendTheme()`.\n *\n * This function is intended to be used with zero-runtime CSS-in-JS like Pigment CSS\n * For example, in a Next.js project:\n *\n * ```js\n * // next.config.js\n * const { extendTheme } = require('@mui/material/styles');\n *\n * const theme = extendTheme();\n * // `.toRuntimeSource` is Pigment CSS specific to create a theme that is available at runtime.\n * theme.toRuntimeSource = stringifyTheme;\n *\n * module.exports = withPigment({\n *  theme,\n * });\n * ```\n */\nexport function stringifyTheme(baseTheme = {}) {\n  const serializableTheme = {\n    ...baseTheme\n  };\n  function serializeTheme(object) {\n    const array = Object.entries(object);\n    // eslint-disable-next-line no-plusplus\n    for (let index = 0; index < array.length; index++) {\n      const [key, value] = array[index];\n      if (!isSerializable(value) || key.startsWith('unstable_')) {\n        delete object[key];\n      } else if (isPlainObject(value)) {\n        object[key] = {\n          ...value\n        };\n        serializeTheme(object[key]);\n      }\n    }\n  }\n  serializeTheme(serializableTheme);\n  return `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';\n\nconst theme = ${JSON.stringify(serializableTheme, null, 2)};\n\ntheme.breakpoints = createBreakpoints(theme.breakpoints || {});\ntheme.transitions = createTransitions(theme.transitions || {});\n\nexport default theme;`;\n}"],"mappings":";;AAAA;AACA,SAASA,aAAa,QAAQ,sBAAsB;AACpD,SAASC,cAAcA,CAACC,GAAG,EAAE;EAC3B,OAAOF,aAAa,CAACE,GAAG,CAAC,IAAI,OAAOA,GAAG,KAAK,WAAW,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,SAAS,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC;AACjK;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,cAAcA,CAAA,EAAiB;EAAA,IAAhBC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC3C,IAAMG,iBAAiB,GAAAC,aAAA,KAClBL,SAAS,CACb;EACD,SAASM,cAAcA,CAACC,MAAM,EAAE;IAC9B,IAAMC,KAAK,GAAGC,MAAM,CAACC,OAAO,CAACH,MAAM,CAAC;IACpC;IACA,KAAK,IAAII,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGH,KAAK,CAACN,MAAM,EAAES,KAAK,EAAE,EAAE;MACjD,IAAAC,YAAA,GAAAC,cAAA,CAAqBL,KAAK,CAACG,KAAK,CAAC;QAA1BG,GAAG,GAAAF,YAAA;QAAEG,KAAK,GAAAH,YAAA;MACjB,IAAI,CAACjB,cAAc,CAACoB,KAAK,CAAC,IAAID,GAAG,CAACE,UAAU,CAAC,WAAW,CAAC,EAAE;QACzD,OAAOT,MAAM,CAACO,GAAG,CAAC;MACpB,CAAC,MAAM,IAAIpB,aAAa,CAACqB,KAAK,CAAC,EAAE;QAC/BR,MAAM,CAACO,GAAG,CAAC,GAAAT,aAAA,KACNU,KAAK,CACT;QACDT,cAAc,CAACC,MAAM,CAACO,GAAG,CAAC,CAAC;MAC7B;IACF;EACF;EACAR,cAAc,CAACF,iBAAiB,CAAC;EACjC,sIAAAa,MAAA,CAEcC,IAAI,CAACC,SAAS,CAACf,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;AAM1D"},"metadata":{},"sourceType":"module","externalDependencies":[]}