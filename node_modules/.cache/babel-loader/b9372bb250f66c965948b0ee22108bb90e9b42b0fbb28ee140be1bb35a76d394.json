{"ast":null,"code":"'use client';\n\nimport { parseThemeColor } from '../../../../MantineProvider/color-functions/parse-theme-color/parse-theme-color.mjs';\nimport 'react';\nimport 'react/jsx-runtime';\nimport '@mantine/hooks';\nimport '../../../../MantineProvider/Mantine.context.mjs';\nimport '../../../../MantineProvider/default-theme.mjs';\nimport '../../../../MantineProvider/MantineProvider.mjs';\nimport '../../../../MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../../MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nfunction colorResolver(color, theme) {\n  const parsedColor = parseThemeColor({\n    color,\n    theme\n  });\n  if (parsedColor.color === \"dimmed\") {\n    return \"var(--mantine-color-dimmed)\";\n  }\n  if (parsedColor.color === \"bright\") {\n    return \"var(--mantine-color-bright)\";\n  }\n  return parsedColor.variable ? `var(${parsedColor.variable})` : parsedColor.color;\n}\nfunction textColorResolver(color, theme) {\n  const parsedColor = parseThemeColor({\n    color,\n    theme\n  });\n  if (parsedColor.isThemeColor && parsedColor.shade === void 0) {\n    return `var(--mantine-color-${parsedColor.color}-text)`;\n  }\n  return colorResolver(color, theme);\n}\nexport { colorResolver, textColorResolver };","map":{"version":3,"names":["colorResolver","color","theme","parsedColor","parseThemeColor","variable","textColorResolver","isThemeColor","shade"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/core/Box/style-props/resolvers/color-resolver/color-resolver.ts"],"sourcesContent":["import { MantineTheme, parseThemeColor } from '../../../../MantineProvider';\n\nexport function colorResolver(color: unknown, theme: MantineTheme) {\n  const parsedColor = parseThemeColor({ color, theme });\n\n  if (parsedColor.color === 'dimmed') {\n    return 'var(--mantine-color-dimmed)';\n  }\n\n  if (parsedColor.color === 'bright') {\n    return 'var(--mantine-color-bright)';\n  }\n  return parsedColor.variable ? `var(${parsedColor.variable})` : parsedColor.color;\n}\n\nexport function textColorResolver(color: unknown, theme: MantineTheme) {\n  const parsedColor = parseThemeColor({ color, theme });\n\n  if (parsedColor.isThemeColor && parsedColor.shade === undefined) {\n    return `var(--mantine-color-${parsedColor.color}-text)`;\n  }\n\n  return colorResolver(color, theme);\n}\n"],"mappings":";;;;;;;;;;;AAEO,SAASA,aAAaA,CAACC,KAAK,EAAEC,KAAK,EAAE;EAC1C,MAAMC,WAAW,GAAGC,eAAe,CAAC;IAAEH,KAAK;IAAEC;EAAK,CAAE,CAAC;EACrD,IAAIC,WAAW,CAACF,KAAK,KAAK,QAAQ,EAAE;IAClC,OAAO,6BAA6B;EACxC;EACE,IAAIE,WAAW,CAACF,KAAK,KAAK,QAAQ,EAAE;IAClC,OAAO,6BAA6B;EACxC;EACE,OAAOE,WAAW,CAACE,QAAQ,GAAI,OAAMF,WAAW,CAACE,QAAS,GAAE,GAAGF,WAAW,CAACF,KAAK;AAClF;AACO,SAASK,iBAAiBA,CAACL,KAAK,EAAEC,KAAK,EAAE;EAC9C,MAAMC,WAAW,GAAGC,eAAe,CAAC;IAAEH,KAAK;IAAEC;EAAK,CAAE,CAAC;EACrD,IAAIC,WAAW,CAACI,YAAY,IAAIJ,WAAW,CAACK,KAAK,KAAK,KAAK,CAAC,EAAE;IAC5D,OAAQ,uBAAsBL,WAAW,CAACF,KAAM,QAAO;EAC3D;EACE,OAAOD,aAAa,CAACC,KAAK,EAAEC,KAAK,CAAC;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}