{"ast":null,"code":"'use client';\n\nimport { useRef, useContext, useCallback, useEffect } from 'react';\nimport { useColorScheme } from '@mantine/hooks';\nimport { MantineContext, useMantineStyleNonce } from '../Mantine.context.mjs';\nfunction disableTransition(nonce) {\n  const style = document.createElement(\"style\");\n  style.setAttribute(\"data-mantine-styles\", \"inline\");\n  style.innerHTML = \"*, *::before, *::after {transition: none !important;}\";\n  style.setAttribute(\"data-mantine-disable-transition\", \"true\");\n  nonce && style.setAttribute(\"nonce\", nonce);\n  document.head.appendChild(style);\n  const clear = () => document.querySelectorAll(\"[data-mantine-disable-transition]\").forEach(element => element.remove());\n  return clear;\n}\nfunction useMantineColorScheme({\n  keepTransitions\n} = {}) {\n  const clearStylesRef = useRef();\n  const timeoutRef = useRef();\n  const ctx = useContext(MantineContext);\n  const nonce = useMantineStyleNonce();\n  const nonceValue = useRef(nonce?.());\n  if (!ctx) {\n    throw new Error(\"[@mantine/core] MantineProvider was not found in tree\");\n  }\n  const setColorScheme = value => {\n    ctx.setColorScheme(value);\n    clearStylesRef.current = keepTransitions ? () => {} : disableTransition(nonceValue.current);\n    window.clearTimeout(timeoutRef.current);\n    timeoutRef.current = window.setTimeout(() => {\n      clearStylesRef.current?.();\n    }, 10);\n  };\n  const clearColorScheme = () => {\n    ctx.clearColorScheme();\n    clearStylesRef.current = keepTransitions ? () => {} : disableTransition(nonceValue.current);\n    window.clearTimeout(timeoutRef.current);\n    timeoutRef.current = window.setTimeout(() => {\n      clearStylesRef.current?.();\n    }, 10);\n  };\n  const osColorScheme = useColorScheme(\"light\", {\n    getInitialValueInEffect: false\n  });\n  const computedColorScheme = ctx.colorScheme === \"auto\" ? osColorScheme : ctx.colorScheme;\n  const toggleColorScheme = useCallback(() => setColorScheme(computedColorScheme === \"light\" ? \"dark\" : \"light\"), [setColorScheme, computedColorScheme]);\n  useEffect(() => () => {\n    clearStylesRef.current?.();\n    window.clearTimeout(timeoutRef.current);\n  }, []);\n  return {\n    colorScheme: ctx.colorScheme,\n    setColorScheme,\n    clearColorScheme,\n    toggleColorScheme\n  };\n}\nexport { useMantineColorScheme };","map":{"version":3,"names":["disableTransition","nonce","style","document","createElement","setAttribute","innerHTML","head","appendChild","clear","querySelectorAll","forEach","element","remove","useMantineColorScheme","keepTransitions","clearStylesRef","useRef","timeoutRef","ctx","useContext","MantineContext","useMantineStyleNonce","nonceValue","Error","setColorScheme","value","current","window","clearTimeout","setTimeout","clearColorScheme","osColorScheme","useColorScheme","getInitialValueInEffect","computedColorScheme","colorScheme","toggleColorScheme","useCallback","useEffect"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/core/MantineProvider/use-mantine-color-scheme/use-mantine-color-scheme.ts"],"sourcesContent":["import { useCallback, useContext, useEffect, useRef } from 'react';\nimport { useColorScheme } from '@mantine/hooks';\nimport { MantineContext, useMantineStyleNonce } from '../Mantine.context';\nimport { MantineColorScheme } from '../theme.types';\n\nfunction disableTransition(nonce: string | undefined) {\n  const style = document.createElement('style');\n  style.setAttribute('data-mantine-styles', 'inline');\n  style.innerHTML = '*, *::before, *::after {transition: none !important;}';\n  style.setAttribute('data-mantine-disable-transition', 'true');\n  nonce && style.setAttribute('nonce', nonce);\n\n  document.head.appendChild(style);\n  const clear = () =>\n    document\n      .querySelectorAll('[data-mantine-disable-transition]')\n      .forEach((element) => element.remove());\n  return clear;\n}\n\nexport function useMantineColorScheme({ keepTransitions }: { keepTransitions?: boolean } = {}) {\n  const clearStylesRef = useRef<() => void>();\n  const timeoutRef = useRef<number>();\n  const ctx = useContext(MantineContext);\n  const nonce = useMantineStyleNonce();\n  const nonceValue = useRef(nonce?.());\n\n  if (!ctx) {\n    throw new Error('[@mantine/core] MantineProvider was not found in tree');\n  }\n\n  const setColorScheme = (value: MantineColorScheme) => {\n    ctx.setColorScheme(value);\n    clearStylesRef.current = keepTransitions ? () => {} : disableTransition(nonceValue.current);\n    window.clearTimeout(timeoutRef.current);\n    timeoutRef.current = window.setTimeout(() => {\n      clearStylesRef.current?.();\n    }, 10);\n  };\n\n  const clearColorScheme = () => {\n    ctx.clearColorScheme();\n    clearStylesRef.current = keepTransitions ? () => {} : disableTransition(nonceValue.current);\n    window.clearTimeout(timeoutRef.current);\n    timeoutRef.current = window.setTimeout(() => {\n      clearStylesRef.current?.();\n    }, 10);\n  };\n\n  const osColorScheme = useColorScheme('light', { getInitialValueInEffect: false });\n  const computedColorScheme = ctx.colorScheme === 'auto' ? osColorScheme : ctx.colorScheme;\n\n  const toggleColorScheme = useCallback(\n    () => setColorScheme(computedColorScheme === 'light' ? 'dark' : 'light'),\n    [setColorScheme, computedColorScheme]\n  );\n\n  useEffect(\n    () => () => {\n      clearStylesRef.current?.();\n      window.clearTimeout(timeoutRef.current);\n    },\n    []\n  );\n\n  return {\n    colorScheme: ctx.colorScheme,\n    setColorScheme,\n    clearColorScheme,\n    toggleColorScheme,\n  };\n}\n"],"mappings":";;;;;AAIA,SAASA,iBAAiBA,CAACC,KAAK,EAAE;EAChC,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAC7CF,KAAK,CAACG,YAAY,CAAC,qBAAqB,EAAE,QAAQ,CAAC;EACnDH,KAAK,CAACI,SAAS,GAAG,uDAAuD;EACzEJ,KAAK,CAACG,YAAY,CAAC,iCAAiC,EAAE,MAAM,CAAC;EAC7DJ,KAAK,IAAIC,KAAK,CAACG,YAAY,CAAC,OAAO,EAAEJ,KAAK,CAAC;EAC3CE,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,KAAK,CAAC;EAChC,MAAMO,KAAK,GAAGA,CAAA,KAAMN,QAAQ,CAACO,gBAAgB,CAAC,mCAAmC,CAAC,CAACC,OAAO,CAAEC,OAAO,IAAKA,OAAO,CAACC,MAAM,EAAE,CAAC;EACzH,OAAOJ,KAAK;AACd;AACO,SAASK,qBAAqBA,CAAC;EAAEC;AAAiB,IAAG,EAAE,EAAE;EAC9D,MAAMC,cAAc,GAAGC,MAAM,CAAE;EAC/B,MAAMC,UAAU,GAAGD,MAAM,CAAE;EAC3B,MAAME,GAAG,GAAGC,UAAU,CAACC,cAAc,CAAC;EACtC,MAAMpB,KAAK,GAAGqB,oBAAoB,CAAE;EACpC,MAAMC,UAAU,GAAGN,MAAM,CAAChB,KAAK,IAAI,CAAC;EACpC,IAAI,CAACkB,GAAG,EAAE;IACR,MAAM,IAAIK,KAAK,CAAC,uDAAuD,CAAC;EAC5E;EACE,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChCP,GAAG,CAACM,cAAc,CAACC,KAAK,CAAC;IACzBV,cAAc,CAACW,OAAO,GAAGZ,eAAe,GAAG,MAAM,CACrD,CAAK,GAAGf,iBAAiB,CAACuB,UAAU,CAACI,OAAO,CAAC;IACzCC,MAAM,CAACC,YAAY,CAACX,UAAU,CAACS,OAAO,CAAC;IACvCT,UAAU,CAACS,OAAO,GAAGC,MAAM,CAACE,UAAU,CAAC,MAAM;MAC3Cd,cAAc,CAACW,OAAO,GAAI;IAC3B,GAAE,EAAE,CAAC;EACP;EACD,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7BZ,GAAG,CAACY,gBAAgB,CAAE;IACtBf,cAAc,CAACW,OAAO,GAAGZ,eAAe,GAAG,MAAM,CACrD,CAAK,GAAGf,iBAAiB,CAACuB,UAAU,CAACI,OAAO,CAAC;IACzCC,MAAM,CAACC,YAAY,CAACX,UAAU,CAACS,OAAO,CAAC;IACvCT,UAAU,CAACS,OAAO,GAAGC,MAAM,CAACE,UAAU,CAAC,MAAM;MAC3Cd,cAAc,CAACW,OAAO,GAAI;IAC3B,GAAE,EAAE,CAAC;EACP;EACD,MAAMK,aAAa,GAAGC,cAAc,CAAC,OAAO,EAAE;IAAEC,uBAAuB,EAAE;EAAK,CAAE,CAAC;EACjF,MAAMC,mBAAmB,GAAGhB,GAAG,CAACiB,WAAW,KAAK,MAAM,GAAGJ,aAAa,GAAGb,GAAG,CAACiB,WAAW;EACxF,MAAMC,iBAAiB,GAAGC,WAAW,CACnC,MAAMb,cAAc,CAACU,mBAAmB,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,EACxE,CAACV,cAAc,EAAEU,mBAAmB,CACrC;EACDI,SAAS,CACP,MAAM,MAAM;IACVvB,cAAc,CAACW,OAAO,GAAI;IAC1BC,MAAM,CAACC,YAAY,CAACX,UAAU,CAACS,OAAO,CAAC;EACxC,GACD,EACD;EACD,OAAO;IACLS,WAAW,EAAEjB,GAAG,CAACiB,WAAW;IAC5BX,cAAc;IACdM,gBAAgB;IAChBM;EACD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}