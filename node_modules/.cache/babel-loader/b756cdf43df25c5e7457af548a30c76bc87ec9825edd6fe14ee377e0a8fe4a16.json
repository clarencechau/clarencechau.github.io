{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { getThemeProps } from \"../useThemeProps/index.js\";\nimport useTheme from \"../useThemeWithoutDefault/index.js\";\n// TODO React 17: Remove `useMediaQueryOld` once React 17 support is removed\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  var _React$useState = React.useState(function () {\n      if (noSsr && matchMedia) {\n        return matchMedia(query).matches;\n      }\n      if (ssrMatchMedia) {\n        return ssrMatchMedia(query).matches;\n      }\n\n      // Once the component is mounted, we rely on the\n      // event listeners to return the correct matches value.\n      return defaultMatches;\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    match = _React$useState2[0],\n    setMatch = _React$useState2[1];\n  useEnhancedEffect(function () {\n    if (!matchMedia) {\n      return undefined;\n    }\n    var queryList = matchMedia(query);\n    var updateMatch = function updateMatch() {\n      setMatch(queryList.matches);\n    };\n    updateMatch();\n    queryList.addEventListener('change', updateMatch);\n    return function () {\n      queryList.removeEventListener('change', updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nvar safeReact = _objectSpread({}, React);\nvar maybeReactUseSyncExternalStore = safeReact.useSyncExternalStore;\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  var getDefaultSnapshot = React.useCallback(function () {\n    return defaultMatches;\n  }, [defaultMatches]);\n  var getServerSnapshot = React.useMemo(function () {\n    if (noSsr && matchMedia) {\n      return function () {\n        return matchMedia(query).matches;\n      };\n    }\n    if (ssrMatchMedia !== null) {\n      var _ssrMatchMedia = ssrMatchMedia(query),\n        matches = _ssrMatchMedia.matches;\n      return function () {\n        return matches;\n      };\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  var _React$useMemo = React.useMemo(function () {\n      if (matchMedia === null) {\n        return [getDefaultSnapshot, function () {\n          return function () {};\n        }];\n      }\n      var mediaQueryList = matchMedia(query);\n      return [function () {\n        return mediaQueryList.matches;\n      }, function (notify) {\n        mediaQueryList.addEventListener('change', notify);\n        return function () {\n          mediaQueryList.removeEventListener('change', notify);\n        };\n      }];\n    }, [getDefaultSnapshot, matchMedia, query]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    getSnapshot = _React$useMemo2[0],\n    subscribe = _React$useMemo2[1];\n  var match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function unstable_createUseMediaQuery() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var themeId = params.themeId;\n  return function useMediaQuery(queryInput) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var theme = useTheme();\n    if (theme && themeId) {\n      theme = theme[themeId] || theme;\n    }\n    // Wait for jsdom to support the match media feature.\n    // All the browsers MUI support have this built-in.\n    // This defensive check is here for simplicity.\n    // Most of the time, the match media logic isn't central to people tests.\n    var supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n    var _getThemeProps = getThemeProps({\n        name: 'MuiUseMediaQuery',\n        props: options,\n        theme: theme\n      }),\n      _getThemeProps$defaul = _getThemeProps.defaultMatches,\n      defaultMatches = _getThemeProps$defaul === void 0 ? false : _getThemeProps$defaul,\n      _getThemeProps$matchM = _getThemeProps.matchMedia,\n      matchMedia = _getThemeProps$matchM === void 0 ? supportMatchMedia ? window.matchMedia : null : _getThemeProps$matchM,\n      _getThemeProps$ssrMat = _getThemeProps.ssrMatchMedia,\n      ssrMatchMedia = _getThemeProps$ssrMat === void 0 ? null : _getThemeProps$ssrMat,\n      _getThemeProps$noSsr = _getThemeProps.noSsr,\n      noSsr = _getThemeProps$noSsr === void 0 ? false : _getThemeProps$noSsr;\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof queryInput === 'function' && theme === null) {\n        console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n      }\n    }\n    var query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n    query = query.replace(/^@media( ?)/m, '');\n    var useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n    var match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React.useDebugValue({\n        query: query,\n        match: match\n      });\n    }\n    return match;\n  };\n}\nvar useMediaQuery = unstable_createUseMediaQuery();\nexport default useMediaQuery;","map":{"version":3,"names":["_objectSpread","_slicedToArray","React","useEnhancedEffect","getThemeProps","useTheme","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","_React$useState","useState","matches","_React$useState2","match","setMatch","undefined","queryList","updateMatch","addEventListener","removeEventListener","safeReact","maybeReactUseSyncExternalStore","useSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","useCallback","getServerSnapshot","useMemo","_ssrMatchMedia","_React$useMemo","mediaQueryList","notify","_React$useMemo2","getSnapshot","subscribe","unstable_createUseMediaQuery","params","arguments","length","themeId","useMediaQuery","queryInput","options","theme","supportMatchMedia","window","_getThemeProps","name","props","_getThemeProps$defaul","_getThemeProps$matchM","_getThemeProps$ssrMat","_getThemeProps$noSsr","process","env","NODE_ENV","console","error","join","replace","useMediaQueryImplementation","useDebugValue"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mui/system/esm/useMediaQuery/useMediaQuery.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { getThemeProps } from \"../useThemeProps/index.js\";\nimport useTheme from \"../useThemeWithoutDefault/index.js\";\n// TODO React 17: Remove `useMediaQueryOld` once React 17 support is removed\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    if (!matchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      setMatch(queryList.matches);\n    };\n    updateMatch();\n    queryList.addEventListener('change', updateMatch);\n    return () => {\n      queryList.removeEventListener('change', updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseSyncExternalStore = safeReact.useSyncExternalStore;\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      mediaQueryList.addEventListener('change', notify);\n      return () => {\n        mediaQueryList.removeEventListener('change', notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function unstable_createUseMediaQuery(params = {}) {\n  const {\n    themeId\n  } = params;\n  return function useMediaQuery(queryInput, options = {}) {\n    let theme = useTheme();\n    if (theme && themeId) {\n      theme = theme[themeId] || theme;\n    }\n    // Wait for jsdom to support the match media feature.\n    // All the browsers MUI support have this built-in.\n    // This defensive check is here for simplicity.\n    // Most of the time, the match media logic isn't central to people tests.\n    const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n    const {\n      defaultMatches = false,\n      matchMedia = supportMatchMedia ? window.matchMedia : null,\n      ssrMatchMedia = null,\n      noSsr = false\n    } = getThemeProps({\n      name: 'MuiUseMediaQuery',\n      props: options,\n      theme\n    });\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof queryInput === 'function' && theme === null) {\n        console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n      }\n    }\n    let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n    query = query.replace(/^@media( ?)/m, '');\n    const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n    const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React.useDebugValue({\n        query,\n        match\n      });\n    }\n    return match;\n  };\n}\nconst useMediaQuery = unstable_createUseMediaQuery();\nexport default useMediaQuery;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}