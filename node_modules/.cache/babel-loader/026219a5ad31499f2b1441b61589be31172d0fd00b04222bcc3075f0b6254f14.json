{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport 'react';\nimport { getFontSize } from '../../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useInputWrapperContext } from '../InputWrapper.context.mjs';\nimport classes from '../Input.module.css.mjs';\nconst defaultProps = {\n  labelElement: \"label\"\n};\nconst varsResolver = createVarsResolver((_, {\n  size\n}) => ({\n  label: {\n    \"--input-label-size\": getFontSize(size),\n    \"--input-asterisk-color\": void 0\n  }\n}));\nconst InputLabel = factory((_props, ref) => {\n  const props = useProps(\"InputLabel\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    labelElement,\n    size,\n    required,\n    htmlFor,\n    onMouseDown,\n    children,\n    __staticSelector,\n    variant,\n    mod,\n    ...others\n  } = useProps(\"InputLabel\", defaultProps, props);\n  const _getStyles = useStyles({\n    name: [\"InputWrapper\", __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: \"label\",\n    vars,\n    varsResolver\n  });\n  const ctx = useInputWrapperContext();\n  const getStyles = ctx?.getStyles || _getStyles;\n  return /* @__PURE__ */jsxs(Box, {\n    ...getStyles(\"label\", ctx?.getStyles ? {\n      className,\n      style\n    } : void 0),\n    component: labelElement,\n    variant,\n    size,\n    ref,\n    htmlFor: labelElement === \"label\" ? htmlFor : void 0,\n    mod: [{\n      required\n    }, mod],\n    onMouseDown: event => {\n      onMouseDown?.(event);\n      if (!event.defaultPrevented && event.detail > 1) {\n        event.preventDefault();\n      }\n    },\n    ...others,\n    children: [children, required && /* @__PURE__ */jsx(\"span\", {\n      ...getStyles(\"required\"),\n      \"aria-hidden\": true,\n      children: \" *\"\n    })]\n  });\n});\nInputLabel.classes = classes;\nInputLabel.displayName = \"@mantine/core/InputLabel\";\nexport { InputLabel };","map":{"version":3,"names":["defaultProps","labelElement","varsResolver","createVarsResolver","_","size","label","getFontSize","InputLabel","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","required","htmlFor","onMouseDown","children","__staticSelector","variant","mod","others","_getStyles","useStyles","name","classes","rootSelector","ctx","useInputWrapperContext","getStyles","jsxs","Box","component","event","defaultPrevented","detail","preventDefault","jsx","displayName"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/core/src/components/Input/InputLabel/InputLabel.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { useInputWrapperContext } from '../InputWrapper.context';\nimport classes from '../Input.module.css';\n\nexport type InputLabelStylesNames = 'label' | 'required';\nexport type InputLabelCssVariables = {\n  label: '--input-asterisk-color' | '--input-label-size';\n};\n\nexport interface InputLabelProps\n  extends BoxProps,\n    StylesApiProps<InputLabelFactory>,\n    ElementProps<'label'> {\n  __staticSelector?: string;\n\n  /** Determines whether the required asterisk should be displayed  */\n  required?: boolean;\n\n  /** Controls label `font-size`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Root element of the label, `'label'` by default */\n  labelElement?: 'label' | 'div';\n}\n\nexport type InputLabelFactory = Factory<{\n  props: InputLabelProps;\n  ref: HTMLLabelElement;\n  stylesNames: InputLabelStylesNames;\n  vars: InputLabelCssVariables;\n}>;\n\nconst defaultProps: Partial<InputLabelProps> = {\n  labelElement: 'label',\n};\n\nconst varsResolver = createVarsResolver<InputLabelFactory>((_, { size }) => ({\n  label: {\n    '--input-label-size': getFontSize(size),\n    '--input-asterisk-color': undefined,\n  },\n}));\n\nexport const InputLabel = factory<InputLabelFactory>((_props, ref) => {\n  const props = useProps('InputLabel', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    labelElement,\n    size,\n    required,\n    htmlFor,\n    onMouseDown,\n    children,\n    __staticSelector,\n    variant,\n    mod,\n    ...others\n  } = useProps('InputLabel', defaultProps, props);\n\n  const _getStyles = useStyles<InputLabelFactory>({\n    name: ['InputWrapper', __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'label',\n    vars,\n    varsResolver,\n  });\n\n  const ctx = useInputWrapperContext();\n  const getStyles = ctx?.getStyles || _getStyles;\n\n  return (\n    <Box\n      {...getStyles('label', ctx?.getStyles ? { className, style } : undefined)}\n      component={labelElement as 'label'}\n      variant={variant}\n      size={size}\n      ref={ref}\n      htmlFor={labelElement === 'label' ? htmlFor : undefined}\n      mod={[{ required }, mod]}\n      onMouseDown={(event) => {\n        onMouseDown?.(event);\n        if (!event.defaultPrevented && event.detail > 1) {\n          event.preventDefault();\n        }\n      }}\n      {...others}\n    >\n      {children}\n      {required && (\n        <span {...getStyles('required')} aria-hidden>\n          {' *'}\n        </span>\n      )}\n    </Box>\n  );\n});\n\nInputLabel.classes = classes;\nInputLabel.displayName = '@mantine/core/InputLabel';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAYA,MAAMA,YAAY,GAAG;EACnBC,YAAY,EAAE;AAChB,CAAC;AACD,MAAMC,YAAY,GAAGC,kBAAkB,CAAC,CAACC,CAAC,EAAE;EAAEC;AAAI,CAAE,MAAM;EACxDC,KAAK,EAAE;IACL,oBAAoB,EAAEC,WAAW,CAACF,IAAI,CAAC;IACvC,wBAAwB,EAAE,KAAK;EACnC;AACA,CAAC,CAAC,CAAC;AACS,MAACG,UAAU,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EACjD,MAAMC,KAAK,GAAGC,QAAQ,CAAC,YAAY,EAAEb,YAAY,EAAEU,MAAM,CAAC;EAC1D,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJlB,YAAY;IACZI,IAAI;IACJe,QAAQ;IACRC,OAAO;IACPC,WAAW;IACXC,QAAQ;IACRC,gBAAgB;IAChBC,OAAO;IACPC,GAAG;IACH,GAAGC;EACJ,IAAGd,QAAQ,CAAC,YAAY,EAAEb,YAAY,EAAEY,KAAK,CAAC;EAC/C,MAAMgB,UAAU,GAAGC,SAAS,CAAC;IAC3BC,IAAI,EAAE,CAAC,cAAc,EAAEN,gBAAgB,CAAC;IACxCZ,KAAK;IACLmB,OAAO;IACPhB,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRc,YAAY,EAAE,OAAO;IACrBb,IAAI;IACJjB;EACJ,CAAG,CAAC;EACF,MAAM+B,GAAG,GAAGC,sBAAsB,CAAE;EACpC,MAAMC,SAAS,GAAGF,GAAG,EAAEE,SAAS,IAAIP,UAAU;EAC9C,sBAAuBQ,IAAI,CACzBC,GAAG,EACH;IACE,GAAGF,SAAS,CAAC,OAAO,EAAEF,GAAG,EAAEE,SAAS,GAAG;MAAEpB,SAAS;MAAEC;IAAK,CAAE,GAAG,KAAK,CAAC,CAAC;IACrEsB,SAAS,EAAErC,YAAY;IACvBwB,OAAO;IACPpB,IAAI;IACJM,GAAG;IACHU,OAAO,EAAEpB,YAAY,KAAK,OAAO,GAAGoB,OAAO,GAAG,KAAK,CAAC;IACpDK,GAAG,EAAE,CAAC;MAAEN;IAAU,GAAEM,GAAG,CAAC;IACxBJ,WAAW,EAAGiB,KAAK,IAAK;MACtBjB,WAAW,GAAGiB,KAAK,CAAC;MACpB,IAAI,CAACA,KAAK,CAACC,gBAAgB,IAAID,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;QAC/CF,KAAK,CAACG,cAAc,CAAE;MAChC;IACO;IACD,GAAGf,MAAM;IACTJ,QAAQ,EAAE,CACRA,QAAQ,EACRH,QAAQ,mBAAoBuB,GAAG,CAAC,MAAM,EAAE;MAAE,GAAGR,SAAS,CAAC,UAAU,CAAC;MAAE,aAAa,EAAE,IAAI;MAAEZ,QAAQ,EAAE;IAAM;EAEjH,CACG;AACH,CAAC;AACDf,UAAU,CAACuB,OAAO,GAAGA,OAAO;AAC5BvB,UAAU,CAACoC,WAAW,GAAG,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}