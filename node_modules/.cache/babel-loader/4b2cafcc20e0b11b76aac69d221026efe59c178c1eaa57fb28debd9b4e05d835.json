{"ast":null,"code":"import { useRef, useState, useCallback, useEffect } from 'react';\nimport EmblaCarousel from 'embla-carousel';\nfunction canUseDOM() {\n  return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n}\nfunction sortAndMapPluginToOptions(plugins) {\n  return plugins.concat().sort(function (a, b) {\n    return a.name > b.name ? 1 : -1;\n  }).map(function (plugin) {\n    return plugin.options;\n  });\n}\nfunction arePluginsEqual(pluginsA, pluginsB) {\n  if (pluginsA.length !== pluginsB.length) return false;\n  var areEqual = EmblaCarousel.optionsHandler().areEqual;\n  var optionsA = sortAndMapPluginToOptions(pluginsA);\n  var optionsB = sortAndMapPluginToOptions(pluginsB);\n  return optionsA.every(function (optionA, index) {\n    var optionB = optionsB[index];\n    return areEqual(optionA, optionB);\n  });\n}\nfunction useEmblaCarousel(options, plugins) {\n  if (options === void 0) {\n    options = {};\n  }\n  if (plugins === void 0) {\n    plugins = [];\n  }\n  var optionsHandler = useRef(EmblaCarousel.optionsHandler());\n  var storedOptions = useRef(options);\n  var storedPlugins = useRef(plugins);\n  var _a = useState(),\n    embla = _a[0],\n    setEmbla = _a[1];\n  var _b = useState(),\n    viewport = _b[0],\n    setViewport = _b[1];\n  var reInit = useCallback(function () {\n    if (embla) embla.reInit(storedOptions.current, storedPlugins.current);\n  }, [embla]);\n  useEffect(function () {\n    if (canUseDOM() && viewport) {\n      EmblaCarousel.globalOptions = useEmblaCarousel.globalOptions;\n      var newEmbla_1 = EmblaCarousel(viewport, storedOptions.current, storedPlugins.current);\n      setEmbla(newEmbla_1);\n      return function () {\n        return newEmbla_1.destroy();\n      };\n    } else {\n      setEmbla(undefined);\n    }\n  }, [viewport, setEmbla]);\n  useEffect(function () {\n    if (optionsHandler.current.areEqual(storedOptions.current, options)) return;\n    storedOptions.current = options;\n    reInit();\n  }, [options, reInit]);\n  useEffect(function () {\n    if (arePluginsEqual(storedPlugins.current, plugins)) return;\n    storedPlugins.current = plugins;\n    reInit();\n  }, [plugins, reInit]);\n  return [setViewport, embla];\n}\nuseEmblaCarousel.globalOptions = undefined;\nexport { useEmblaCarousel as default };","map":{"version":3,"names":["canUseDOM","window","document","createElement","sortAndMapPluginToOptions","plugins","concat","sort","a","b","name","map","plugin","options","arePluginsEqual","pluginsA","pluginsB","length","areEqual","EmblaCarousel","optionsHandler","optionsA","optionsB","every","optionA","index","optionB","useEmblaCarousel","useRef","storedOptions","storedPlugins","_a","useState","embla","setEmbla","_b","viewport","setViewport","reInit","useCallback","current","useEffect","globalOptions","newEmbla_1","destroy","undefined"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel-react/src/components/utils.ts","/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/embla-carousel-react/src/components/index.ts"],"sourcesContent":["import EmblaCarousel, { EmblaPluginType } from 'embla-carousel'\n\nexport function canUseDOM(): boolean {\n  return !!(\n    typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement\n  )\n}\n\nexport function sortAndMapPluginToOptions(\n  plugins: EmblaPluginType[],\n): EmblaPluginType['options'][] {\n  return plugins\n    .concat()\n    .sort((a, b) => (a.name > b.name ? 1 : -1))\n    .map((plugin) => plugin.options)\n}\n\nexport function arePluginsEqual(\n  pluginsA: EmblaPluginType[],\n  pluginsB: EmblaPluginType[],\n): boolean {\n  if (pluginsA.length !== pluginsB.length) return false\n\n  const { areEqual } = EmblaCarousel.optionsHandler()\n  const optionsA = sortAndMapPluginToOptions(pluginsA)\n  const optionsB = sortAndMapPluginToOptions(pluginsB)\n\n  return optionsA.every((optionA, index) => {\n    const optionB = optionsB[index]\n    return areEqual(optionA, optionB)\n  })\n}\n","import { useRef, useEffect, useState, useCallback } from 'react'\nimport { arePluginsEqual, canUseDOM } from './utils'\nimport EmblaCarousel, {\n  EmblaCarouselType,\n  EmblaOptionsType,\n  EmblaPluginType,\n} from 'embla-carousel'\n\ntype EmblaViewportRefType = <ViewportElement extends HTMLElement>(\n  instance: ViewportElement | null,\n) => void\n\nexport type UseEmblaCarouselType = [\n  EmblaViewportRefType,\n  EmblaCarouselType | undefined,\n]\n\nfunction useEmblaCarousel(\n  options: EmblaOptionsType = {},\n  plugins: EmblaPluginType[] = [],\n): UseEmblaCarouselType {\n  const optionsHandler = useRef(EmblaCarousel.optionsHandler())\n  const storedOptions = useRef(options)\n  const storedPlugins = useRef(plugins)\n  const [embla, setEmbla] = useState<EmblaCarouselType>()\n  const [viewport, setViewport] = useState<HTMLElement>()\n\n  const reInit = useCallback(() => {\n    if (embla) embla.reInit(storedOptions.current, storedPlugins.current)\n  }, [embla])\n\n  useEffect(() => {\n    if (canUseDOM() && viewport) {\n      EmblaCarousel.globalOptions = useEmblaCarousel.globalOptions\n      const newEmbla = EmblaCarousel(\n        viewport,\n        storedOptions.current,\n        storedPlugins.current,\n      )\n      setEmbla(newEmbla)\n      return () => newEmbla.destroy()\n    } else {\n      setEmbla(undefined)\n    }\n  }, [viewport, setEmbla])\n\n  useEffect(() => {\n    if (optionsHandler.current.areEqual(storedOptions.current, options)) return\n\n    storedOptions.current = options\n    reInit()\n  }, [options, reInit])\n\n  useEffect(() => {\n    if (arePluginsEqual(storedPlugins.current, plugins)) return\n\n    storedPlugins.current = plugins\n    reInit()\n  }, [plugins, reInit])\n\n  return [<EmblaViewportRefType>setViewport, embla]\n}\n\nuseEmblaCarousel.globalOptions = <EmblaOptionsType | undefined>undefined\n\nexport default useEmblaCarousel\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}