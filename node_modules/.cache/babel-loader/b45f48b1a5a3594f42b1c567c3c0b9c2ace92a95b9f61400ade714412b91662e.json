{"ast":null,"code":"import _slicedToArray from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n/**\n * For using in `sx` prop to sort the breakpoint from low to high.\n * Note: this function does not work and will not support multiple units.\n *       e.g. input: { '@container (min-width:300px)': '1rem', '@container (min-width:40rem)': '2rem' }\n *            output: { '@container (min-width:40rem)': '2rem', '@container (min-width:300px)': '1rem' } // since 40 < 300 eventhough 40rem > 300px\n */\nexport function sortContainerQueries(theme, css) {\n  if (!theme.containerQueries) {\n    return css;\n  }\n  var sorted = Object.keys(css).filter(function (key) {\n    return key.startsWith('@container');\n  }).sort(function (a, b) {\n    var _a$match, _b$match;\n    var regex = /min-width:\\s*([0-9.]+)/;\n    return +(((_a$match = a.match(regex)) === null || _a$match === void 0 ? void 0 : _a$match[1]) || 0) - +(((_b$match = b.match(regex)) === null || _b$match === void 0 ? void 0 : _b$match[1]) || 0);\n  });\n  if (!sorted.length) {\n    return css;\n  }\n  return sorted.reduce(function (acc, key) {\n    var value = css[key];\n    delete acc[key];\n    acc[key] = value;\n    return acc;\n  }, _objectSpread({}, css));\n}\nexport function isCqShorthand(breakpointKeys, value) {\n  return value === '@' || value.startsWith('@') && (breakpointKeys.some(function (key) {\n    return value.startsWith(\"@\".concat(key));\n  }) || !!value.match(/^@\\d/));\n}\nexport function getContainerQuery(theme, shorthand) {\n  var matches = shorthand.match(/^@([^/]+)?\\/?(.+)?$/);\n  if (!matches) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"MUI: The provided shorthand \".concat(\"(\".concat(shorthand, \")\"), \" is invalid. The format should be `@<breakpoint | number>` or `@<breakpoint | number>/<container>`.\\n\") + 'For example, `@sm` or `@600` or `@40rem/sidebar`.' : _formatMuiErrorMessage(18, \"(\".concat(shorthand, \")\")));\n    }\n    return null;\n  }\n  var _matches = _slicedToArray(matches, 3),\n    containerQuery = _matches[1],\n    containerName = _matches[2];\n  var value = Number.isNaN(+containerQuery) ? containerQuery || 0 : +containerQuery;\n  return theme.containerQueries(containerName).up(value);\n}\nexport default function cssContainerQueries(themeInput) {\n  var toContainerQuery = function toContainerQuery(mediaQuery, name) {\n    return mediaQuery.replace('@media', name ? \"@container \".concat(name) : '@container');\n  };\n  function attachCq(node, name) {\n    node.up = function () {\n      var _themeInput$breakpoin;\n      return toContainerQuery((_themeInput$breakpoin = themeInput.breakpoints).up.apply(_themeInput$breakpoin, arguments), name);\n    };\n    node.down = function () {\n      var _themeInput$breakpoin2;\n      return toContainerQuery((_themeInput$breakpoin2 = themeInput.breakpoints).down.apply(_themeInput$breakpoin2, arguments), name);\n    };\n    node.between = function () {\n      var _themeInput$breakpoin3;\n      return toContainerQuery((_themeInput$breakpoin3 = themeInput.breakpoints).between.apply(_themeInput$breakpoin3, arguments), name);\n    };\n    node.only = function () {\n      var _themeInput$breakpoin4;\n      return toContainerQuery((_themeInput$breakpoin4 = themeInput.breakpoints).only.apply(_themeInput$breakpoin4, arguments), name);\n    };\n    node.not = function () {\n      var _themeInput$breakpoin5;\n      var result = toContainerQuery((_themeInput$breakpoin5 = themeInput.breakpoints).not.apply(_themeInput$breakpoin5, arguments), name);\n      if (result.includes('not all and')) {\n        // `@container` does not work with `not all and`, so need to invert the logic\n        return result.replace('not all and ', '').replace('min-width:', 'width<').replace('max-width:', 'width>').replace('and', 'or');\n      }\n      return result;\n    };\n  }\n  var node = {};\n  var containerQueries = function containerQueries(name) {\n    attachCq(node, name);\n    return node;\n  };\n  attachCq(containerQueries);\n  return _objectSpread(_objectSpread({}, themeInput), {}, {\n    containerQueries: containerQueries\n  });\n}","map":{"version":3,"names":["_formatMuiErrorMessage","sortContainerQueries","theme","css","containerQueries","sorted","Object","keys","filter","key","startsWith","sort","a","b","_a$match","_b$match","regex","match","length","reduce","acc","value","_objectSpread","isCqShorthand","breakpointKeys","some","concat","getContainerQuery","shorthand","matches","process","env","NODE_ENV","Error","_matches","_slicedToArray","containerQuery","containerName","Number","isNaN","up","cssContainerQueries","themeInput","toContainerQuery","mediaQuery","name","replace","attachCq","node","_themeInput$breakpoin","breakpoints","apply","arguments","down","_themeInput$breakpoin2","between","_themeInput$breakpoin3","only","_themeInput$breakpoin4","not","_themeInput$breakpoin5","result","includes"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mui/system/esm/cssContainerQueries/cssContainerQueries.js"],"sourcesContent":["import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n/**\n * For using in `sx` prop to sort the breakpoint from low to high.\n * Note: this function does not work and will not support multiple units.\n *       e.g. input: { '@container (min-width:300px)': '1rem', '@container (min-width:40rem)': '2rem' }\n *            output: { '@container (min-width:40rem)': '2rem', '@container (min-width:300px)': '1rem' } // since 40 < 300 eventhough 40rem > 300px\n */\nexport function sortContainerQueries(theme, css) {\n  if (!theme.containerQueries) {\n    return css;\n  }\n  const sorted = Object.keys(css).filter(key => key.startsWith('@container')).sort((a, b) => {\n    const regex = /min-width:\\s*([0-9.]+)/;\n    return +(a.match(regex)?.[1] || 0) - +(b.match(regex)?.[1] || 0);\n  });\n  if (!sorted.length) {\n    return css;\n  }\n  return sorted.reduce((acc, key) => {\n    const value = css[key];\n    delete acc[key];\n    acc[key] = value;\n    return acc;\n  }, {\n    ...css\n  });\n}\nexport function isCqShorthand(breakpointKeys, value) {\n  return value === '@' || value.startsWith('@') && (breakpointKeys.some(key => value.startsWith(`@${key}`)) || !!value.match(/^@\\d/));\n}\nexport function getContainerQuery(theme, shorthand) {\n  const matches = shorthand.match(/^@([^/]+)?\\/?(.+)?$/);\n  if (!matches) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The provided shorthand ${`(${shorthand})`} is invalid. The format should be \\`@<breakpoint | number>\\` or \\`@<breakpoint | number>/<container>\\`.\\n` + 'For example, `@sm` or `@600` or `@40rem/sidebar`.' : _formatMuiErrorMessage(18, `(${shorthand})`));\n    }\n    return null;\n  }\n  const [, containerQuery, containerName] = matches;\n  const value = Number.isNaN(+containerQuery) ? containerQuery || 0 : +containerQuery;\n  return theme.containerQueries(containerName).up(value);\n}\nexport default function cssContainerQueries(themeInput) {\n  const toContainerQuery = (mediaQuery, name) => mediaQuery.replace('@media', name ? `@container ${name}` : '@container');\n  function attachCq(node, name) {\n    node.up = (...args) => toContainerQuery(themeInput.breakpoints.up(...args), name);\n    node.down = (...args) => toContainerQuery(themeInput.breakpoints.down(...args), name);\n    node.between = (...args) => toContainerQuery(themeInput.breakpoints.between(...args), name);\n    node.only = (...args) => toContainerQuery(themeInput.breakpoints.only(...args), name);\n    node.not = (...args) => {\n      const result = toContainerQuery(themeInput.breakpoints.not(...args), name);\n      if (result.includes('not all and')) {\n        // `@container` does not work with `not all and`, so need to invert the logic\n        return result.replace('not all and ', '').replace('min-width:', 'width<').replace('max-width:', 'width>').replace('and', 'or');\n      }\n      return result;\n    };\n  }\n  const node = {};\n  const containerQueries = name => {\n    attachCq(node, name);\n    return node;\n  };\n  attachCq(containerQueries);\n  return {\n    ...themeInput,\n    containerQueries\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}