{"ast":null,"code":"'use client';\n\nimport { useRef, useState, useEffect } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.mjs';\nimport { useWindowScroll } from '../use-window-scroll/use-window-scroll.mjs';\nconst isFixed = (current, fixedAt) => current <= fixedAt;\nconst isPinnedOrReleased = (current, fixedAt, isCurrentlyPinnedRef, isScrollingUp, onPin, onRelease) => {\n  const isInFixedPosition = isFixed(current, fixedAt);\n  if (isInFixedPosition && !isCurrentlyPinnedRef.current) {\n    isCurrentlyPinnedRef.current = true;\n    onPin?.();\n  } else if (!isInFixedPosition && isScrollingUp && !isCurrentlyPinnedRef.current) {\n    isCurrentlyPinnedRef.current = true;\n    onPin?.();\n  } else if (!isInFixedPosition && isCurrentlyPinnedRef.current) {\n    isCurrentlyPinnedRef.current = false;\n    onRelease?.();\n  }\n};\nconst useScrollDirection = () => {\n  const [lastScrollTop, setLastScrollTop] = useState(0);\n  const [isScrollingUp, setIsScrollingUp] = useState(false);\n  const [isResizing, setIsResizing] = useState(false);\n  useEffect(() => {\n    let resizeTimer;\n    const onResize = () => {\n      setIsResizing(true);\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => {\n        setIsResizing(false);\n      }, 300);\n    };\n    const onScroll = () => {\n      if (isResizing) {\n        return;\n      }\n      const currentScrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      setIsScrollingUp(currentScrollTop < lastScrollTop);\n      setLastScrollTop(currentScrollTop);\n    };\n    window.addEventListener(\"scroll\", onScroll);\n    window.addEventListener(\"resize\", onResize);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, [lastScrollTop, isResizing]);\n  return isScrollingUp;\n};\nfunction useHeadroom({\n  fixedAt = 0,\n  onPin,\n  onFix,\n  onRelease\n} = {}) {\n  const isCurrentlyPinnedRef = useRef(false);\n  const isScrollingUp = useScrollDirection();\n  const [{\n    y: scrollPosition\n  }] = useWindowScroll();\n  useIsomorphicEffect(() => {\n    isPinnedOrReleased(scrollPosition, fixedAt, isCurrentlyPinnedRef, isScrollingUp, onPin, onRelease);\n  }, [scrollPosition]);\n  useIsomorphicEffect(() => {\n    if (isFixed(scrollPosition, fixedAt)) {\n      onFix?.();\n    }\n  }, [scrollPosition, fixedAt, onFix]);\n  if (isFixed(scrollPosition, fixedAt) || isScrollingUp) {\n    return true;\n  }\n  return false;\n}\nexport { isFixed, isPinnedOrReleased, useHeadroom, useScrollDirection };","map":{"version":3,"names":["isFixed","current","fixedAt","isPinnedOrReleased","isCurrentlyPinnedRef","isScrollingUp","onPin","onRelease","isInFixedPosition","useScrollDirection","lastScrollTop","setLastScrollTop","useState","setIsScrollingUp","isResizing","setIsResizing","useEffect","resizeTimer","onResize","clearTimeout","setTimeout","onScroll","currentScrollTop","window","pageYOffset","document","documentElement","scrollTop","addEventListener","removeEventListener","useHeadroom","onFix","useRef","y","scrollPosition","useWindowScroll","useIsomorphicEffect"],"sources":["/Users/clarencechau/Documents/projects/personal-website/clarencechau.github.io/node_modules/@mantine/hooks/src/use-headroom/use-headroom.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\nimport { useWindowScroll } from '../use-window-scroll/use-window-scroll';\n\nexport const isFixed = (current: number, fixedAt: number) => current <= fixedAt;\nexport const isPinned = (current: number, previous: number) => current <= previous;\nexport const isReleased = (current: number, previous: number, fixedAt: number) =>\n  !isPinned(current, previous) && !isFixed(current, fixedAt);\n\nexport const isPinnedOrReleased = (\n  current: number,\n  fixedAt: number,\n  isCurrentlyPinnedRef: React.MutableRefObject<boolean>,\n  isScrollingUp: boolean,\n  onPin?: () => void,\n  onRelease?: () => void\n) => {\n  const isInFixedPosition = isFixed(current, fixedAt);\n  if (isInFixedPosition && !isCurrentlyPinnedRef.current) {\n    isCurrentlyPinnedRef.current = true;\n    onPin?.();\n  } else if (!isInFixedPosition && isScrollingUp && !isCurrentlyPinnedRef.current) {\n    isCurrentlyPinnedRef.current = true;\n    onPin?.();\n  } else if (!isInFixedPosition && isCurrentlyPinnedRef.current) {\n    isCurrentlyPinnedRef.current = false;\n    onRelease?.();\n  }\n};\n\nexport const useScrollDirection = () => {\n  const [lastScrollTop, setLastScrollTop] = useState(0);\n  const [isScrollingUp, setIsScrollingUp] = useState(false);\n  const [isResizing, setIsResizing] = useState(false);\n\n  useEffect(() => {\n    let resizeTimer: NodeJS.Timeout | undefined;\n\n    const onResize = () => {\n      setIsResizing(true);\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => {\n        setIsResizing(false);\n      }, 300); // Reset the resizing flag after a timeout\n    };\n\n    const onScroll = () => {\n      if (isResizing) {\n        return; // Skip scroll events if resizing is in progress\n      }\n      const currentScrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      setIsScrollingUp(currentScrollTop < lastScrollTop);\n      setLastScrollTop(currentScrollTop);\n    };\n\n    window.addEventListener('scroll', onScroll);\n    window.addEventListener('resize', onResize);\n\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n      window.removeEventListener('resize', onResize);\n    };\n  }, [lastScrollTop, isResizing]);\n\n  return isScrollingUp;\n};\n\ninterface UseHeadroomInput {\n  /** Number in px at which element should be fixed */\n  fixedAt?: number;\n\n  /** Called when element is pinned */\n  onPin?: () => void;\n\n  /** Called when element is at fixed position */\n  onFix?: () => void;\n\n  /** Called when element is unpinned */\n  onRelease?: () => void;\n}\n\nexport function useHeadroom({ fixedAt = 0, onPin, onFix, onRelease }: UseHeadroomInput = {}) {\n  const isCurrentlyPinnedRef = useRef(false);\n  const isScrollingUp = useScrollDirection();\n  const [{ y: scrollPosition }] = useWindowScroll();\n\n  useIsomorphicEffect(() => {\n    isPinnedOrReleased(\n      scrollPosition,\n      fixedAt,\n      isCurrentlyPinnedRef,\n      isScrollingUp,\n      onPin,\n      onRelease\n    );\n  }, [scrollPosition]);\n\n  useIsomorphicEffect(() => {\n    if (isFixed(scrollPosition, fixedAt)) {\n      onFix?.();\n    }\n  }, [scrollPosition, fixedAt, onFix]);\n\n  if (isFixed(scrollPosition, fixedAt) || isScrollingUp) {\n    return true;\n  }\n\n  return false;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}